(()=>{"use strict";var n={402:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".content-box-container {\n  width: 100%;\n  height: 100vh;\n  display: grid;\n  grid-template: 65px 1fr 100px / 1fr;\n  background-color: white;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.content-box-container::-webkit-scrollbar {\n  display: none;\n}\n\n.material-symbols-outlined {\n  font-variation-settings:\n  'FILL' 0,\n  'wght' 400,\n  'GRAD' 200,\n  'opsz' 48;\n  font-size: 1.85rem;\n}\n\n.content-box-title {\n  justify-content: center;\n  align-items: center;\n  gap: 11px;\n  grid-area: 1 / 1 / 2 / -1;\n  color: white;\n  background-color: var(--accent-3);\n  font-size: 2rem;\n  font-family: 'PT Mono', monospace;\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25);\n}\n\n@media (min-width: 650px) {\n  .content-box-container {\n    max-width: 950px;\n    max-height: 550px;\n    grid-template: 65px 1fr / 190px 1fr;\n    box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  }\n\n  .content-box-title {\n    justify-content: start;\n    padding-left: 25px;\n    padding-top: 4px;\n  }\n}\n\n@media (min-width: 850px) {\n  .content-box-container {\n    grid-template: 65px 1fr / 225px 1fr;\n  }\n\n  .material-symbols-outlined {\n    font-size: 2.2rem;\n  }\n\n  .content-box-title {\n    font-size: 2.3rem;\n  }\n}\n\n@media (min-width: 1600px) {\n  .content-box-container {\n    max-width: 1150px;\n    max-height: 600px;\n    grid-template: 65px 1fr / 250px 1fr;\n  }\n\n  .material-symbols-outlined {\n    font-size: 2.3rem;\n  }\n\n  .content-box-title {\n    font-size: 2.4rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/components/contentBox/contentBox.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,aAAa;EACb,aAAa;EACb,mCAAmC;EACnC,uBAAuB;EACvB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE;;;;WAIS;EACT,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,yBAAyB;EACzB,YAAY;EACZ,iCAAiC;EACjC,eAAe;EACf,iCAAiC;EACjC,2CAA2C;AAC7C;;AAEA;EACE;IACE,gBAAgB;IAChB,iBAAiB;IACjB,mCAAmC;IACnC,6CAA6C;EAC/C;;EAEA;IACE,sBAAsB;IACtB,kBAAkB;IAClB,gBAAgB;EAClB;AACF;;AAEA;EACE;IACE,mCAAmC;EACrC;;EAEA;IACE,iBAAiB;EACnB;;EAEA;IACE,iBAAiB;EACnB;AACF;;AAEA;EACE;IACE,iBAAiB;IACjB,iBAAiB;IACjB,mCAAmC;EACrC;;EAEA;IACE,iBAAiB;EACnB;;EAEA;IACE,iBAAiB;EACnB;AACF",sourcesContent:[".content-box-container {\n  width: 100%;\n  height: 100vh;\n  display: grid;\n  grid-template: 65px 1fr 100px / 1fr;\n  background-color: white;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.content-box-container::-webkit-scrollbar {\n  display: none;\n}\n\n.material-symbols-outlined {\n  font-variation-settings:\n  'FILL' 0,\n  'wght' 400,\n  'GRAD' 200,\n  'opsz' 48;\n  font-size: 1.85rem;\n}\n\n.content-box-title {\n  justify-content: center;\n  align-items: center;\n  gap: 11px;\n  grid-area: 1 / 1 / 2 / -1;\n  color: white;\n  background-color: var(--accent-3);\n  font-size: 2rem;\n  font-family: 'PT Mono', monospace;\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25);\n}\n\n@media (min-width: 650px) {\n  .content-box-container {\n    max-width: 950px;\n    max-height: 550px;\n    grid-template: 65px 1fr / 190px 1fr;\n    box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  }\n\n  .content-box-title {\n    justify-content: start;\n    padding-left: 25px;\n    padding-top: 4px;\n  }\n}\n\n@media (min-width: 850px) {\n  .content-box-container {\n    grid-template: 65px 1fr / 225px 1fr;\n  }\n\n  .material-symbols-outlined {\n    font-size: 2.2rem;\n  }\n\n  .content-box-title {\n    font-size: 2.3rem;\n  }\n}\n\n@media (min-width: 1600px) {\n  .content-box-container {\n    max-width: 1150px;\n    max-height: 600px;\n    grid-template: 65px 1fr / 250px 1fr;\n  }\n\n  .material-symbols-outlined {\n    font-size: 2.3rem;\n  }\n\n  .content-box-title {\n    font-size: 2.4rem;\n  }\n}\n"],sourceRoot:""}]);const s=i},52:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".del-confirmation-container {\n  width: 255px;\n  height: 140px;\n  gap: 35px;\n  background-color: white;\n  padding: 10px 15px;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.del-confirmation-msg {\n  font-size: 1.25rem;\n}\n\n.del-confirmation-btns-container {\n  gap: 15px;\n}\n\n.del-confirmation-no-btn,\n.del-confirmation-yes-btn {\n  width: 100px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.del-confirmation-no-btn:hover,\n.del-confirmation-yes-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.del-confirmation-no-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.del-confirmation-yes-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.del-confirmation-no-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.del-confirmation-yes-btn:hover {\n  background-color: var(--accent-1);\n}\n\n\n\n","",{version:3,sources:["webpack://./src/components/delConfirmation/delConfirmation.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,aAAa;EACb,SAAS;EACT,uBAAuB;EACvB,kBAAkB;EAClB,+BAA+B;EAC/B,kBAAkB;EAClB,6CAA6C;EAC7C,eAAe;EACf,QAAQ;EACR,SAAS;EACT,gCAAgC;AAClC;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,SAAS;AACX;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;EACf,uBAAuB;EACvB,eAAe;AACjB;;AAEA;;EAEE,YAAY;EACZ,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;AACnC",sourcesContent:[".del-confirmation-container {\n  width: 255px;\n  height: 140px;\n  gap: 35px;\n  background-color: white;\n  padding: 10px 15px;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.del-confirmation-msg {\n  font-size: 1.25rem;\n}\n\n.del-confirmation-btns-container {\n  gap: 15px;\n}\n\n.del-confirmation-no-btn,\n.del-confirmation-yes-btn {\n  width: 100px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.del-confirmation-no-btn:hover,\n.del-confirmation-yes-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.del-confirmation-no-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.del-confirmation-yes-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.del-confirmation-no-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.del-confirmation-yes-btn:hover {\n  background-color: var(--accent-1);\n}\n\n\n\n"],sourceRoot:""}]);const s=i},193:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".form-holder {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.form-container {\n  width: 325px;\n  height: min(585px, 95%);\n  display: grid;\n  grid-template-rows: 65px 1fr;\n  gap: 5px;\n  background-color: white;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.form-container::-webkit-scrollbar {\n  display: none;\n}\n\n.project-fields-height {\n  height: min(245px, 95%);\n}\n\n.form-top-container {\n  grid-row: 1 / 2;\n  background-color: var(--accent-3);\n  border-radius: 8px 8px 0 0;\n}\n\n.form-todo-btn,\n.form-project-btn {\n  width: clamp(50%, 100%, 100%);\n  height: 100%;\n  color: white;\n  background-color: transparent;\n  border: none;\n  border-bottom: 4px solid white;\n  outline: none;\n  font-size: 1.2rem;\n  transition: .5s;\n  cursor: pointer;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.form-fields-container {\n  grid-row: 2 / 3;\n}\n\n.form-middle-container {\n  align-items: center;\n  justify-content: start;\n  padding: 0px 15px;\n}\n\n.form-title-input,\n.form-notes-input {\n  width: 100%;\n  border: none;\n  border-bottom: 4px solid rgba(0, 0, 0, 0.05);\n  outline: none;\n  resize: none;\n  padding: 15px 10px 10px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.form-title-input::-webkit-scrollbar,\n.form-notes-input::-webkit-scrollbar {\n  display: none;\n}\n\n.form-title-input {\n  height: 75px;\n}\n\n.form-notes-input {\n  height: 165px;\n}\n\n.form-due-date-container,\n.form-priority-container {\n  gap: 13px;\n  margin-top: 24px;\n}\n\n.form-due-date-label {\n  font-size: 1.05rem;\n}\n\n.form-due-date-input {\n  width: 134px;\n  border-radius: 5px;\n  border: 2px solid rgba(26, 167, 125, 0.5);\n  outline: none;\n  padding: 5px 10px;\n  color: black;\n}\n\n.form-due-date-input::-webkit-calendar-picker-indicator {\n  position: absolute;\n  padding: 5px 0 5px 98px;\n  cursor: pointer;\n}\n\n.form-priority-title {\n  font-size: 1.15rem;\n}\n\n.form-priority-options-container {\n  gap: 4px;\n}\n\n.form-priority-label {\n  border-radius: 4px;\n  padding: 1px 7px 3px 7px;\n  text-align: center;\n  transition: .25s;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.l-prio-label {\n  border: 1px solid var(--low-prio);\n  color: var(--low-prio);\n}\n\n.m-prio-label {\n  border: 1px solid var(--medium-prio);\n  color: var(--medium-prio);\n}\n\n.h-prio-label {\n  border: 1px solid var(--high-prio);\n  color: var(--high-prio);\n  margin-right: 18px;\n}\n\n.form-priority-radio:checked + .l-prio-label {\n  border: 1px solid var(--low-prio);\n  background-color: var(--low-prio);\n}\n\n.form-priority-radio:checked + .m-prio-label {\n  border: 1px solid var(--medium-prio);\n  background-color: var(--medium-prio);\n}\n\n.form-priority-radio:checked + .h-prio-label {\n  border: 1px solid var(--high-prio);\n  background-color: var(--high-prio);\n}\n\n.form-priority-radio:checked + .form-priority-label {\n  transform: scale(1.1);\n  color: white;\n}\n\n.form-bottom-container {\n  gap: 15px;\n  margin: 35px 0 25px 0;\n}\n\n.form-ok-btn,\n.form-cancel-btn {\n  width: 105px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.form-ok-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.form-cancel-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.form-ok-btn:hover,\n.form-cancel-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.form-ok-btn:hover {\n  background-color: var(--accent-1);\n}\n\n.form-cancel-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.border-btm-b {\n  border-bottom: 5px solid var(--accent-1);\n}\n\n.border-btm-w {\n  border-bottom: 5px solid white;\n}\n\n.no-pointer-events {\n  pointer-events: none;\n}","",{version:3,sources:["webpack://./src/components/form/form.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;AACV;;AAEA;EACE,YAAY;EACZ,uBAAuB;EACvB,aAAa;EACb,4BAA4B;EAC5B,QAAQ;EACR,uBAAuB;EACvB,6CAA6C;EAC7C,+BAA+B;EAC/B,kBAAkB;EAClB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,iCAAiC;EACjC,0BAA0B;AAC5B;;AAEA;;EAEE,6BAA6B;EAC7B,YAAY;EACZ,YAAY;EACZ,6BAA6B;EAC7B,YAAY;EACZ,8BAA8B;EAC9B,aAAa;EACb,iBAAiB;EACjB,eAAe;EACf,eAAe;EACf,qCAAqC;AACvC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,4CAA4C;EAC5C,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;;EAEE,aAAa;AACf;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,yCAAyC;EACzC,aAAa;EACb,iBAAiB;EACjB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,QAAQ;AACV;;AAEA;EACE,kBAAkB;EAClB,wBAAwB;EACxB,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,oCAAoC;EACpC,yBAAyB;AAC3B;;AAEA;EACE,kCAAkC;EAClC,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,iCAAiC;EACjC,iCAAiC;AACnC;;AAEA;EACE,oCAAoC;EACpC,oCAAoC;AACtC;;AAEA;EACE,kCAAkC;EAClC,kCAAkC;AACpC;;AAEA;EACE,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,SAAS;EACT,qBAAqB;AACvB;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;EACf,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;EACZ,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,wCAAwC;AAC1C;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,oBAAoB;AACtB",sourcesContent:[".form-holder {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.form-container {\n  width: 325px;\n  height: min(585px, 95%);\n  display: grid;\n  grid-template-rows: 65px 1fr;\n  gap: 5px;\n  background-color: white;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.form-container::-webkit-scrollbar {\n  display: none;\n}\n\n.project-fields-height {\n  height: min(245px, 95%);\n}\n\n.form-top-container {\n  grid-row: 1 / 2;\n  background-color: var(--accent-3);\n  border-radius: 8px 8px 0 0;\n}\n\n.form-todo-btn,\n.form-project-btn {\n  width: clamp(50%, 100%, 100%);\n  height: 100%;\n  color: white;\n  background-color: transparent;\n  border: none;\n  border-bottom: 4px solid white;\n  outline: none;\n  font-size: 1.2rem;\n  transition: .5s;\n  cursor: pointer;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.form-fields-container {\n  grid-row: 2 / 3;\n}\n\n.form-middle-container {\n  align-items: center;\n  justify-content: start;\n  padding: 0px 15px;\n}\n\n.form-title-input,\n.form-notes-input {\n  width: 100%;\n  border: none;\n  border-bottom: 4px solid rgba(0, 0, 0, 0.05);\n  outline: none;\n  resize: none;\n  padding: 15px 10px 10px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.form-title-input::-webkit-scrollbar,\n.form-notes-input::-webkit-scrollbar {\n  display: none;\n}\n\n.form-title-input {\n  height: 75px;\n}\n\n.form-notes-input {\n  height: 165px;\n}\n\n.form-due-date-container,\n.form-priority-container {\n  gap: 13px;\n  margin-top: 24px;\n}\n\n.form-due-date-label {\n  font-size: 1.05rem;\n}\n\n.form-due-date-input {\n  width: 134px;\n  border-radius: 5px;\n  border: 2px solid rgba(26, 167, 125, 0.5);\n  outline: none;\n  padding: 5px 10px;\n  color: black;\n}\n\n.form-due-date-input::-webkit-calendar-picker-indicator {\n  position: absolute;\n  padding: 5px 0 5px 98px;\n  cursor: pointer;\n}\n\n.form-priority-title {\n  font-size: 1.15rem;\n}\n\n.form-priority-options-container {\n  gap: 4px;\n}\n\n.form-priority-label {\n  border-radius: 4px;\n  padding: 1px 7px 3px 7px;\n  text-align: center;\n  transition: .25s;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.l-prio-label {\n  border: 1px solid var(--low-prio);\n  color: var(--low-prio);\n}\n\n.m-prio-label {\n  border: 1px solid var(--medium-prio);\n  color: var(--medium-prio);\n}\n\n.h-prio-label {\n  border: 1px solid var(--high-prio);\n  color: var(--high-prio);\n  margin-right: 18px;\n}\n\n.form-priority-radio:checked + .l-prio-label {\n  border: 1px solid var(--low-prio);\n  background-color: var(--low-prio);\n}\n\n.form-priority-radio:checked + .m-prio-label {\n  border: 1px solid var(--medium-prio);\n  background-color: var(--medium-prio);\n}\n\n.form-priority-radio:checked + .h-prio-label {\n  border: 1px solid var(--high-prio);\n  background-color: var(--high-prio);\n}\n\n.form-priority-radio:checked + .form-priority-label {\n  transform: scale(1.1);\n  color: white;\n}\n\n.form-bottom-container {\n  gap: 15px;\n  margin: 35px 0 25px 0;\n}\n\n.form-ok-btn,\n.form-cancel-btn {\n  width: 105px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.form-ok-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.form-cancel-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.form-ok-btn:hover,\n.form-cancel-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.form-ok-btn:hover {\n  background-color: var(--accent-1);\n}\n\n.form-cancel-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.border-btm-b {\n  border-bottom: 5px solid var(--accent-1);\n}\n\n.border-btm-w {\n  border-bottom: 5px solid white;\n}\n\n.no-pointer-events {\n  pointer-events: none;\n}"],sourceRoot:""}]);const s=i},417:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".holder-box-container {\n  grid-area: 2 / 1 / 3 / -1;\n  justify-content: start;\n  align-items: center;\n  padding: 15px 10px;\n  font-family: 'Lato', sans-serif;\n  font-size: 1.15rem;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.holder-box-container::-webkit-scrollbar {\n  display: none;\n}\n\n@media (min-width: 650px) {\n  .holder-box-container {\n    grid-area: 2 / 2 / -1 / -1;\n    padding: 15px;\n  }\n}","",{version:3,sources:["webpack://./src/components/holderBox/holderBox.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;EAClB,+BAA+B;EAC/B,kBAAkB;EAClB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE;IACE,0BAA0B;IAC1B,aAAa;EACf;AACF",sourcesContent:[".holder-box-container {\n  grid-area: 2 / 1 / 3 / -1;\n  justify-content: start;\n  align-items: center;\n  padding: 15px 10px;\n  font-family: 'Lato', sans-serif;\n  font-size: 1.15rem;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.holder-box-container::-webkit-scrollbar {\n  display: none;\n}\n\n@media (min-width: 650px) {\n  .holder-box-container {\n    grid-area: 2 / 2 / -1 / -1;\n    padding: 15px;\n  }\n}"],sourceRoot:""}]);const s=i},851:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".navbar-container {\n  width: min(430px, 90%);\n  height: 70px;\n  place-self: center;\n  grid-area: 3 / 1 / -1 / -1;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 15px;\n  background-color: var(--accent-4);\n  border-radius: 14px;\n}\n\n.navbar-btn {\n  height: 47px;\n  width: 47px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 15px;\n  font-size: 1.3rem;\n  color: var(--accent-4);\n  transition: background-color .2s, transform .4s;\n  cursor: pointer;\n  opacity: 0;\n}\n\n.navbar-btn:hover {\n  transform: translateY(-4px);\n}\n\n.navbar-btn-selected {\n  background-color: var(--accent-1);\n}\n\n.navbar-btn-selected.navbar-btn:hover {\n  transform: none;\n}\n\n.navbar-btn-icon {\n  width: 27px;\n  height: 27px;\n}\n\n.navbar-plus-btn {\n  margin-bottom: 4px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 2.8rem;\n  color: var(--accent-1);\n  opacity: 1;\n}\n\n.navbar-plus-btn:hover {\n  color: var(--accent-1);\n}\n\n@media (min-width: 650px) {\n  .navbar-container {\n    width: 100%;\n    height: 100%;\n    place-self: auto;\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0 0 20px 0;\n    background-color: var(--accent-5);\n    box-shadow: 1px 0 4px 0 rgba(0, 0, 0, 0.25);\n    border-radius: 0;\n  }\n\n  .navbar-btn {\n    width: 100%;\n    height: 65px;\n    justify-content: start;\n    align-items: center;\n    padding-left: 15px;\n    position: relative;\n    font-size: 1.1rem;\n    font-family: 'Montserrat', sans-serif;\n    border-radius: 0;\n    border-right: 6px solid transparent;\n    transition: .55s;\n    opacity: 1;\n  }\n\n  .navbar-btn:hover,\n  .navbar-btn-selected  {\n    transform: none;\n    background-color: var(--accent-6);\n  }\n\n  .navbar-btn-selected {\n    border-right: 6px solid var(--accent-1);\n  }\n\n  .navbar-btn-grp-1::before {\n    width: 25px;\n    height: 25px;\n    content: attr(data-count);\n    position: absolute;\n    right: 20px;\n    top: 50%;\n    transform: translateY(-50%);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-bottom: 1px;\n    border-radius: 50%;\n    font-size: .85rem;\n    font-weight: bold;\n    color: var(--accent-3);\n    background-color: white;\n  }\n\n  .navbar-plus-btn {\n    width: 80px;\n    justify-content: center;\n    margin-top: auto;\n    padding-left: 0px;\n    font-size: 2.95rem;\n    color: var(--accent-1);\n    border: none;\n  }\n\n  .navbar-plus-btn:hover {\n    transform: scale(1.3);\n    color: var(--accent-1);\n    background-color: transparent;\n  }\n}\n\n@media (min-width: 850px) {\n  .navbar-btn {\n    padding-left: 20px;\n    font-size: 1.15rem;\n  }\n\n  .navbar-btn-grp-1::before {\n    right: 24px;\n  }\n\n  .navbar-plus-btn {\n    font-size: 2.95rem;\n  }\n}\n\n/* Animations */\n.animate-navbar-move-in {\n  animation: navbar-move-in 1s normal 0s 1 forwards;\n}\n\n@keyframes navbar-move-in {\n  from {\n    transform: translateY(150%);\n  }\n  \n  to {\n    transform: translateY(0);\n  }\n}\n\n.animate-btn-appear {\n  animation: btn-appear 1s normal .5s 1 forwards;\n}\n\n@keyframes btn-appear {\n  to {\n    opacity: 1;\n  }\n}\n","",{version:3,sources:["webpack://./src/components/navbar/navbar.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,YAAY;EACZ,kBAAkB;EAClB,0BAA0B;EAC1B,8BAA8B;EAC9B,mBAAmB;EACnB,eAAe;EACf,iCAAiC;EACjC,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,uBAAuB;EACvB,mBAAmB;EACnB,mBAAmB;EACnB,iBAAiB;EACjB,sBAAsB;EACtB,+CAA+C;EAC/C,eAAe;EACf,UAAU;AACZ;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,qCAAqC;EACrC,iBAAiB;EACjB,sBAAsB;EACtB,UAAU;AACZ;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE;IACE,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,wBAAwB;IACxB,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,iCAAiC;IACjC,2CAA2C;IAC3C,gBAAgB;EAClB;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,mBAAmB;IACnB,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;IACjB,qCAAqC;IACrC,gBAAgB;IAChB,mCAAmC;IACnC,gBAAgB;IAChB,UAAU;EACZ;;EAEA;;IAEE,eAAe;IACf,iCAAiC;EACnC;;EAEA;IACE,uCAAuC;EACzC;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,yBAAyB;IACzB,kBAAkB;IAClB,WAAW;IACX,QAAQ;IACR,2BAA2B;IAC3B,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;IACjB,sBAAsB;IACtB,uBAAuB;EACzB;;EAEA;IACE,WAAW;IACX,uBAAuB;IACvB,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,sBAAsB;IACtB,YAAY;EACd;;EAEA;IACE,qBAAqB;IACrB,sBAAsB;IACtB,6BAA6B;EAC/B;AACF;;AAEA;EACE;IACE,kBAAkB;IAClB,kBAAkB;EACpB;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,kBAAkB;EACpB;AACF;;AAEA,eAAe;AACf;EACE,iDAAiD;AACnD;;AAEA;EACE;IACE,2BAA2B;EAC7B;;EAEA;IACE,wBAAwB;EAC1B;AACF;;AAEA;EACE,8CAA8C;AAChD;;AAEA;EACE;IACE,UAAU;EACZ;AACF",sourcesContent:[".navbar-container {\n  width: min(430px, 90%);\n  height: 70px;\n  place-self: center;\n  grid-area: 3 / 1 / -1 / -1;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 15px;\n  background-color: var(--accent-4);\n  border-radius: 14px;\n}\n\n.navbar-btn {\n  height: 47px;\n  width: 47px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 15px;\n  font-size: 1.3rem;\n  color: var(--accent-4);\n  transition: background-color .2s, transform .4s;\n  cursor: pointer;\n  opacity: 0;\n}\n\n.navbar-btn:hover {\n  transform: translateY(-4px);\n}\n\n.navbar-btn-selected {\n  background-color: var(--accent-1);\n}\n\n.navbar-btn-selected.navbar-btn:hover {\n  transform: none;\n}\n\n.navbar-btn-icon {\n  width: 27px;\n  height: 27px;\n}\n\n.navbar-plus-btn {\n  margin-bottom: 4px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 2.8rem;\n  color: var(--accent-1);\n  opacity: 1;\n}\n\n.navbar-plus-btn:hover {\n  color: var(--accent-1);\n}\n\n@media (min-width: 650px) {\n  .navbar-container {\n    width: 100%;\n    height: 100%;\n    place-self: auto;\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0 0 20px 0;\n    background-color: var(--accent-5);\n    box-shadow: 1px 0 4px 0 rgba(0, 0, 0, 0.25);\n    border-radius: 0;\n  }\n\n  .navbar-btn {\n    width: 100%;\n    height: 65px;\n    justify-content: start;\n    align-items: center;\n    padding-left: 15px;\n    position: relative;\n    font-size: 1.1rem;\n    font-family: 'Montserrat', sans-serif;\n    border-radius: 0;\n    border-right: 6px solid transparent;\n    transition: .55s;\n    opacity: 1;\n  }\n\n  .navbar-btn:hover,\n  .navbar-btn-selected  {\n    transform: none;\n    background-color: var(--accent-6);\n  }\n\n  .navbar-btn-selected {\n    border-right: 6px solid var(--accent-1);\n  }\n\n  .navbar-btn-grp-1::before {\n    width: 25px;\n    height: 25px;\n    content: attr(data-count);\n    position: absolute;\n    right: 20px;\n    top: 50%;\n    transform: translateY(-50%);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-bottom: 1px;\n    border-radius: 50%;\n    font-size: .85rem;\n    font-weight: bold;\n    color: var(--accent-3);\n    background-color: white;\n  }\n\n  .navbar-plus-btn {\n    width: 80px;\n    justify-content: center;\n    margin-top: auto;\n    padding-left: 0px;\n    font-size: 2.95rem;\n    color: var(--accent-1);\n    border: none;\n  }\n\n  .navbar-plus-btn:hover {\n    transform: scale(1.3);\n    color: var(--accent-1);\n    background-color: transparent;\n  }\n}\n\n@media (min-width: 850px) {\n  .navbar-btn {\n    padding-left: 20px;\n    font-size: 1.15rem;\n  }\n\n  .navbar-btn-grp-1::before {\n    right: 24px;\n  }\n\n  .navbar-plus-btn {\n    font-size: 2.95rem;\n  }\n}\n\n/* Animations */\n.animate-navbar-move-in {\n  animation: navbar-move-in 1s normal 0s 1 forwards;\n}\n\n@keyframes navbar-move-in {\n  from {\n    transform: translateY(150%);\n  }\n  \n  to {\n    transform: translateY(0);\n  }\n}\n\n.animate-btn-appear {\n  animation: btn-appear 1s normal .5s 1 forwards;\n}\n\n@keyframes btn-appear {\n  to {\n    opacity: 1;\n  }\n}\n"],sourceRoot:""}]);const s=i},735:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".project-container {\n  width: 100%;\n  gap: 18px;\n  background-color: var(--accent-2);\n  padding: 12px 10px;\n  margin-bottom: 7px;\n  transition: .25s;\n  font-family: 'Lato', sans-serif;\n}\n\n.project-container:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.project-container:last-child {\n  margin-bottom: 0;\n}\n\n.project-title {\n  width: 185px;\n  margin-right: auto;\n  font-size: 1rem;\n  overflow-wrap: anywhere;\n}\n\n.project-add-icon {\n  margin-left: 2px;\n}\n\n.project-add-icon,\n.project-edit-icon,\n.project-trash-icon {\n  width: var(--icon-width-1);\n  height: var(--icon-height-1);\n}\n\n.project-add-icon:hover,\n.project-edit-icon:hover,\n.project-trash-icon:hover {\n  transform: scale(1.1);\n}\n\n.project-container,\n.project-add-icon,\n.project-edit-icon,\n.project-trash-icon {\n  cursor: pointer;\n}\n\n@media (min-width: 380px) {\n  .project-title {\n    width: 215px;\n  }\n}\n\n@media (min-width: 450px) {\n  .project-title {\n    width: 250px;\n  }\n}\n\n@media (min-width: 500px) {\n  .project-title {\n    width: 285px;\n  }\n}\n\n@media (min-width: 650px) {\n  .project-title {\n    width: 275px;\n  }\n}\n\n@media (min-width: 750px) {\n  .project-title {\n    width: 325px;\n  }\n}\n\n@media (min-width: 850px) {\n  .project-title {\n    width: 370px;\n  }\n}\n\n","",{version:3,sources:["webpack://./src/components/project/project.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,SAAS;EACT,iCAAiC;EACjC,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,+BAA+B;AACjC;;AAEA;EACE,6CAA6C;EAC7C,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;;EAGE,0BAA0B;EAC1B,4BAA4B;AAC9B;;AAEA;;;EAGE,qBAAqB;AACvB;;AAEA;;;;EAIE,eAAe;AACjB;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF",sourcesContent:[".project-container {\n  width: 100%;\n  gap: 18px;\n  background-color: var(--accent-2);\n  padding: 12px 10px;\n  margin-bottom: 7px;\n  transition: .25s;\n  font-family: 'Lato', sans-serif;\n}\n\n.project-container:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.project-container:last-child {\n  margin-bottom: 0;\n}\n\n.project-title {\n  width: 185px;\n  margin-right: auto;\n  font-size: 1rem;\n  overflow-wrap: anywhere;\n}\n\n.project-add-icon {\n  margin-left: 2px;\n}\n\n.project-add-icon,\n.project-edit-icon,\n.project-trash-icon {\n  width: var(--icon-width-1);\n  height: var(--icon-height-1);\n}\n\n.project-add-icon:hover,\n.project-edit-icon:hover,\n.project-trash-icon:hover {\n  transform: scale(1.1);\n}\n\n.project-container,\n.project-add-icon,\n.project-edit-icon,\n.project-trash-icon {\n  cursor: pointer;\n}\n\n@media (min-width: 380px) {\n  .project-title {\n    width: 215px;\n  }\n}\n\n@media (min-width: 450px) {\n  .project-title {\n    width: 250px;\n  }\n}\n\n@media (min-width: 500px) {\n  .project-title {\n    width: 285px;\n  }\n}\n\n@media (min-width: 650px) {\n  .project-title {\n    width: 275px;\n  }\n}\n\n@media (min-width: 750px) {\n  .project-title {\n    width: 325px;\n  }\n}\n\n@media (min-width: 850px) {\n  .project-title {\n    width: 370px;\n  }\n}\n\n"],sourceRoot:""}]);const s=i},117:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),s=t(667),A=t.n(s),d=new URL(t(173),t.b),c=i()(o()),l=A()(d);c.push([n.id,".project-selector-container {\n  height: min(425px, 95%);\n  width: 335px;\n  display: grid;\n  grid-template-rows: 65px 1fr 95px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n.project-selector-container::-webkit-scrollbar {\n  display: none;\n}\n\n.project-selector-title {\n  background-color: var(--accent-3);\n  border-radius: 8px 8px 0 0;\n  color: white;\n  font-size: 1.2rem;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.project-selector-projects-box {\n  width: 100%;\n  align-items: center;\n  padding: 15px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.project-selector-projects-box::-webkit-scrollbar {\n  display: none;\n}\n\n.project-selector-btns-container {\n  gap: 15px;\n  margin: 35px 0 25px 0;\n}\n\n.project-selector-cancel-btn, \n.project-selector-ok-btn {\n  width: 105px;\n  padding: 10px 20px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.project-selector-cancel-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.project-selector-ok-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.project-selector-cancel-btn:hover, \n.project-selector-ok-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.project-selector-cancel-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.project-selector-ok-btn:hover {\n  background-color: var(--accent-1);\n}\n\n.project-option {\n  width: 100%;\n  height: auto;\n  background-color: var(--accent-2);\n  padding: 13px 10px;\n  margin-bottom: 8px;\n  transition: .25s;\n  font-family: 'Lato', sans-serif;\n  position: relative;\n  cursor: pointer;\n}\n\n.project-option:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.project-option:last-child {\n  margin-bottom: 0;\n}\n\n.project-option-title {\n  width: 205px; \n  margin-right: auto;\n  overflow-wrap: anywhere;\n}\n\n.project-option-checkbox {\n  height: 20px;\n  width: 20px;\n  position: absolute;\n  top: 50%;\n  right: 15px;\n  transform: translateY(-50%);\n  background-color: white;\n  border: 2px solid var(--accent-1);\n  border-radius: 5px;\n}\n\n.selected .project-option-checkbox {\n  background-color: var(--accent-1);\n}\n\n.selected .project-option-checkbox::before {\n  height: 12px;\n  width: 12px;\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-image: url("+l+");\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n@media (min-width: 950px) {\n  .project-selector-container {\n    height: min(500px, 95%);\n    width: 380px;\n  }\n\n  .project-selector-title {\n    font-size: 1.25rem;\n  }\n\n  .project-option-title {\n    width: 265px; \n  }\n}","",{version:3,sources:["webpack://./src/components/projectSelector/projectSelector.css"],names:[],mappings:"AAAA;EACE,uBAAuB;EACvB,YAAY;EACZ,aAAa;EACb,iCAAiC;EACjC,eAAe;EACf,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,uBAAuB;EACvB,+BAA+B;EAC/B,kBAAkB;EAClB,6CAA6C;EAC7C,gBAAgB;EAChB,wBAAwB,GAAG,mCAAmC;EAC9D,qBAAqB,GAAG,+BAA+B;AACzD;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iCAAiC;EACjC,0BAA0B;EAC1B,YAAY;EACZ,iBAAiB;EACjB,qCAAqC;AACvC;;AAEA;EACE,WAAW;EACX,mBAAmB;EACnB,aAAa;EACb,gBAAgB;EAChB,wBAAwB,GAAG,mCAAmC;EAC9D,qBAAqB,GAAG,+BAA+B;AACzD;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE,SAAS;EACT,qBAAqB;AACvB;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,mBAAmB;EACnB,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;EACf,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;EACZ,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iCAAiC;EACjC,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,+BAA+B;EAC/B,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,6CAA6C;EAC7C,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,WAAW;EACX,2BAA2B;EAC3B,uBAAuB;EACvB,iCAAiC;EACjC,kBAAkB;AACpB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,yDAA2C;EAC3C,sBAAsB;EACtB,4BAA4B;AAC9B;;AAEA;EACE;IACE,uBAAuB;IACvB,YAAY;EACd;;EAEA;IACE,kBAAkB;EACpB;;EAEA;IACE,YAAY;EACd;AACF",sourcesContent:[".project-selector-container {\n  height: min(425px, 95%);\n  width: 335px;\n  display: grid;\n  grid-template-rows: 65px 1fr 95px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n.project-selector-container::-webkit-scrollbar {\n  display: none;\n}\n\n.project-selector-title {\n  background-color: var(--accent-3);\n  border-radius: 8px 8px 0 0;\n  color: white;\n  font-size: 1.2rem;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.project-selector-projects-box {\n  width: 100%;\n  align-items: center;\n  padding: 15px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.project-selector-projects-box::-webkit-scrollbar {\n  display: none;\n}\n\n.project-selector-btns-container {\n  gap: 15px;\n  margin: 35px 0 25px 0;\n}\n\n.project-selector-cancel-btn, \n.project-selector-ok-btn {\n  width: 105px;\n  padding: 10px 20px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.project-selector-cancel-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.project-selector-ok-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.project-selector-cancel-btn:hover, \n.project-selector-ok-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.project-selector-cancel-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.project-selector-ok-btn:hover {\n  background-color: var(--accent-1);\n}\n\n.project-option {\n  width: 100%;\n  height: auto;\n  background-color: var(--accent-2);\n  padding: 13px 10px;\n  margin-bottom: 8px;\n  transition: .25s;\n  font-family: 'Lato', sans-serif;\n  position: relative;\n  cursor: pointer;\n}\n\n.project-option:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.project-option:last-child {\n  margin-bottom: 0;\n}\n\n.project-option-title {\n  width: 205px; \n  margin-right: auto;\n  overflow-wrap: anywhere;\n}\n\n.project-option-checkbox {\n  height: 20px;\n  width: 20px;\n  position: absolute;\n  top: 50%;\n  right: 15px;\n  transform: translateY(-50%);\n  background-color: white;\n  border: 2px solid var(--accent-1);\n  border-radius: 5px;\n}\n\n.selected .project-option-checkbox {\n  background-color: var(--accent-1);\n}\n\n.selected .project-option-checkbox::before {\n  height: 12px;\n  width: 12px;\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-image: url(\"./assets/check.png\");\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n@media (min-width: 950px) {\n  .project-selector-container {\n    height: min(500px, 95%);\n    width: 380px;\n  }\n\n  .project-selector-title {\n    font-size: 1.25rem;\n  }\n\n  .project-option-title {\n    width: 265px; \n  }\n}"],sourceRoot:""}]);const p=c},729:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),s=t(667),A=t.n(s),d=new URL(t(918),t.b),c=i()(o()),l=A()(d);c.push([n.id,'.item-container {\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  background-color: var(--accent-2);\n  padding: 14px 10px;\n  margin-bottom: 8px;\n  transition: .25s;\n  font-family: \'Lato\', sans-serif;\n  position: relative;\n}\n\n.item-container:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.item-container:last-child {\n  margin-bottom: 0;\n}\n\n.item-container:has(.item-checkbox.checked)::before {\n  width: calc(100% - 34px - 34px);\n  height: 100%;\n  content: "";\n  position: absolute;\n  left: 34px;\n  right: 34px;\n  background-color: rgba(240, 240, 240, 0.8);\n  filter: blur(1px);\n}\n\n.item-left-container {\n  gap: 12px;\n}\n\n.item-right-container {\n  gap: 14px;\n}\n\n.item-checkbox {\n  width: 19px;\n  height: 19px;\n  position:relative;\n  border: 2px solid var(--accent-1);\n  border-radius: 5px;\n  background-color: white;\n  font-size: 1.2rem;\n}\n\n.checked {\n  background-color: var(--accent-1);\n}\n\n.checked.item-checkbox::before {\n  width: 11px;\n  height: 11px;\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-image: url('+l+");\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n.no-pointer-events {\n  pointer-events: none;\n  cursor: auto;\n}\n\n.item-container.no-pointer-events .item-checkbox,\n.item-container.no-pointer-events .item-trash-icon {\n  pointer-events: all;\n  cursor: pointer;\n}\n\n.item-title {\n  width: 100px;\n  font-size: 1rem;\n  overflow-wrap: anywhere;\n}\n\n.item-due-date {\n  font-size: .9rem;\n}\n\n.item-edit-icon {\n  margin-left: 2px;\n}\n\n.item-edit-icon,\n.item-move-icon,\n.item-trash-icon  {\n  width: var(--icon-width-1);\n  height: var(--icon-height-1);\n  transition: .35s;\n}\n\n.item-edit-icon:hover,\n.item-move-icon:hover,\n.item-trash-icon:hover {\n  transform: scale(1.1);\n}\n\n.item-container,\n.item-checkbox,\n.item-edit-icon,\n.item-move-icon,\n.item-trash-icon {\n  cursor: pointer;\n}\n\n@media (min-width: 380px) {\n  .item-title {\n    width: 125px;\n  }\n}\n\n@media (min-width: 400px) {\n  .item-title {\n    width: 145px;\n  }\n}\n\n@media (min-width: 450px) {\n  .item-title {\n    width: 185px;\n  }\n}\n\n@media (min-width: 500px) {\n  .item-title {\n    width: 240px;\n  }\n}\n\n@media (min-width: 650px) {\n  .item-title {\n    width: 175px;\n  }\n  \n  .item-right-container {\n    gap: 18px;\n  }\n}\n\n@media (min-width: 750px) {\n  .item-title {\n    width: 270px;\n  }\n}\n\n@media (min-width: 850px) {\n  .item-title {\n    width: 330px;\n  }\n}\n\n","",{version:3,sources:["webpack://./src/components/todo/todo.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,8BAA8B;EAC9B,mBAAmB;EACnB,SAAS;EACT,iCAAiC;EACjC,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,+BAA+B;EAC/B,kBAAkB;AACpB;;AAEA;EACE,6CAA6C;EAC7C,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,+BAA+B;EAC/B,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,0CAA0C;EAC1C,iBAAiB;AACnB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,iCAAiC;EACjC,kBAAkB;EAClB,uBAAuB;EACvB,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,yDAA2C;EAC3C,sBAAsB;EACtB,4BAA4B;AAC9B;;AAEA;EACE,oBAAoB;EACpB,YAAY;AACd;;AAEA;;EAEE,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;;EAGE,0BAA0B;EAC1B,4BAA4B;EAC5B,gBAAgB;AAClB;;AAEA;;;EAGE,qBAAqB;AACvB;;AAEA;;;;;EAKE,eAAe;AACjB;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;;EAEA;IACE,SAAS;EACX;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF",sourcesContent:['.item-container {\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  background-color: var(--accent-2);\n  padding: 14px 10px;\n  margin-bottom: 8px;\n  transition: .25s;\n  font-family: \'Lato\', sans-serif;\n  position: relative;\n}\n\n.item-container:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.item-container:last-child {\n  margin-bottom: 0;\n}\n\n.item-container:has(.item-checkbox.checked)::before {\n  width: calc(100% - 34px - 34px);\n  height: 100%;\n  content: "";\n  position: absolute;\n  left: 34px;\n  right: 34px;\n  background-color: rgba(240, 240, 240, 0.8);\n  filter: blur(1px);\n}\n\n.item-left-container {\n  gap: 12px;\n}\n\n.item-right-container {\n  gap: 14px;\n}\n\n.item-checkbox {\n  width: 19px;\n  height: 19px;\n  position:relative;\n  border: 2px solid var(--accent-1);\n  border-radius: 5px;\n  background-color: white;\n  font-size: 1.2rem;\n}\n\n.checked {\n  background-color: var(--accent-1);\n}\n\n.checked.item-checkbox::before {\n  width: 11px;\n  height: 11px;\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-image: url("./assets/check.png");\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n.no-pointer-events {\n  pointer-events: none;\n  cursor: auto;\n}\n\n.item-container.no-pointer-events .item-checkbox,\n.item-container.no-pointer-events .item-trash-icon {\n  pointer-events: all;\n  cursor: pointer;\n}\n\n.item-title {\n  width: 100px;\n  font-size: 1rem;\n  overflow-wrap: anywhere;\n}\n\n.item-due-date {\n  font-size: .9rem;\n}\n\n.item-edit-icon {\n  margin-left: 2px;\n}\n\n.item-edit-icon,\n.item-move-icon,\n.item-trash-icon  {\n  width: var(--icon-width-1);\n  height: var(--icon-height-1);\n  transition: .35s;\n}\n\n.item-edit-icon:hover,\n.item-move-icon:hover,\n.item-trash-icon:hover {\n  transform: scale(1.1);\n}\n\n.item-container,\n.item-checkbox,\n.item-edit-icon,\n.item-move-icon,\n.item-trash-icon {\n  cursor: pointer;\n}\n\n@media (min-width: 380px) {\n  .item-title {\n    width: 125px;\n  }\n}\n\n@media (min-width: 400px) {\n  .item-title {\n    width: 145px;\n  }\n}\n\n@media (min-width: 450px) {\n  .item-title {\n    width: 185px;\n  }\n}\n\n@media (min-width: 500px) {\n  .item-title {\n    width: 240px;\n  }\n}\n\n@media (min-width: 650px) {\n  .item-title {\n    width: 175px;\n  }\n  \n  .item-right-container {\n    gap: 18px;\n  }\n}\n\n@media (min-width: 750px) {\n  .item-title {\n    width: 270px;\n  }\n}\n\n@media (min-width: 850px) {\n  .item-title {\n    width: 330px;\n  }\n}\n\n'],sourceRoot:""}]);const p=c},497:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".details-container {\n  width: 315px;\n  height: min(505px, 95%);\n  display: grid;\n  grid-template-rows: 40px 1fr;\n  gap: 20px;\n  padding: 10px 15px;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  background-color: white;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50.5%, -50.5%); /* translate(-50%, -50%) makes it blurry. This is a trick for quick fix */\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n.details-container::-webkit-scrollbar {\n  display: none;\n}\n\n.details-top-container {\n  justify-content: space-between;\n  align-items: center;\n}\n\n.details-bottom-container {\n  display: grid;\n  gap: 20px;\n  grid-template-rows: 90px 230px 60px;\n  justify-items: center;\n  align-items: center;\n  padding: 0 10px;\n}\n\n.details-priority {\n  border-radius: 4px;\n  padding: 1px 10px 3px 10px;\n  color: white;\n  font-weight: bold;\n}\n\n.details-priority-l {\n  border: 1px solid var(--low-prio);\n  background-color: var(--low-prio);\n}\n\n.details-priority-m {\n  border: 1px solid var(--medium-prio);\n  background-color: var(--medium-prio);\n}\n\n.details-priority-h {\n  border: 1px solid var(--high-prio);\n  background-color: var(--high-prio);\n}\n\n.details-title,\n.details-notes {\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  overflow-wrap: anywhere;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.details-title::-webkit-scrollbar,\n.details-notes::-webkit-scrollbar {\n  display: none;\n}\n\n.details-title {\n  text-align: center;\n  font-size: 1.1rem;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.details-notes {\n  text-align: left;\n}\n\n.details-close-btn {\n  padding: 10px 20px;\n  border: 1px solid var(--accent-1);\n  border-radius: 5px;\n  color: var(--accent-1);\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n}\n\n.details-close-btn:hover {\n  color: white;\n  background-color: var(--accent-1);\n  transform: translateY(-5px);\n  font-weight: bold;\n}","",{version:3,sources:["webpack://./src/components/todoDetails/todoDetails.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,uBAAuB;EACvB,aAAa;EACb,4BAA4B;EAC5B,SAAS;EACT,kBAAkB;EAClB,+BAA+B;EAC/B,kBAAkB;EAClB,uBAAuB;EACvB,6CAA6C;EAC7C,eAAe;EACf,QAAQ;EACR,SAAS;EACT,oCAAoC,EAAE,yEAAyE;EAC/G,gBAAgB;EAChB,wBAAwB,GAAG,mCAAmC;EAC9D,qBAAqB,GAAG,+BAA+B;AACzD;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,mCAAmC;EACnC,qBAAqB;EACrB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,0BAA0B;EAC1B,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;EACjC,iCAAiC;AACnC;;AAEA;EACE,oCAAoC;EACpC,oCAAoC;AACtC;;AAEA;EACE,kCAAkC;EAClC,kCAAkC;AACpC;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,uBAAuB;EACvB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;;EAEE,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,qCAAqC;AACvC;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,iCAAiC;EACjC,kBAAkB;EAClB,sBAAsB;EACtB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,iCAAiC;EACjC,2BAA2B;EAC3B,iBAAiB;AACnB",sourcesContent:[".details-container {\n  width: 315px;\n  height: min(505px, 95%);\n  display: grid;\n  grid-template-rows: 40px 1fr;\n  gap: 20px;\n  padding: 10px 15px;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  background-color: white;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50.5%, -50.5%); /* translate(-50%, -50%) makes it blurry. This is a trick for quick fix */\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n.details-container::-webkit-scrollbar {\n  display: none;\n}\n\n.details-top-container {\n  justify-content: space-between;\n  align-items: center;\n}\n\n.details-bottom-container {\n  display: grid;\n  gap: 20px;\n  grid-template-rows: 90px 230px 60px;\n  justify-items: center;\n  align-items: center;\n  padding: 0 10px;\n}\n\n.details-priority {\n  border-radius: 4px;\n  padding: 1px 10px 3px 10px;\n  color: white;\n  font-weight: bold;\n}\n\n.details-priority-l {\n  border: 1px solid var(--low-prio);\n  background-color: var(--low-prio);\n}\n\n.details-priority-m {\n  border: 1px solid var(--medium-prio);\n  background-color: var(--medium-prio);\n}\n\n.details-priority-h {\n  border: 1px solid var(--high-prio);\n  background-color: var(--high-prio);\n}\n\n.details-title,\n.details-notes {\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  overflow-wrap: anywhere;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.details-title::-webkit-scrollbar,\n.details-notes::-webkit-scrollbar {\n  display: none;\n}\n\n.details-title {\n  text-align: center;\n  font-size: 1.1rem;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.details-notes {\n  text-align: left;\n}\n\n.details-close-btn {\n  padding: 10px 20px;\n  border: 1px solid var(--accent-1);\n  border-radius: 5px;\n  color: var(--accent-1);\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n}\n\n.details-close-btn:hover {\n  color: white;\n  background-color: var(--accent-1);\n  transform: translateY(-5px);\n  font-weight: bold;\n}"],sourceRoot:""}]);const s=i},618:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),s=t(667),A=t.n(s),d=new URL(t(360),t.b),c=i()(o());c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Alatsi&family=JetBrains+Mono:wght@200&family=Lato:wght@100;300&family=Lobster&family=Montserrat+Alternates:wght@300;400&family=Montserrat:wght@200;300;400&family=PT+Mono&family=Press+Start+2P&display=swap);"]);var l=A()(d);c.push([n.id,":root {\n  --accent-1: rgb(26, 167, 125);\n  --accent-2: rgb(240, 240, 240);\n  --accent-3: #cc7e97;\n  --accent-4: rgb(35, 35, 35);\n  --accent-5: rgba(220, 220, 220, 0.5);\n  --accent-6: rgba(205, 205, 205, 0.65);\n  --accent-7: rgb(255, 62, 101);\n  --low-prio: rgb(40, 207, 40);\n  --medium-prio: rgb(255, 187, 60);\n  --high-prio: rgb(255, 70, 70);\n  --icon-width-1: 20px;\n  --icon-height-1: 20px;\n}\n\n.app-container {\n  height: 100vh;\n  background-image: url("+l+");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n","",{version:3,sources:["webpack://./src/container/app.css"],names:[],mappings:"AAEA;EACE,6BAA6B;EAC7B,8BAA8B;EAC9B,mBAAmB;EACnB,2BAA2B;EAC3B,oCAAoC;EACpC,qCAAqC;EACrC,6BAA6B;EAC7B,4BAA4B;EAC5B,gCAAgC;EAChC,6BAA6B;EAC7B,oBAAoB;EACpB,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,yDAAkD;EAClD,sBAAsB;EACtB,4BAA4B;EAC5B,2BAA2B;AAC7B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Alatsi&family=JetBrains+Mono:wght@200&family=Lato:wght@100;300&family=Lobster&family=Montserrat+Alternates:wght@300;400&family=Montserrat:wght@200;300;400&family=PT+Mono&family=Press+Start+2P&display=swap');\n\n:root {\n  --accent-1: rgb(26, 167, 125);\n  --accent-2: rgb(240, 240, 240);\n  --accent-3: #cc7e97;\n  --accent-4: rgb(35, 35, 35);\n  --accent-5: rgba(220, 220, 220, 0.5);\n  --accent-6: rgba(205, 205, 205, 0.65);\n  --accent-7: rgb(255, 62, 101);\n  --low-prio: rgb(40, 207, 40);\n  --medium-prio: rgb(255, 187, 60);\n  --high-prio: rgb(255, 70, 70);\n  --icon-width-1: 20px;\n  --icon-height-1: 20px;\n}\n\n.app-container {\n  height: 100vh;\n  background-image: url(\"./assets/bg-wallpaper.jpg\");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n"],sourceRoot:""}]);const p=c},424:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/* Utilities */\n.flex {\n  display: flex;\n}\n\n.flex-column {\n  display: flex;\n  flex-direction: column;\n}\n\n.center {\n  justify-content: center;\n  align-items: center;\n}\n\n.hidden {\n  opacity: 0;\n}\n\n.disabled {\n  filter: blur(1px) grayscale(50%) brightness(50%);\n  pointer-events: none;\n}\n\n.unclickable {\n  pointer-events: none;\n}\n\n.animate-appear {\n  animation: appear .7s 0s 1 forwards;\n}\n\n@keyframes appear {\n  0% {\n    opacity: 0;\n  }\n  \n  100% {\n    opacity: 1;\n  }\n}\n\n.animate-delete {\n  animation: delete 1.2s 0s 1 forwards;\n}\n\n@keyframes delete {\n  to {\n    transform: translateX(150%);\n  }\n}\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;;EAGE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA,cAAc;AACd;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,gDAAgD;EAChD,oBAAoB;AACtB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE;IACE,UAAU;EACZ;;EAEA;IACE,UAAU;EACZ;AACF;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE;IACE,2BAA2B;EAC7B;AACF",sourcesContent:["*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/* Utilities */\n.flex {\n  display: flex;\n}\n\n.flex-column {\n  display: flex;\n  flex-direction: column;\n}\n\n.center {\n  justify-content: center;\n  align-items: center;\n}\n\n.hidden {\n  opacity: 0;\n}\n\n.disabled {\n  filter: blur(1px) grayscale(50%) brightness(50%);\n  pointer-events: none;\n}\n\n.unclickable {\n  pointer-events: none;\n}\n\n.animate-appear {\n  animation: appear .7s 0s 1 forwards;\n}\n\n@keyframes appear {\n  0% {\n    opacity: 0;\n  }\n  \n  100% {\n    opacity: 1;\n  }\n}\n\n.animate-delete {\n  animation: delete 1.2s 0s 1 forwards;\n}\n\n@keyframes delete {\n  to {\n    transform: translateX(150%);\n  }\n}\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);r&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var A=n[s],d=r.base?A[0]+r.base:A[0],c=a[d]||0,l="".concat(d," ").concat(c);a[d]=c+1;var p=t(l),m={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=o(m,r);r.byIndex=s,e.splice(s,0,{identifier:l,updater:u,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var A=r(n,o),d=0;d<a.length;d++){var c=t(a[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},173:(n,e,t)=>{n.exports=t.p+"a568f6f1b577d3fd06b6.png"},918:(n,e,t)=>{n.exports=t.p+"a568f6f1b577d3fd06b6.png"},360:(n,e,t)=>{n.exports=t.p+"cbb11493c646967b47db.jpg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),s=t(565),A=t.n(s),d=t(216),c=t.n(d),l=t(589),p=t.n(l),m=t(618),u={};function f(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function C(n){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},C(n)}function b(n){return f(1,arguments),n instanceof Date||"object"===C(n)&&"[object Date]"===Object.prototype.toString.call(n)}function h(n){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},h(n)}function g(n){f(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"===h(n)&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function E(n){if(f(1,arguments),!b(n)&&"number"!=typeof n)return!1;var e=g(n);return!isNaN(Number(e))}function B(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function v(n,e){f(2,arguments);var t=g(n).getTime(),r=B(e);return new Date(t+r)}function x(n,e){f(2,arguments);var t=B(e);return v(n,-t)}u.styleTagTransform=p(),u.setAttributes=A(),u.insert=i().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=c(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;var w=864e5;function y(n){f(1,arguments);var e=1,t=g(n),r=t.getUTCDay(),o=(r<e?7:0)+r-e;return t.setUTCDate(t.getUTCDate()-o),t.setUTCHours(0,0,0,0),t}function k(n){f(1,arguments);var e=g(n),t=e.getUTCFullYear(),r=new Date(0);r.setUTCFullYear(t+1,0,4),r.setUTCHours(0,0,0,0);var o=y(r),a=new Date(0);a.setUTCFullYear(t,0,4),a.setUTCHours(0,0,0,0);var i=y(a);return e.getTime()>=o.getTime()?t+1:e.getTime()>=i.getTime()?t:t-1}function j(n){f(1,arguments);var e=k(n),t=new Date(0);t.setUTCFullYear(e,0,4),t.setUTCHours(0,0,0,0);var r=y(t);return r}var T=6048e5,I={};function L(){return I}function Y(n,e){var t,r,o,a,i,s,A,d;f(1,arguments);var c=L(),l=B(null!==(t=null!==(r=null!==(o=null!==(a=null==e?void 0:e.weekStartsOn)&&void 0!==a?a:null==e||null===(i=e.locale)||void 0===i||null===(s=i.options)||void 0===s?void 0:s.weekStartsOn)&&void 0!==o?o:c.weekStartsOn)&&void 0!==r?r:null===(A=c.locale)||void 0===A||null===(d=A.options)||void 0===d?void 0:d.weekStartsOn)&&void 0!==t?t:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var p=g(n),m=p.getUTCDay(),u=(m<l?7:0)+m-l;return p.setUTCDate(p.getUTCDate()-u),p.setUTCHours(0,0,0,0),p}function S(n,e){var t,r,o,a,i,s,A,d;f(1,arguments);var c=g(n),l=c.getUTCFullYear(),p=L(),m=B(null!==(t=null!==(r=null!==(o=null!==(a=null==e?void 0:e.firstWeekContainsDate)&&void 0!==a?a:null==e||null===(i=e.locale)||void 0===i||null===(s=i.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==o?o:p.firstWeekContainsDate)&&void 0!==r?r:null===(A=p.locale)||void 0===A||null===(d=A.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==t?t:1);if(!(m>=1&&m<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var u=new Date(0);u.setUTCFullYear(l+1,0,m),u.setUTCHours(0,0,0,0);var C=Y(u,e),b=new Date(0);b.setUTCFullYear(l,0,m),b.setUTCHours(0,0,0,0);var h=Y(b,e);return c.getTime()>=C.getTime()?l+1:c.getTime()>=h.getTime()?l:l-1}function D(n,e){var t,r,o,a,i,s,A,d;f(1,arguments);var c=L(),l=B(null!==(t=null!==(r=null!==(o=null!==(a=null==e?void 0:e.firstWeekContainsDate)&&void 0!==a?a:null==e||null===(i=e.locale)||void 0===i||null===(s=i.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==o?o:c.firstWeekContainsDate)&&void 0!==r?r:null===(A=c.locale)||void 0===A||null===(d=A.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==t?t:1),p=S(n,e),m=new Date(0);m.setUTCFullYear(p,0,l),m.setUTCHours(0,0,0,0);var u=Y(m,e);return u}var M=6048e5;function P(n,e){for(var t=n<0?"-":"",r=Math.abs(n).toString();r.length<e;)r="0"+r;return t+r}const W=function(n,e){var t=n.getUTCFullYear(),r=t>0?t:1-t;return P("yy"===e?r%100:r,e.length)},q=function(n,e){var t=n.getUTCMonth();return"M"===e?String(t+1):P(t+1,2)},z=function(n,e){return P(n.getUTCDate(),e.length)},Z=function(n,e){return P(n.getUTCHours()%12||12,e.length)},U=function(n,e){return P(n.getUTCHours(),e.length)},F=function(n,e){return P(n.getUTCMinutes(),e.length)},H=function(n,e){return P(n.getUTCSeconds(),e.length)},O=function(n,e){var t=e.length,r=n.getUTCMilliseconds();return P(Math.floor(r*Math.pow(10,t-3)),e.length)};var N={G:function(n,e,t){var r=n.getUTCFullYear()>0?1:0;switch(e){case"G":case"GG":case"GGG":return t.era(r,{width:"abbreviated"});case"GGGGG":return t.era(r,{width:"narrow"});default:return t.era(r,{width:"wide"})}},y:function(n,e,t){if("yo"===e){var r=n.getUTCFullYear(),o=r>0?r:1-r;return t.ordinalNumber(o,{unit:"year"})}return W(n,e)},Y:function(n,e,t,r){var o=S(n,r),a=o>0?o:1-o;return"YY"===e?P(a%100,2):"Yo"===e?t.ordinalNumber(a,{unit:"year"}):P(a,e.length)},R:function(n,e){return P(k(n),e.length)},u:function(n,e){return P(n.getUTCFullYear(),e.length)},Q:function(n,e,t){var r=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"Q":return String(r);case"QQ":return P(r,2);case"Qo":return t.ordinalNumber(r,{unit:"quarter"});case"QQQ":return t.quarter(r,{width:"abbreviated",context:"formatting"});case"QQQQQ":return t.quarter(r,{width:"narrow",context:"formatting"});default:return t.quarter(r,{width:"wide",context:"formatting"})}},q:function(n,e,t){var r=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"q":return String(r);case"qq":return P(r,2);case"qo":return t.ordinalNumber(r,{unit:"quarter"});case"qqq":return t.quarter(r,{width:"abbreviated",context:"standalone"});case"qqqqq":return t.quarter(r,{width:"narrow",context:"standalone"});default:return t.quarter(r,{width:"wide",context:"standalone"})}},M:function(n,e,t){var r=n.getUTCMonth();switch(e){case"M":case"MM":return q(n,e);case"Mo":return t.ordinalNumber(r+1,{unit:"month"});case"MMM":return t.month(r,{width:"abbreviated",context:"formatting"});case"MMMMM":return t.month(r,{width:"narrow",context:"formatting"});default:return t.month(r,{width:"wide",context:"formatting"})}},L:function(n,e,t){var r=n.getUTCMonth();switch(e){case"L":return String(r+1);case"LL":return P(r+1,2);case"Lo":return t.ordinalNumber(r+1,{unit:"month"});case"LLL":return t.month(r,{width:"abbreviated",context:"standalone"});case"LLLLL":return t.month(r,{width:"narrow",context:"standalone"});default:return t.month(r,{width:"wide",context:"standalone"})}},w:function(n,e,t,r){var o=function(n,e){f(1,arguments);var t=g(n),r=Y(t,e).getTime()-D(t,e).getTime();return Math.round(r/M)+1}(n,r);return"wo"===e?t.ordinalNumber(o,{unit:"week"}):P(o,e.length)},I:function(n,e,t){var r=function(n){f(1,arguments);var e=g(n),t=y(e).getTime()-j(e).getTime();return Math.round(t/T)+1}(n);return"Io"===e?t.ordinalNumber(r,{unit:"week"}):P(r,e.length)},d:function(n,e,t){return"do"===e?t.ordinalNumber(n.getUTCDate(),{unit:"date"}):z(n,e)},D:function(n,e,t){var r=function(n){f(1,arguments);var e=g(n),t=e.getTime();e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0);var r=e.getTime(),o=t-r;return Math.floor(o/w)+1}(n);return"Do"===e?t.ordinalNumber(r,{unit:"dayOfYear"}):P(r,e.length)},E:function(n,e,t){var r=n.getUTCDay();switch(e){case"E":case"EE":case"EEE":return t.day(r,{width:"abbreviated",context:"formatting"});case"EEEEE":return t.day(r,{width:"narrow",context:"formatting"});case"EEEEEE":return t.day(r,{width:"short",context:"formatting"});default:return t.day(r,{width:"wide",context:"formatting"})}},e:function(n,e,t,r){var o=n.getUTCDay(),a=(o-r.weekStartsOn+8)%7||7;switch(e){case"e":return String(a);case"ee":return P(a,2);case"eo":return t.ordinalNumber(a,{unit:"day"});case"eee":return t.day(o,{width:"abbreviated",context:"formatting"});case"eeeee":return t.day(o,{width:"narrow",context:"formatting"});case"eeeeee":return t.day(o,{width:"short",context:"formatting"});default:return t.day(o,{width:"wide",context:"formatting"})}},c:function(n,e,t,r){var o=n.getUTCDay(),a=(o-r.weekStartsOn+8)%7||7;switch(e){case"c":return String(a);case"cc":return P(a,e.length);case"co":return t.ordinalNumber(a,{unit:"day"});case"ccc":return t.day(o,{width:"abbreviated",context:"standalone"});case"ccccc":return t.day(o,{width:"narrow",context:"standalone"});case"cccccc":return t.day(o,{width:"short",context:"standalone"});default:return t.day(o,{width:"wide",context:"standalone"})}},i:function(n,e,t){var r=n.getUTCDay(),o=0===r?7:r;switch(e){case"i":return String(o);case"ii":return P(o,e.length);case"io":return t.ordinalNumber(o,{unit:"day"});case"iii":return t.day(r,{width:"abbreviated",context:"formatting"});case"iiiii":return t.day(r,{width:"narrow",context:"formatting"});case"iiiiii":return t.day(r,{width:"short",context:"formatting"});default:return t.day(r,{width:"wide",context:"formatting"})}},a:function(n,e,t){var r=n.getUTCHours()/12>=1?"pm":"am";switch(e){case"a":case"aa":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"aaa":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return t.dayPeriod(r,{width:"narrow",context:"formatting"});default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},b:function(n,e,t){var r,o=n.getUTCHours();switch(r=12===o?"noon":0===o?"midnight":o/12>=1?"pm":"am",e){case"b":case"bb":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"bbb":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return t.dayPeriod(r,{width:"narrow",context:"formatting"});default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},B:function(n,e,t){var r,o=n.getUTCHours();switch(r=o>=17?"evening":o>=12?"afternoon":o>=4?"morning":"night",e){case"B":case"BB":case"BBB":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"BBBBB":return t.dayPeriod(r,{width:"narrow",context:"formatting"});default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},h:function(n,e,t){if("ho"===e){var r=n.getUTCHours()%12;return 0===r&&(r=12),t.ordinalNumber(r,{unit:"hour"})}return Z(n,e)},H:function(n,e,t){return"Ho"===e?t.ordinalNumber(n.getUTCHours(),{unit:"hour"}):U(n,e)},K:function(n,e,t){var r=n.getUTCHours()%12;return"Ko"===e?t.ordinalNumber(r,{unit:"hour"}):P(r,e.length)},k:function(n,e,t){var r=n.getUTCHours();return 0===r&&(r=24),"ko"===e?t.ordinalNumber(r,{unit:"hour"}):P(r,e.length)},m:function(n,e,t){return"mo"===e?t.ordinalNumber(n.getUTCMinutes(),{unit:"minute"}):F(n,e)},s:function(n,e,t){return"so"===e?t.ordinalNumber(n.getUTCSeconds(),{unit:"second"}):H(n,e)},S:function(n,e){return O(n,e)},X:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();if(0===o)return"Z";switch(e){case"X":return R(o);case"XXXX":case"XX":return X(o);default:return X(o,":")}},x:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();switch(e){case"x":return R(o);case"xxxx":case"xx":return X(o);default:return X(o,":")}},O:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();switch(e){case"O":case"OO":case"OOO":return"GMT"+G(o,":");default:return"GMT"+X(o,":")}},z:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();switch(e){case"z":case"zz":case"zzz":return"GMT"+G(o,":");default:return"GMT"+X(o,":")}},t:function(n,e,t,r){var o=r._originalDate||n;return P(Math.floor(o.getTime()/1e3),e.length)},T:function(n,e,t,r){return P((r._originalDate||n).getTime(),e.length)}};function G(n,e){var t=n>0?"-":"+",r=Math.abs(n),o=Math.floor(r/60),a=r%60;if(0===a)return t+String(o);var i=e||"";return t+String(o)+i+P(a,2)}function R(n,e){return n%60==0?(n>0?"-":"+")+P(Math.abs(n)/60,2):X(n,e)}function X(n,e){var t=e||"",r=n>0?"-":"+",o=Math.abs(n);return r+P(Math.floor(o/60),2)+t+P(o%60,2)}const Q=N;var V=function(n,e){switch(n){case"P":return e.date({width:"short"});case"PP":return e.date({width:"medium"});case"PPP":return e.date({width:"long"});default:return e.date({width:"full"})}},J=function(n,e){switch(n){case"p":return e.time({width:"short"});case"pp":return e.time({width:"medium"});case"ppp":return e.time({width:"long"});default:return e.time({width:"full"})}};const $={p:J,P:function(n,e){var t,r=n.match(/(P+)(p+)?/)||[],o=r[1],a=r[2];if(!a)return V(n,e);switch(o){case"P":t=e.dateTime({width:"short"});break;case"PP":t=e.dateTime({width:"medium"});break;case"PPP":t=e.dateTime({width:"long"});break;default:t=e.dateTime({width:"full"})}return t.replace("{{date}}",V(o,e)).replace("{{time}}",J(a,e))}};function _(n){var e=new Date(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()));return e.setUTCFullYear(n.getFullYear()),n.getTime()-e.getTime()}var K=["D","DD"],nn=["YY","YYYY"];function en(n){return-1!==K.indexOf(n)}function tn(n){return-1!==nn.indexOf(n)}function rn(n,e,t){if("YYYY"===n)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("YY"===n)throw new RangeError("Use `yy` instead of `YY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("D"===n)throw new RangeError("Use `d` instead of `D` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("DD"===n)throw new RangeError("Use `dd` instead of `DD` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"))}var on={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function an(n){return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.width?String(e.width):n.defaultWidth,r=n.formats[t]||n.formats[n.defaultWidth];return r}}const sn={date:an({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:an({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:an({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var An={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function dn(n){return function(e,t){var r;if("formatting"===(null!=t&&t.context?String(t.context):"standalone")&&n.formattingValues){var o=n.defaultFormattingWidth||n.defaultWidth,a=null!=t&&t.width?String(t.width):o;r=n.formattingValues[a]||n.formattingValues[o]}else{var i=n.defaultWidth,s=null!=t&&t.width?String(t.width):n.defaultWidth;r=n.values[s]||n.values[i]}return r[n.argumentCallback?n.argumentCallback(e):e]}}const cn={ordinalNumber:function(n,e){var t=Number(n),r=t%100;if(r>20||r<10)switch(r%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"},era:dn({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:dn({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(n){return n-1}}),month:dn({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:dn({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:dn({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function ln(n){return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.width,o=r&&n.matchPatterns[r]||n.matchPatterns[n.defaultMatchWidth],a=e.match(o);if(!a)return null;var i,s=a[0],A=r&&n.parsePatterns[r]||n.parsePatterns[n.defaultParseWidth],d=Array.isArray(A)?mn(A,(function(n){return n.test(s)})):pn(A,(function(n){return n.test(s)}));i=n.valueCallback?n.valueCallback(d):d,i=t.valueCallback?t.valueCallback(i):i;var c=e.slice(s.length);return{value:i,rest:c}}}function pn(n,e){for(var t in n)if(n.hasOwnProperty(t)&&e(n[t]))return t}function mn(n,e){for(var t=0;t<n.length;t++)if(e(n[t]))return t}var un,fn={ordinalNumber:(un={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(n){return parseInt(n,10)}},function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=n.match(un.matchPattern);if(!t)return null;var r=t[0],o=n.match(un.parsePattern);if(!o)return null;var a=un.valueCallback?un.valueCallback(o[0]):o[0];a=e.valueCallback?e.valueCallback(a):a;var i=n.slice(r.length);return{value:a,rest:i}}),era:ln({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:ln({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(n){return n+1}}),month:ln({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:ln({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:ln({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const Cn={code:"en-US",formatDistance:function(n,e,t){var r,o=on[n];return r="string"==typeof o?o:1===e?o.one:o.other.replace("{{count}}",e.toString()),null!=t&&t.addSuffix?t.comparison&&t.comparison>0?"in "+r:r+" ago":r},formatLong:sn,formatRelative:function(n,e,t,r){return An[n]},localize:cn,match:fn,options:{weekStartsOn:0,firstWeekContainsDate:1}};var bn=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,hn=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,gn=/^'([^]*?)'?$/,En=/''/g,Bn=/[a-zA-Z]/;function vn(n){var e=n.match(gn);return e?e[1].replace(En,"'"):n}function xn(n,e){var t,r,o,a,i,s,A,d;f(1,arguments);var c=L(),l=B(null!==(t=null!==(r=null!==(o=null!==(a=null==e?void 0:e.weekStartsOn)&&void 0!==a?a:null==e||null===(i=e.locale)||void 0===i||null===(s=i.options)||void 0===s?void 0:s.weekStartsOn)&&void 0!==o?o:c.weekStartsOn)&&void 0!==r?r:null===(A=c.locale)||void 0===A||null===(d=A.options)||void 0===d?void 0:d.weekStartsOn)&&void 0!==t?t:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var p=g(n),m=p.getDay(),u=(m<l?7:0)+m-l;return p.setDate(p.getDate()-u),p.setHours(0,0,0,0),p}function wn(n,e,t){f(2,arguments);var r=xn(n,t),o=xn(e,t);return r.getTime()===o.getTime()}function yn(n,e){return f(1,arguments),wn(n,Date.now(),e)}const kn=n=>{const e=Ln();return n.filter((n=>n.getDueDate()===e))},jn=n=>n.filter((n=>{const e=`${n.getDueDate()}T00:00:00`;return yn(new Date(e),{weekStartsOn:1})})),Tn=(n,e)=>{for(const t in e)n[t]=e[t]},In=n=>{return`${n}-${e=1,t=1e6,e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e+1)+e)}`;var e,t},Ln=()=>{const n=new Date,e=String(n.getFullYear()),t=String(n.getMonth()+1),r=String(n.getDate());return`${e}-${t.padStart(2,"0")}-${r.padStart(2,"0")}`},Yn=n=>{const e=n.map((n=>({id:n.getId(),checked:n.getChecked(),title:n.getTitle(),notes:n.getNotes(),dueDate:n.getDueDate(),priority:n.getPriority()})));return e},Sn=n=>{localStorage.todosData=JSON.stringify(Yn(n.getTodosArr())),localStorage.projectsData=JSON.stringify((n=>{const e=n.map((n=>({id:n.getId(),todosData:Yn(n.getTodosArr()),title:n.getTitle()})));return e})(n.getProjectsArr()))},Dn=(n,e)=>n.getProjectsArr().filter((n=>n.getId()===e))[0],Mn=(n,e,t,r,o,a)=>{const i=a||In(e);return{getChecked:()=>n,getTitle:()=>e,getNotes:()=>t,getDueDate:()=>r,getPriority:()=>o,getId:()=>i,editChecked:()=>{n=!n},editTitle:n=>{e=n},editNotes:n=>{t=n},editDueDate:n=>{r=n},editPriority:n=>{o=n}}},Pn=n=>{const[e,t,r]=n.split("-"),o=Number(t)-1;return function(n,e,t){var r,o,a,i,s,A,d,c,l,p,m,u,C,b,h,v,w,y;f(2,arguments);var k=String(e),j=L(),T=null!==(r=null!==(o=null==t?void 0:t.locale)&&void 0!==o?o:j.locale)&&void 0!==r?r:Cn,I=B(null!==(a=null!==(i=null!==(s=null!==(A=null==t?void 0:t.firstWeekContainsDate)&&void 0!==A?A:null==t||null===(d=t.locale)||void 0===d||null===(c=d.options)||void 0===c?void 0:c.firstWeekContainsDate)&&void 0!==s?s:j.firstWeekContainsDate)&&void 0!==i?i:null===(l=j.locale)||void 0===l||null===(p=l.options)||void 0===p?void 0:p.firstWeekContainsDate)&&void 0!==a?a:1);if(!(I>=1&&I<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var Y=B(null!==(m=null!==(u=null!==(C=null!==(b=null==t?void 0:t.weekStartsOn)&&void 0!==b?b:null==t||null===(h=t.locale)||void 0===h||null===(v=h.options)||void 0===v?void 0:v.weekStartsOn)&&void 0!==C?C:j.weekStartsOn)&&void 0!==u?u:null===(w=j.locale)||void 0===w||null===(y=w.options)||void 0===y?void 0:y.weekStartsOn)&&void 0!==m?m:0);if(!(Y>=0&&Y<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!T.localize)throw new RangeError("locale must contain localize property");if(!T.formatLong)throw new RangeError("locale must contain formatLong property");var S=g(n);if(!E(S))throw new RangeError("Invalid time value");var D=_(S),M=x(S,D),P={firstWeekContainsDate:I,weekStartsOn:Y,locale:T,_originalDate:S};return k.match(hn).map((function(n){var e=n[0];return"p"===e||"P"===e?(0,$[e])(n,T.formatLong):n})).join("").match(bn).map((function(r){if("''"===r)return"'";var o=r[0];if("'"===o)return vn(r);var a=Q[o];if(a)return null!=t&&t.useAdditionalWeekYearTokens||!tn(r)||rn(r,e,String(n)),null!=t&&t.useAdditionalDayOfYearTokens||!en(r)||rn(r,e,String(n)),a(M,r,T.localize,P);if(o.match(Bn))throw new RangeError("Format string contains an unescaped latin alphabet character `"+o+"`");return r})).join("")}(new Date(e,o,r),"do MMM")},Wn=(n,e,t)=>{const r=e||In(n);let o=t||[];return{getTitle:()=>n,getTodosArr:()=>o,getId:()=>r,editTitle:e=>{n=e},pushToTodosArr:n=>{o.push(n)},removeFromTodosArr:n=>{o=o.filter((e=>e.getId()!==n))}}},qn=n=>n.map((n=>{const{checked:e,title:t,notes:r,dueDate:o,priority:a,id:i}=n;return Mn(e,t,r,o,a,i)}));var zn=t(402),Zn={};Zn.styleTagTransform=p(),Zn.setAttributes=A(),Zn.insert=i().bind(null,"head"),Zn.domAPI=o(),Zn.insertStyleElement=c(),e()(zn.Z,Zn),zn.Z&&zn.Z.locals&&zn.Z.locals;var Un=t(851),Fn={};Fn.styleTagTransform=p(),Fn.setAttributes=A(),Fn.insert=i().bind(null,"head"),Fn.domAPI=o(),Fn.insertStyleElement=c(),e()(Un.Z,Fn),Un.Z&&Un.Z.locals&&Un.Z.locals;var Hn=t(193),On={};On.styleTagTransform=p(),On.setAttributes=A(),On.insert=i().bind(null,"head"),On.domAPI=o(),On.insertStyleElement=c(),e()(Hn.Z,On),Hn.Z&&Hn.Z.locals&&Hn.Z.locals;const Nn=()=>{const n=document.querySelector(".form-title-input"),e=document.querySelector(".form-notes-input"),t=document.querySelector(".form-due-date-input"),r=document.querySelector("input[name='priority']:checked");return{titleVal:n.value,notesVal:e?e.value:null,dueDateVal:t?t.value:null,priorityVal:r?r.value:null}},Gn=()=>{const{titleVal:n,notesVal:e,dueDateVal:t,priorityVal:r}=Nn();return Mn(!1,n,e,t,r,null)},Rn=n=>{const e=Ln(),t=`${n.getDueDate()}T00:00:00`;return{isDueToday:n.getDueDate()===e,isDueThisWeek:yn(new Date(t),{weekStartsOn:1})}},Xn=()=>document.querySelector(".app-container"),Qn=()=>document.querySelector(".content-box-container"),Vn=n=>{document.querySelector("#root").append(n)};var Jn=t(417),$n={};$n.styleTagTransform=p(),$n.setAttributes=A(),$n.insert=i().bind(null,"head"),$n.domAPI=o(),$n.insertStyleElement=c(),e()(Jn.Z,$n),Jn.Z&&Jn.Z.locals&&Jn.Z.locals;const _n=n=>n.sort(((n,e)=>function(n,e){f(2,arguments);var t=g(n),r=g(e),o=t.getTime()-r.getTime();return o<0?-1:o>0?1:o}(new Date(n.getDueDate()),new Date(e.getDueDate()))));var Kn=t(729),ne={};ne.styleTagTransform=p(),ne.setAttributes=A(),ne.insert=i().bind(null,"head"),ne.domAPI=o(),ne.insertStyleElement=c(),e()(Kn.Z,ne),Kn.Z&&Kn.Z.locals&&Kn.Z.locals;var ee=t(497),te={};te.styleTagTransform=p(),te.setAttributes=A(),te.insert=i().bind(null,"head"),te.domAPI=o(),te.insertStyleElement=c(),e()(ee.Z,te),ee.Z&&ee.Z.locals&&ee.Z.locals;var re=t(52),oe={};oe.styleTagTransform=p(),oe.setAttributes=A(),oe.insert=i().bind(null,"head"),oe.domAPI=o(),oe.insertStyleElement=c(),e()(re.Z,oe),re.Z&&re.Z.locals&&re.Z.locals;const ae=n=>!n.length,ie=async(n,e,t,r)=>{n.removeFromTodosArr(e.getId()),n.getProjectsArr().forEach((n=>{n.removeFromTodosArr(e.getId())})),le(t);const{projectId:o}=r.dataset,a=document.querySelector(".navbar-container").dataset.mode;if(await ce(r),"todos"===a){const e=n.getTodosArr();ae(e)&&Ae(n)}if("day"===a){const e=n.getTodosArr(),t=kn(e);ae(t)&&Ae(n)}if("week"===a){const e=n.getTodosArr(),t=jn(e);ae(t)&&Ae(n)}if("projects"===a){const e=Dn(n,o).getTodosArr();ae(e)&&Ae(n)}},se=async(n,e,t,r)=>{n.removeFromProjectsArr(e.getId()),e.getTodosArr().forEach((e=>{n.removeFromTodosArr(e.getId())})),le(t),await ce(r);const o=n.getProjectsArr();ae(o)&&de(n)},Ae=n=>{Qn().append(Te({app:n,mode:"todos",arr:[],projectId:null}))},de=n=>{Qn().append(Te({app:n,mode:"projects",arr:[],projectId:null}))},ce=n=>{const e=Xn();return e.classList.add("unclickable"),n.classList.add("animate-delete"),new Promise((t=>{setTimeout((()=>{n.remove(),e.classList.remove("unclickable"),t()}),1e3)}))},le=n=>{n.remove(),Xn().classList.remove("disabled")},pe=n=>{tt(n),rt(n),ot(n),at(n)},me=(n,e,t,r)=>{const o=document.createElement("div"),a=document.createElement("p"),i=document.createElement("div"),s=document.createElement("button"),A=document.createElement("button");return o.classList.add("del-confirmation-container","flex-column","center","animate-appear"),a.classList.add("del-confirmation-msg"),a.innerText="Confirm Delete?",i.classList.add("del-confirmation-btns-container","flex","center"),s.classList.add("del-confirmation-no-btn"),s.innerText="NO",s.addEventListener("pointerup",(()=>{le(o)})),A.classList.add("del-confirmation-yes-btn"),A.innerText="YES",A.addEventListener("pointerup",(()=>{(({app:n,container:e,objUI:t,obj:r,type:o})=>{"todo"===o?ie(n,r,e,t):"project"===o&&se(n,r,e,t),Sn(n),pe(n)})({app:n,container:o,objUI:r,obj:t,type:e})})),i.append(s,A),o.append(a,i),o};var ue=t(117),fe={};fe.styleTagTransform=p(),fe.setAttributes=A(),fe.insert=i().bind(null,"head"),fe.domAPI=o(),fe.insertStyleElement=c(),e()(ue.Z,fe),ue.Z&&ue.Z.locals&&ue.Z.locals;const Ce=(n,e)=>{const t=document.createElement("div"),r=document.createElement("p"),o=document.createElement("div"),a=document.createElement("div"),i=document.createElement("button"),s=document.createElement("button");t.classList.add("project-selector-container","animate-appear"),r.classList.add("project-selector-title","flex","center"),r.innerText="Add To Project",o.classList.add("project-selector-projects-box","flex-column"),a.classList.add("project-selector-btns-container","flex","center"),i.classList.add("project-selector-cancel-btn"),i.innerText="CANCEL",i.addEventListener("pointerup",(()=>{t.remove(),Xn().classList.remove("disabled")})),s.classList.add("project-selector-ok-btn"),s.innerText="OK",s.addEventListener("pointerup",(()=>{((n,e,t)=>{const r=Array.from(document.querySelectorAll(".project-option.selected"));if(!r.length)return Xn().classList.remove("disabled"),void e.remove();const o=r.map((n=>n.dataset.id));o.forEach((e=>{n.getProjectsArr().forEach((n=>{e===n.getId()&&n.pushToTodosArr(t)}))})),Sn(n),Xn().classList.remove("disabled"),e.remove()})(n,t,e)}));const A=n.getProjectsArr().filter((n=>n.getTodosArr().every((n=>n.getId()!==e.getId())))),d=A.map((n=>(n=>{const e=document.createElement("div"),t=document.createElement("p"),r=document.createElement("div");return e.classList.add("project-option","flex","center"),e.dataset.id=n.getId(),e.addEventListener("pointerup",(()=>{e.classList.toggle("selected")})),t.classList.add("project-option-title"),t.innerText=n.getTitle(),r.classList.add("project-option-checkbox"),e.append(t,r),e})(n)));return d.length?o.append(...d):o.append("No Projects"),a.append(i,s),t.append(r,o,a),t},be=t.p+"1f907a58b0cc1eaf0caf.svg",he=t.p+"a220482e9ba79a8aa587.svg",ge=t.p+"ba8ee4721ed25900c034.svg",Ee=(n,e)=>{n.stopPropagation(),Vn((({getPriority:n,getDueDate:e,getTitle:t,getNotes:r})=>{const o=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div"),s=document.createElement("div"),A=document.createElement("p"),d=document.createElement("p"),c=document.createElement("p"),l=document.createElement("button");return o.classList.add("details-container","animate-appear"),a.classList.add("details-top-container","flex"),i.classList.add("details-bottom-container"),s.classList.add("details-priority","flex","center"),"low"===n()?s.classList.add("details-priority-l"):"medium"===n()?s.classList.add("details-priority-m"):s.classList.add("details-priority-h"),s.innerText=n()[0].toUpperCase()+n().slice(1),A.classList.add("details-due-date","flex","center"),A.innerText=`Due: ${e()}`,d.classList.add("details-title","flex"),d.innerText=t(),c.classList.add("details-notes","flex"),c.innerText=r()||"No Notes",l.classList.add("details-close-btn"),l.innerText="CLOSE",l.addEventListener("pointerup",(()=>{o.remove(),Xn().classList.remove("disabled")})),a.append(s,A),i.append(d,c,l),o.append(a,i),o})(e)),Xn().classList.add("disabled")},Be=(n,e,t)=>{const r=document.createElement("div"),o=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div"),s=document.createElement("p"),A=document.createElement("sup"),d=document.createElement("p"),c=document.createElement("img"),l=document.createElement("img"),p=document.createElement("img"),{day:m,ordinalIndicator:u,month:f}={day:(C=Pn(n.getDueDate())).slice(0,-6),ordinalIndicator:C.slice(-6,-4),month:C.slice(-4)};var C;return r.classList.add("item-container","flex","animate-appear"),r.dataset.id=n.getId(),r.dataset.projectId=t,r.style.borderLeft=`5px solid var(--${n.getPriority()}-prio)`,r.addEventListener("pointerup",(e=>{Ee(e,n)})),o.classList.add("item-left-container","flex","center"),a.classList.add("item-right-container","flex","center"),i.classList.add("item-checkbox","flex","center"),n.getChecked()&&(i.classList.add("checked"),r.classList.add("no-pointer-events")),i.addEventListener("pointerup",(t=>{(({e:n,app:e,container:t,todo:r})=>{const o=n.target;n.stopPropagation(),o.classList.toggle("checked"),t.classList.toggle("no-pointer-events"),r.editChecked(),Sn(e)})({e:t,app:e,container:r,todo:n})})),s.classList.add("item-title"),s.innerText=n.getTitle(),A.innerText=u,d.classList.add("item-due-date"),d.append(m,A,f),c.classList.add("item-edit-icon"),c.title="Edit Todo",c.src=be,c.addEventListener("pointerup",(t=>{(({e:n,app:e,container:t,todo:r})=>{n.stopPropagation();const o=document.querySelector(".navbar-container[data-mode]").dataset.mode,a="null"===t.dataset.projectId?null:t.dataset.projectId;Vn(Ve({objs:{app:e,project:null,todo:r},modes:{navbarMode:o,formMode:"edit-todo"},projectId:a})),Xn().classList.add("disabled")})({e:t,app:e,container:r,todo:n})})),l.classList.add("item-move-icon"),l.title="Move to Project",l.src=he,l.addEventListener("pointerup",(t=>{(({e:n,app:e,todo:t})=>{n.stopPropagation(),Vn(Ce(e,t)),Xn().classList.add("disabled")})({e:t,app:e,todo:n})})),p.classList.add("item-trash-icon"),p.title="Delete Todo",p.src=ge,p.addEventListener("pointerup",(t=>{(({e:n,app:e,container:t,todo:r})=>{n.stopPropagation(),Vn(me(e,"todo",r,t)),Xn().classList.add("disabled")})({e:t,app:e,container:r,todo:n})})),o.append(i,s),a.append(d,c,l,p),r.append(o,a),r};var ve=t(735),xe={};xe.styleTagTransform=p(),xe.setAttributes=A(),xe.insert=i().bind(null,"head"),xe.domAPI=o(),xe.insertStyleElement=c(),e()(ve.Z,xe),ve.Z&&ve.Z.locals&&ve.Z.locals;const we=t.p+"5c04c572798e520c3444.svg",ye=t.p+"1f907a58b0cc1eaf0caf.svg",ke=t.p+"ba8ee4721ed25900c034.svg",je=(n,e)=>{const t=document.createElement("div"),r=document.createElement("p"),o=document.createElement("img"),a=document.createElement("img"),i=document.createElement("img");return t.classList.add("project-container","flex","center","animate-appear"),t.dataset.id=n.getId(),t.addEventListener("pointerup",(r=>{(({e:n,app:e,container:t,project:r})=>{n.stopPropagation();const o=r.getTodosArr(),a=t.dataset.id;Qn().append(Te({app:e,mode:"todos",arr:o,projectId:a}))})({e:r,app:e,container:t,project:n})})),r.classList.add("project-title"),r.innerText=n.getTitle(),o.classList.add("project-add-icon"),o.src=we,o.addEventListener("pointerup",(t=>{(({e:n,app:e,project:t})=>{n.stopPropagation(),Vn(Ve({objs:{app:e,project:t,todo:null},modes:{navbarMode:null,formMode:"add-to-project"},projectId:null})),Xn().classList.add("disabled")})({e:t,app:e,project:n})})),a.classList.add("project-edit-icon"),a.src=ye,a.addEventListener("pointerup",(t=>{(({e:n,app:e,project:t})=>{n.stopPropagation();const r=document.querySelector(".navbar-container[data-mode]").dataset.mode;Vn(Ve({objs:{app:e,project:t,todo:null},modes:{navbarMode:r,formMode:"edit-project"},projectId:null})),Xn().classList.add("disabled")})({e:t,app:e,project:n})})),i.classList.add("project-trash-icon"),i.src=ke,i.addEventListener("pointerup",(r=>{(({e:n,app:e,container:t,project:r})=>{n.stopPropagation(),Vn(me(e,"project",r,t)),Xn().classList.add("disabled")})({e:r,app:e,container:t,project:n})})),t.append(r,o,a,i),t},Te=({app:n,mode:e,arr:t,projectId:r})=>{const o=document.createElement("div");return o.classList.add("holder-box-container","flex-column"),!!Qn()&&Qn().lastElementChild.remove(),((n,e)=>!n.length&&"projects"===e)(t,e)?(o.append("No Projects"),o):(n=>!n.length)(t)?(o.append("No Todos"),o):"todos"===e?(o.append(...(({app:n,arr:e,projectId:t})=>_n(e).map((e=>Be(e,n,t))))({app:n,arr:t,projectId:r})),o):"projects"===e?(o.append(...(({app:n,arr:e})=>e.map((e=>je(e,n))))({app:n,arr:t})),o):"day"===e?(o.append(...(({app:n,arr:e,projectId:t})=>e.map((e=>Be(e,n,t))))({app:n,arr:t,projectId:r})),o):"week"===e?(o.append(...(({app:n,arr:e,projectId:t})=>_n(e).map((e=>Be(e,n,t))))({app:n,arr:t,projectId:r})),o):o},Ie=({objs:n,modes:e,elems:t})=>{const{formHolder:r,container:o,todoBtn:a,projectBtn:i}=t;o.classList.remove("project-fields-height"),a.classList.add("border-btm-b"),i.classList.remove("border-btm-b"),o.lastElementChild.remove(),o.append(Ye({objs:n,modes:e,elems:{formHolder:r},projectId:null})),r.append(o)},Le=({objs:n,modes:e,elems:t})=>{const{formHolder:r,container:o,todoBtn:a,projectBtn:i}=t;o.classList.add("project-fields-height"),a.classList.remove("border-btm-b"),i.classList.add("border-btm-b"),o.lastElementChild.remove(),o.append(De({objs:n,modes:e,elems:{formHolder:r}})),r.append(o)},Ye=({objs:n,modes:e,elems:t,projectId:r})=>{const{todo:o}=n,{formHolder:a}=t,i=document.createElement("div"),s=document.createElement("form"),A=document.createElement("textarea"),d=document.createElement("textarea"),c=document.createElement("div"),l=document.createElement("label"),p=document.createElement("input"),m=document.createElement("div"),u=document.createElement("p"),f=document.createElement("div"),C=document.createElement("input"),b=document.createElement("label"),h=document.createElement("input"),g=document.createElement("label"),E=document.createElement("input"),B=document.createElement("label");return i.classList.add("form-fields-container","flex-column"),s.classList.add("form-middle-container","flex-column"),s.id="form",s.addEventListener("submit",(o=>{o.preventDefault(),Se({objs:n,modes:e,elems:t,projectId:r})})),A.classList.add("form-title-input"),A.placeholder="Enter Title",A.value=o?o.getTitle():"",A.setAttribute("maxlength","50"),A.required=!0,d.classList.add("form-notes-input"),d.placeholder="Enter Notes",d.value=o?o.getNotes():"",d.setAttribute("maxlength","300"),c.classList.add("form-due-date-container","flex-column","center"),l.classList.add("form-due-date-label"),l.innerText="Due Date",p.classList.add("form-due-date-input"),p.type="date",p.value=o?o.getDueDate():"22-11-11",p.required=!0,m.classList.add("form-priority-container","flex-column","center"),u.classList.add("form-priority-title"),u.innerText="Priority",f.classList.add("form-priority-options-container","flex"),Tn(C,{type:"radio",id:"l-prio",value:"low",name:"priority",required:!0,checked:!(!o||"low"!==o.getPriority())}),C.classList.add("form-priority-radio","hidden"),b.setAttribute("for","l-prio"),b.innerText="Low",b.classList.add("form-priority-label","l-prio-label"),Tn(h,{type:"radio",id:"m-prio",value:"medium",name:"priority",required:!0,checked:!(!o||"medium"!==o.getPriority())}),h.classList.add("form-priority-radio","hidden"),g.setAttribute("for","m-prio"),g.innerText="Medium",g.classList.add("form-priority-label","m-prio-label"),Tn(E,{type:"radio",id:"h-prio",value:"high",name:"priority",required:!0,checked:!(!o||"high"!==o.getPriority())}),E.classList.add("form-priority-radio","hidden"),B.setAttribute("for","h-prio"),B.innerText="High",B.classList.add("form-priority-label","h-prio-label"),i.append(s,Pe(a)),s.append(A,d,c,m),c.append(l,p),m.append(u,f),f.append(C,b,h,g,E,B),i},Se=({objs:n,modes:e,elems:t,projectId:r})=>{const{app:o,todo:a,project:i}=n,{navbarMode:s,formMode:A}=e,{formHolder:d}=t;"add"===A?We(o,s):"edit-todo"===A?ze(o,s,a,r):"add-to-project"===A&&Ne(o,i),Xn().classList.remove("disabled"),d.remove()},De=({objs:n,modes:e,elems:t})=>{const{project:r}=n,{formHolder:o}=t,a=document.createElement("div"),i=document.createElement("form"),s=document.createElement("textarea");return a.classList.add("form-fields-container","flex-column"),i.classList.add("form-middle-container","flex-column"),i.id="form",i.addEventListener("submit",(r=>{r.preventDefault(),Me({objs:n,modes:e,elems:t})})),s.classList.add("form-title-input"),s.placeholder="Enter Title",s.innerText=r?r.getTitle():"",s.setAttribute("maxlength","50"),s.required=!0,a.append(i,Pe(o)),i.append(s),a},Me=({objs:n,modes:e,elems:t})=>{const{app:r,project:o}=n,{navbarMode:a,formMode:i}=e,{formHolder:s}=t;"add"===i?Ue(r,a):"edit-project"===i&&He(r,o),Xn().classList.remove("disabled"),s.remove()},Pe=n=>{const e=document.createElement("div"),t=document.createElement("button"),r=document.createElement("button");return e.classList.add("form-bottom-container","flex","center"),t.classList.add("form-cancel-btn"),t.innerText="CANCEL",t.addEventListener("pointerup",(()=>{n.remove(),Xn().classList.remove("disabled")})),r.classList.add("form-ok-btn"),r.innerText="OK",r.setAttribute("form","form"),e.append(t,r),e},We=(n,e)=>{const t=Gn(),{isDueToday:r,isDueThisWeek:o}=Rn(t);qe(n,t),"projects"!==e&&Re({app:n,navbarMode:e,isDueToday:r,isDueThisWeek:o,projectId:null})},qe=(n,e)=>{n.pushToTodosArr(e),Sn(n),tt(n),ot(n),at(n)},ze=(n,e,t,r)=>{const{titleVal:o,notesVal:a,dueDateVal:i,priorityVal:s}=Nn();if(t.editTitle(o),t.editNotes(a),t.editDueDate(i),t.editPriority(s),Ze(n,t),r){const e=Dn(n,r);Xe({app:n,project:e})}else{const{isDueToday:r,isDueThisWeek:o}=Rn(t);Re({app:n,navbarMode:e,isDueToday:r,isDueThisWeek:o,projectId:null})}},Ze=(n,e)=>{n.updateTodosArr(e),Sn(n),ot(n),at(n)},Ue=(n,e)=>{const t=(()=>{const{titleVal:n}=Nn();return Wn(n,null,null)})();Fe(n,t),"projects"===e&&Qe(n)},Fe=(n,e)=>{n.pushToProjectsArr(e),Sn(n),rt(n)},He=(n,e)=>{const{titleVal:t}=Nn();e.editTitle(t),Oe(n,e),Qe(n)},Oe=(n,e)=>{n.updateProjectsArr(e),Sn(n)},Ne=(n,e)=>{const t=Gn();Ge(n,e,t)},Ge=(n,e,t)=>{e.pushToTodosArr(t),n.pushToTodosArr(t),n.updateProjectsArr(e),Sn(n),tt(n),ot(n),at(n)},Re=({app:n,navbarMode:e,isDueToday:t,isDueThisWeek:r,projectId:o})=>{const a=n.getTodosArr();(({app:n,navbarMode:e,todosArr:t,isDueToday:r,isDueThisWeek:o,projectId:a})=>{let i;"todos"===e?i=Te({app:n,mode:"todos",arr:t,projectId:a}):"day"===e&&r?i=Te({app:n,mode:"day",arr:t,projectId:a}):"week"===e&&o&&(i=Te({app:n,mode:"week",arr:t,projectId:a})),Qn().append(i)})({app:n,navbarMode:e,todosArr:a,isDueToday:t,isDueThisWeek:r,projectId:o})},Xe=({app:n,project:e})=>{(({app:n,todosArr:e,projectId:t})=>{Qn().append(Te({app:n,mode:"todos",arr:e,projectId:t}))})({app:n,todosArr:e.getTodosArr(),projectId:e.getId()})},Qe=n=>{const e=n.getProjectsArr();(({app:n,projectsArr:e})=>{Qn().append(Te({app:n,mode:"projects",arr:e,projectId:null}))})({app:n,projectsArr:e})},Ve=({objs:n,modes:e,projectId:t})=>{const{app:r,todo:o,project:a}=n,{navbarMode:i,formMode:s}=e,A=document.createElement("div"),d=document.createElement("div"),c=(()=>{const n=document.createElement("div");return n.classList.add("form-top-container","flex","center"),n})(),l=document.createElement("button"),p=document.createElement("button");return A.classList.add("form-holder","flex","center","animate-appear"),d.classList.add("form-container"),l.classList.add("form-todo-btn"),l.innerText="edit-todo"===s?"Edit Todo":"New Todo",p.classList.add("form-project-btn"),p.innerText="edit-project"===s?"Edit Project":"New Project","edit-todo"===s?((({objs:n,modes:e,elems:t,projectId:r})=>{const{formHolder:o,container:a,topContainer:i,todoBtn:s}=t;s.classList.add("border-btm-w","no-pointer-events"),i.append(s),a.append(i,Ye({objs:n,modes:e,elems:{formHolder:o},projectId:r})),o.append(a)})({objs:{app:r,todo:o,project:null},modes:{navbarMode:i,formMode:s},elems:{formHolder:A,container:d,topContainer:c,todoBtn:l},projectId:t}),A):"edit-project"===s?((({objs:n,modes:e,elems:t})=>{const{formHolder:r,container:o,topContainer:a,projectBtn:i}=t;o.classList.add("project-fields-height"),i.classList.add("border-btm-w","no-pointer-events"),a.append(i),o.append(a,De({objs:n,modes:e,elems:{formHolder:r}})),r.append(o)})({objs:{app:r,project:a},modes:{navbarMode:i,formMode:s},elems:{formHolder:A,container:d,topContainer:c,projectBtn:p}}),A):"add-to-project"===s?((({objs:n,modes:e,elems:t})=>{const{formHolder:r,container:o,topContainer:a,todoBtn:i}=t;i.classList.add("border-btm-w","no-pointer-events"),a.append(i),o.append(a,Ye({objs:n,modes:e,elems:{formHolder:r},projectId:null})),r.append(o)})({objs:{app:r,project:a,todo:null},modes:{navbarMode:i,formMode:s},elems:{formHolder:A,container:d,topContainer:c,todoBtn:l}}),A):((({objs:n,modes:e,elems:t})=>{const{formHolder:r,container:o,topContainer:a,todoBtn:i,projectBtn:s}=t;i.classList.add("border-btm-b"),a.append(i,s),o.append(a,Ye({objs:n,modes:e,elems:{formHolder:r},projectId:null})),r.append(o),i.addEventListener("pointerup",(()=>{Ie({objs:n,modes:e,elems:t})})),s.addEventListener("pointerup",(()=>{Le({objs:n,modes:e,elems:t})}))})({objs:{app:r,todo:null,project:null},modes:{navbarMode:i,formMode:s},elems:{formHolder:A,container:d,topContainer:c,todoBtn:l,projectBtn:p}}),A)},Je=t.p+"fca7267107ab84a927a4.png",$e=t.p+"e93f2a923fc7de099a60.png",_e=t.p+"02b75d2441ca70aed6d3.png",Ke=t.p+"7511833571b88e0a38a2.png",nt=n=>{document.querySelectorAll(".navbar-btn-grp-1").forEach((n=>{n.classList.remove("navbar-btn-selected")})),document.querySelectorAll(".navbar-btn-icon").forEach((n=>{n.classList.remove("navbar-btn-selected")})),n.target.classList.contains("navbar-btn-icon")&&n.target.parentElement.classList.add("navbar-btn-selected"),n.target.classList.add("navbar-btn-selected")},et=(n,e)=>{window.innerWidth<650?((n=>{const e=[Je,$e,_e,Ke],t=["Todos Icon","Projects Icon","Day Icon","Week Icon"];n.forEach(((n,r)=>{n.innerText="";const o=document.createElement("img");o.classList.add("navbar-btn-icon"),o.src=e[r],o.alt=t[r],n.append(o)}))})(n),n.forEach((n=>n.classList.add("animate-btn-appear"))),e.classList.add("animate-navbar-move-in")):((n=>{const[e,t,r,o]=n;e.innerText="Todos",t.innerText="Projects",r.innerText="Day",o.innerText="Week"})(n),n.forEach((n=>n.classList.remove("animate-btn-appear"))),e.classList.remove("animate-navbar-move-in"))},tt=n=>{document.querySelector(".navbar-todos-btn").dataset.count=n.getTodosArr().length},rt=n=>{document.querySelector(".navbar-projects-btn").dataset.count=n.getProjectsArr().length},ot=n=>{document.querySelector(".navbar-day-btn").dataset.count=kn(n.getTodosArr()).length},at=n=>{document.querySelector(".navbar-week-btn").dataset.count=jn(n.getTodosArr()).length},it=n=>{const e=document.createElement("div"),t=document.createElement("span"),r=document.createElement("h1");return e.classList.add("content-box-container"),t.classList.add("material-symbols-outlined"),t.append("checklist"),r.classList.add("content-box-title","flex"),r.append(t,"To-Do"),e.append(r,(n=>{const e=document.createElement("div"),t=document.createElement("div"),r=document.createElement("div"),o=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div");return e.classList.add("navbar-container","flex"),e.dataset.mode="todos",t.classList.add("navbar-btn","navbar-btn-grp-1","navbar-todos-btn","flex","navbar-btn-selected"),t.dataset.count=n.getTodosArr().length,t.addEventListener("pointerup",(t=>{(({e:n,app:e,container:t})=>{nt(n),t.dataset.mode="todos";const r=e.getTodosArr();Qn().append(Te({app:e,mode:"todos",arr:r,projectId:null}))})({e:t,app:n,container:e})})),r.classList.add("navbar-btn","navbar-btn-grp-1","navbar-projects-btn","flex"),r.dataset.count=n.getProjectsArr().length,r.addEventListener("pointerup",(t=>{(({e:n,app:e,container:t})=>{nt(n),t.dataset.mode="projects";const r=e.getProjectsArr();Qn().append(Te({app:e,mode:"projects",arr:r,projectId:null}))})({e:t,app:n,container:e})})),o.classList.add("navbar-btn","navbar-btn-grp-1","navbar-day-btn","flex"),o.dataset.count=kn(n.getTodosArr()).length,o.addEventListener("pointerup",(t=>{(({e:n,app:e,container:t})=>{nt(n),t.dataset.mode="day";const r=e.getTodosArr(),o=kn(r);Qn().append(Te({app:e,mode:"day",arr:o,projectId:null}))})({e:t,app:n,container:e})})),a.classList.add("navbar-btn","navbar-btn-grp-1","navbar-week-btn","flex"),a.dataset.count=jn(n.getTodosArr()).length,a.addEventListener("pointerup",(t=>{(({e:n,app:e,container:t})=>{nt(n),t.dataset.mode="week";const r=e.getTodosArr(),o=jn(r);Qn().append(Te({app:e,mode:"week",arr:o,projectId:null}))})({e:t,app:n,container:e})})),i.classList.add("navbar-btn","navbar-btn-grp-2","navbar-plus-btn","flex"),i.title="Add New",i.innerText="+",i.addEventListener("pointerup",(()=>{((n,e)=>{Vn(Ve({objs:{app:n,todo:null,project:null},modes:{navbarMode:e,formMode:"add"},projectId:null})),Xn().classList.add("disabled")})(n,e.dataset.mode)})),((n,e)=>{et(e,n),window.onresize=()=>et(e,n)})(e,[t,r,o,a]),e.append(t,r,o,a,i),e})(n),Te({app:n,mode:"todos",arr:n.getTodosArr(),projectId:null})),e};var st=t(424),At={};At.styleTagTransform=p(),At.setAttributes=A(),At.insert=i().bind(null,"head"),At.domAPI=o(),At.insertStyleElement=c(),e()(st.Z,At),st.Z&&st.Z.locals&&st.Z.locals,document.querySelector("#root").append((()=>{const n=document.createElement("div"),e=(()=>{let n=[],e=[];return{getTodosArr:()=>n,getProjectsArr:()=>e,initializeTodosArr:e=>{n=e},initializeProjectsArr:n=>{e=n},pushToTodosArr:e=>{n.push(e)},removeFromTodosArr:e=>{n=n.filter((n=>n.getId()!==e))},updateTodosArr:e=>{n=n.map((n=>n.getId()===e.getId()?e:n))},pushToProjectsArr:n=>{e.push(n)},removeFromProjectsArr:n=>{e=e.filter((e=>e.getId()!==n))},updateProjectsArr:n=>{e=e.map((e=>e.getId()===n.getId()?n:e))}}})();return(n=>{(n=>{const[e,t]=(()=>{const n=Mn(!0,"Leg day","Squats x 100","2022-11-25","low",null);return[[Mn(!1,"CS fundamentals","Finish lesson 28","2022-11-28","high",null),Mn(!1,"Codewars practice","Complete 10 challenges today","2022-11-28","medium",null),Mn(!1,"Project update","Update sign-in form features","2022-11-28","high",null),n],[Wn("Fitness",null,[n])]]})();n.initializeTodosArr(localStorage.todosData?qn(JSON.parse(localStorage.todosData)):e),n.initializeProjectsArr(localStorage.projectsData?JSON.parse(localStorage.projectsData).map((n=>{const{title:e,id:t,todosData:r}=n,o=qn(r);return Wn(e,t,o)})):t)})(n),onbeforeunload=Sn(n)})(e),n.classList.add("app-container","flex-column","center"),n.append(it(e)),n})())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,