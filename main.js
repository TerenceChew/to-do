(()=>{"use strict";var r={402:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([r.id,".content-box-container {\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template: 65px 1fr 100px / 1fr;\r\n  background-color: white;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none;  /* Firefox */\r\n}\r\n\r\n/* Hide scrollbar for Chrome, Safari and Opera */\r\n.content-box-container::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.material-symbols-outlined {\r\n  font-variation-settings:\r\n  'FILL' 0,\r\n  'wght' 400,\r\n  'GRAD' 200,\r\n  'opsz' 48;\r\n  font-size: 1.85rem;\r\n}\r\n\r\n.content-box-title {\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 11px;\r\n  grid-area: 1 / 1 / 2 / -1;\r\n  color: white;\r\n  background-color: var(--accent-3);\r\n  font-size: 2rem;\r\n  font-family: 'PT Mono', monospace;\r\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n@media (min-width: 650px) {\r\n  .content-box-container {\r\n    max-width: 950px;\r\n    max-height: 550px;\r\n    grid-template: 65px 1fr / 190px 1fr;\r\n    box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\r\n  }\r\n\r\n  .content-box-title {\r\n    justify-content: start;\r\n    padding-left: 25px;\r\n    padding-top: 4px;\r\n  }\r\n}\r\n\r\n@media (min-width: 850px) {\r\n  .content-box-container {\r\n    grid-template: 65px 1fr / 225px 1fr;\r\n  }\r\n\r\n  .material-symbols-outlined {\r\n    font-size: 2.2rem;\r\n  }\r\n\r\n  .content-box-title {\r\n    font-size: 2.3rem;\r\n  }\r\n}\r\n\r\n@media (min-width: 1600px) {\r\n  .content-box-container {\r\n    max-width: 1150px;\r\n    max-height: 600px;\r\n    grid-template: 65px 1fr / 250px 1fr;\r\n  }\r\n\r\n  .material-symbols-outlined {\r\n    font-size: 2.3rem;\r\n  }\r\n\r\n  .content-box-title {\r\n    font-size: 2.4rem;\r\n  }\r\n}\r\n","",{version:3,sources:["webpack://./src/components/contentBox/contentBox.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,aAAa;EACb,aAAa;EACb,mCAAmC;EACnC,uBAAuB;EACvB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE;;;;WAIS;EACT,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,yBAAyB;EACzB,YAAY;EACZ,iCAAiC;EACjC,eAAe;EACf,iCAAiC;EACjC,2CAA2C;AAC7C;;AAEA;EACE;IACE,gBAAgB;IAChB,iBAAiB;IACjB,mCAAmC;IACnC,6CAA6C;EAC/C;;EAEA;IACE,sBAAsB;IACtB,kBAAkB;IAClB,gBAAgB;EAClB;AACF;;AAEA;EACE;IACE,mCAAmC;EACrC;;EAEA;IACE,iBAAiB;EACnB;;EAEA;IACE,iBAAiB;EACnB;AACF;;AAEA;EACE;IACE,iBAAiB;IACjB,iBAAiB;IACjB,mCAAmC;EACrC;;EAEA;IACE,iBAAiB;EACnB;;EAEA;IACE,iBAAiB;EACnB;AACF",sourcesContent:[".content-box-container {\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template: 65px 1fr 100px / 1fr;\r\n  background-color: white;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none;  /* Firefox */\r\n}\r\n\r\n/* Hide scrollbar for Chrome, Safari and Opera */\r\n.content-box-container::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.material-symbols-outlined {\r\n  font-variation-settings:\r\n  'FILL' 0,\r\n  'wght' 400,\r\n  'GRAD' 200,\r\n  'opsz' 48;\r\n  font-size: 1.85rem;\r\n}\r\n\r\n.content-box-title {\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 11px;\r\n  grid-area: 1 / 1 / 2 / -1;\r\n  color: white;\r\n  background-color: var(--accent-3);\r\n  font-size: 2rem;\r\n  font-family: 'PT Mono', monospace;\r\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n@media (min-width: 650px) {\r\n  .content-box-container {\r\n    max-width: 950px;\r\n    max-height: 550px;\r\n    grid-template: 65px 1fr / 190px 1fr;\r\n    box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\r\n  }\r\n\r\n  .content-box-title {\r\n    justify-content: start;\r\n    padding-left: 25px;\r\n    padding-top: 4px;\r\n  }\r\n}\r\n\r\n@media (min-width: 850px) {\r\n  .content-box-container {\r\n    grid-template: 65px 1fr / 225px 1fr;\r\n  }\r\n\r\n  .material-symbols-outlined {\r\n    font-size: 2.2rem;\r\n  }\r\n\r\n  .content-box-title {\r\n    font-size: 2.3rem;\r\n  }\r\n}\r\n\r\n@media (min-width: 1600px) {\r\n  .content-box-container {\r\n    max-width: 1150px;\r\n    max-height: 600px;\r\n    grid-template: 65px 1fr / 250px 1fr;\r\n  }\r\n\r\n  .material-symbols-outlined {\r\n    font-size: 2.3rem;\r\n  }\r\n\r\n  .content-box-title {\r\n    font-size: 2.4rem;\r\n  }\r\n}\r\n"],sourceRoot:""}]);const s=i},52:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([r.id,".del-confirmation-container {\r\n  width: 255px;\r\n  height: 140px;\r\n  gap: 35px;\r\n  background-color: white;\r\n  padding: 10px 15px;\r\n  font-family: 'Lato', sans-serif;\r\n  border-radius: 8px;\r\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.del-confirmation-msg {\r\n  font-size: 1.25rem;\r\n}\r\n\r\n.del-confirmation-btns-container {\r\n  gap: 15px;\r\n}\r\n\r\n.del-confirmation-no-btn,\r\n.del-confirmation-yes-btn {\r\n  width: 100px;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  letter-spacing: 1px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: .85rem;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: .5s;\r\n  background-color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.del-confirmation-no-btn:hover,\r\n.del-confirmation-yes-btn:hover {\r\n  color: white;\r\n  transform: translateY(-5px);\r\n  font-weight: bold;\r\n}\r\n\r\n.del-confirmation-no-btn {\r\n  border: 1px solid var(--accent-3);\r\n  color: var(--accent-3);\r\n}\r\n\r\n.del-confirmation-yes-btn {\r\n  border: 1px solid var(--accent-1);\r\n  color: var(--accent-1);\r\n}\r\n\r\n.del-confirmation-no-btn:hover {\r\n  background-color: var(--accent-3);\r\n}\r\n\r\n.del-confirmation-yes-btn:hover {\r\n  background-color: var(--accent-1);\r\n}\r\n\r\n\r\n\r\n","",{version:3,sources:["webpack://./src/components/delConfirmation/delConfirmation.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,aAAa;EACb,SAAS;EACT,uBAAuB;EACvB,kBAAkB;EAClB,+BAA+B;EAC/B,kBAAkB;EAClB,6CAA6C;EAC7C,eAAe;EACf,QAAQ;EACR,SAAS;EACT,gCAAgC;AAClC;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,SAAS;AACX;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;EACf,uBAAuB;EACvB,eAAe;AACjB;;AAEA;;EAEE,YAAY;EACZ,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;AACnC",sourcesContent:[".del-confirmation-container {\r\n  width: 255px;\r\n  height: 140px;\r\n  gap: 35px;\r\n  background-color: white;\r\n  padding: 10px 15px;\r\n  font-family: 'Lato', sans-serif;\r\n  border-radius: 8px;\r\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.del-confirmation-msg {\r\n  font-size: 1.25rem;\r\n}\r\n\r\n.del-confirmation-btns-container {\r\n  gap: 15px;\r\n}\r\n\r\n.del-confirmation-no-btn,\r\n.del-confirmation-yes-btn {\r\n  width: 100px;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  letter-spacing: 1px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: .85rem;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: .5s;\r\n  background-color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.del-confirmation-no-btn:hover,\r\n.del-confirmation-yes-btn:hover {\r\n  color: white;\r\n  transform: translateY(-5px);\r\n  font-weight: bold;\r\n}\r\n\r\n.del-confirmation-no-btn {\r\n  border: 1px solid var(--accent-3);\r\n  color: var(--accent-3);\r\n}\r\n\r\n.del-confirmation-yes-btn {\r\n  border: 1px solid var(--accent-1);\r\n  color: var(--accent-1);\r\n}\r\n\r\n.del-confirmation-no-btn:hover {\r\n  background-color: var(--accent-3);\r\n}\r\n\r\n.del-confirmation-yes-btn:hover {\r\n  background-color: var(--accent-1);\r\n}\r\n\r\n\r\n\r\n"],sourceRoot:""}]);const s=i},193:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([r.id,".form-holder {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.form-container {\r\n  width: 325px;\r\n  height: min(585px, 95%);\r\n  display: grid;\r\n  grid-template-rows: 65px 1fr;\r\n  gap: 5px;\r\n  background-color: white;\r\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\r\n  font-family: 'Lato', sans-serif;\r\n  border-radius: 8px;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none;  /* Firefox */\r\n}\r\n\r\n/* Hide scrollbar for Chrome, Safari and Opera */\r\n.form-container::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.project-fields-height {\r\n  height: min(245px, 95%);\r\n}\r\n\r\n.form-top-container {\r\n  grid-row: 1 / 2;\r\n  background-color: var(--accent-3);\r\n  border-radius: 8px 8px 0 0;\r\n}\r\n\r\n.form-todo-btn,\r\n.form-project-btn {\r\n  width: clamp(50%, 100%, 100%);\r\n  height: 100%;\r\n  color: white;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: 4px solid white;\r\n  outline: none;\r\n  font-size: 1.2rem;\r\n  transition: .5s;\r\n  cursor: pointer;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.form-fields-container {\r\n  grid-row: 2 / 3;\r\n}\r\n\r\n.form-middle-container {\r\n  align-items: center;\r\n  justify-content: start;\r\n  padding: 0px 15px;\r\n}\r\n\r\n.form-title-input,\r\n.form-notes-input {\r\n  width: 100%;\r\n  border: none;\r\n  border-bottom: 4px solid rgba(0, 0, 0, 0.05);\r\n  outline: none;\r\n  resize: none;\r\n  padding: 15px 10px 10px;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none;  /* Firefox */\r\n}\r\n\r\n/* Hide scrollbar for Chrome, Safari and Opera */\r\n.form-title-input::-webkit-scrollbar,\r\n.form-notes-input::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.form-title-input {\r\n  height: 75px;\r\n}\r\n\r\n.form-notes-input {\r\n  height: 165px;\r\n}\r\n\r\n.form-due-date-container,\r\n.form-priority-container {\r\n  gap: 13px;\r\n  margin-top: 24px;\r\n}\r\n\r\n.form-due-date-label {\r\n  font-size: 1.05rem;\r\n}\r\n\r\n.form-due-date-input {\r\n  width: 134px;\r\n  border-radius: 5px;\r\n  border: 2px solid rgba(26, 167, 125, 0.5);\r\n  outline: none;\r\n  padding: 5px 10px;\r\n  color: black;\r\n}\r\n\r\n.form-due-date-input::-webkit-calendar-picker-indicator {\r\n  position: absolute;\r\n  padding: 5px 0 5px 98px;\r\n  cursor: pointer;\r\n}\r\n\r\n.form-priority-title {\r\n  font-size: 1.15rem;\r\n}\r\n\r\n.form-priority-options-container {\r\n  gap: 4px;\r\n}\r\n\r\n.form-priority-label {\r\n  border-radius: 4px;\r\n  padding: 1px 7px 3px 7px;\r\n  text-align: center;\r\n  transition: .25s;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.l-prio-label {\r\n  border: 1px solid var(--low-prio);\r\n  color: var(--low-prio);\r\n}\r\n\r\n.m-prio-label {\r\n  border: 1px solid var(--medium-prio);\r\n  color: var(--medium-prio);\r\n}\r\n\r\n.h-prio-label {\r\n  border: 1px solid var(--high-prio);\r\n  color: var(--high-prio);\r\n  margin-right: 18px;\r\n}\r\n\r\n.form-priority-radio:checked + .l-prio-label {\r\n  border: 1px solid var(--low-prio);\r\n  background-color: var(--low-prio);\r\n}\r\n\r\n.form-priority-radio:checked + .m-prio-label {\r\n  border: 1px solid var(--medium-prio);\r\n  background-color: var(--medium-prio);\r\n}\r\n\r\n.form-priority-radio:checked + .h-prio-label {\r\n  border: 1px solid var(--high-prio);\r\n  background-color: var(--high-prio);\r\n}\r\n\r\n.form-priority-radio:checked + .form-priority-label {\r\n  transform: scale(1.1);\r\n  color: white;\r\n}\r\n\r\n.form-bottom-container {\r\n  gap: 15px;\r\n  margin: 35px 0 25px 0;\r\n}\r\n\r\n.form-ok-btn,\r\n.form-cancel-btn {\r\n  width: 105px;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  letter-spacing: 1px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: .85rem;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: .5s;\r\n  background-color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.form-ok-btn {\r\n  border: 1px solid var(--accent-1);\r\n  color: var(--accent-1);\r\n}\r\n\r\n.form-cancel-btn {\r\n  border: 1px solid var(--accent-3);\r\n  color: var(--accent-3);\r\n}\r\n\r\n.form-ok-btn:hover,\r\n.form-cancel-btn:hover {\r\n  color: white;\r\n  transform: translateY(-5px);\r\n  font-weight: bold;\r\n}\r\n\r\n.form-ok-btn:hover {\r\n  background-color: var(--accent-1);\r\n}\r\n\r\n.form-cancel-btn:hover {\r\n  background-color: var(--accent-3);\r\n}\r\n\r\n.border-btm-b {\r\n  border-bottom: 5px solid var(--accent-1);\r\n}\r\n\r\n.border-btm-w {\r\n  border-bottom: 5px solid white;\r\n}\r\n\r\n.no-pointer-events {\r\n  pointer-events: none;\r\n}","",{version:3,sources:["webpack://./src/components/form/form.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;AACV;;AAEA;EACE,YAAY;EACZ,uBAAuB;EACvB,aAAa;EACb,4BAA4B;EAC5B,QAAQ;EACR,uBAAuB;EACvB,6CAA6C;EAC7C,+BAA+B;EAC/B,kBAAkB;EAClB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,iCAAiC;EACjC,0BAA0B;AAC5B;;AAEA;;EAEE,6BAA6B;EAC7B,YAAY;EACZ,YAAY;EACZ,6BAA6B;EAC7B,YAAY;EACZ,8BAA8B;EAC9B,aAAa;EACb,iBAAiB;EACjB,eAAe;EACf,eAAe;EACf,qCAAqC;AACvC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,4CAA4C;EAC5C,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;;EAEE,aAAa;AACf;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,yCAAyC;EACzC,aAAa;EACb,iBAAiB;EACjB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,QAAQ;AACV;;AAEA;EACE,kBAAkB;EAClB,wBAAwB;EACxB,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,oCAAoC;EACpC,yBAAyB;AAC3B;;AAEA;EACE,kCAAkC;EAClC,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,iCAAiC;EACjC,iCAAiC;AACnC;;AAEA;EACE,oCAAoC;EACpC,oCAAoC;AACtC;;AAEA;EACE,kCAAkC;EAClC,kCAAkC;AACpC;;AAEA;EACE,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,SAAS;EACT,qBAAqB;AACvB;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;EACf,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;EACZ,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,wCAAwC;AAC1C;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,oBAAoB;AACtB",sourcesContent:[".form-holder {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.form-container {\r\n  width: 325px;\r\n  height: min(585px, 95%);\r\n  display: grid;\r\n  grid-template-rows: 65px 1fr;\r\n  gap: 5px;\r\n  background-color: white;\r\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\r\n  font-family: 'Lato', sans-serif;\r\n  border-radius: 8px;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none;  /* Firefox */\r\n}\r\n\r\n/* Hide scrollbar for Chrome, Safari and Opera */\r\n.form-container::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.project-fields-height {\r\n  height: min(245px, 95%);\r\n}\r\n\r\n.form-top-container {\r\n  grid-row: 1 / 2;\r\n  background-color: var(--accent-3);\r\n  border-radius: 8px 8px 0 0;\r\n}\r\n\r\n.form-todo-btn,\r\n.form-project-btn {\r\n  width: clamp(50%, 100%, 100%);\r\n  height: 100%;\r\n  color: white;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: 4px solid white;\r\n  outline: none;\r\n  font-size: 1.2rem;\r\n  transition: .5s;\r\n  cursor: pointer;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.form-fields-container {\r\n  grid-row: 2 / 3;\r\n}\r\n\r\n.form-middle-container {\r\n  align-items: center;\r\n  justify-content: start;\r\n  padding: 0px 15px;\r\n}\r\n\r\n.form-title-input,\r\n.form-notes-input {\r\n  width: 100%;\r\n  border: none;\r\n  border-bottom: 4px solid rgba(0, 0, 0, 0.05);\r\n  outline: none;\r\n  resize: none;\r\n  padding: 15px 10px 10px;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none;  /* Firefox */\r\n}\r\n\r\n/* Hide scrollbar for Chrome, Safari and Opera */\r\n.form-title-input::-webkit-scrollbar,\r\n.form-notes-input::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.form-title-input {\r\n  height: 75px;\r\n}\r\n\r\n.form-notes-input {\r\n  height: 165px;\r\n}\r\n\r\n.form-due-date-container,\r\n.form-priority-container {\r\n  gap: 13px;\r\n  margin-top: 24px;\r\n}\r\n\r\n.form-due-date-label {\r\n  font-size: 1.05rem;\r\n}\r\n\r\n.form-due-date-input {\r\n  width: 134px;\r\n  border-radius: 5px;\r\n  border: 2px solid rgba(26, 167, 125, 0.5);\r\n  outline: none;\r\n  padding: 5px 10px;\r\n  color: black;\r\n}\r\n\r\n.form-due-date-input::-webkit-calendar-picker-indicator {\r\n  position: absolute;\r\n  padding: 5px 0 5px 98px;\r\n  cursor: pointer;\r\n}\r\n\r\n.form-priority-title {\r\n  font-size: 1.15rem;\r\n}\r\n\r\n.form-priority-options-container {\r\n  gap: 4px;\r\n}\r\n\r\n.form-priority-label {\r\n  border-radius: 4px;\r\n  padding: 1px 7px 3px 7px;\r\n  text-align: center;\r\n  transition: .25s;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n}\r\n\r\n.l-prio-label {\r\n  border: 1px solid var(--low-prio);\r\n  color: var(--low-prio);\r\n}\r\n\r\n.m-prio-label {\r\n  border: 1px solid var(--medium-prio);\r\n  color: var(--medium-prio);\r\n}\r\n\r\n.h-prio-label {\r\n  border: 1px solid var(--high-prio);\r\n  color: var(--high-prio);\r\n  margin-right: 18px;\r\n}\r\n\r\n.form-priority-radio:checked + .l-prio-label {\r\n  border: 1px solid var(--low-prio);\r\n  background-color: var(--low-prio);\r\n}\r\n\r\n.form-priority-radio:checked + .m-prio-label {\r\n  border: 1px solid var(--medium-prio);\r\n  background-color: var(--medium-prio);\r\n}\r\n\r\n.form-priority-radio:checked + .h-prio-label {\r\n  border: 1px solid var(--high-prio);\r\n  background-color: var(--high-prio);\r\n}\r\n\r\n.form-priority-radio:checked + .form-priority-label {\r\n  transform: scale(1.1);\r\n  color: white;\r\n}\r\n\r\n.form-bottom-container {\r\n  gap: 15px;\r\n  margin: 35px 0 25px 0;\r\n}\r\n\r\n.form-ok-btn,\r\n.form-cancel-btn {\r\n  width: 105px;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  letter-spacing: 1px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: .85rem;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: .5s;\r\n  background-color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.form-ok-btn {\r\n  border: 1px solid var(--accent-1);\r\n  color: var(--accent-1);\r\n}\r\n\r\n.form-cancel-btn {\r\n  border: 1px solid var(--accent-3);\r\n  color: var(--accent-3);\r\n}\r\n\r\n.form-ok-btn:hover,\r\n.form-cancel-btn:hover {\r\n  color: white;\r\n  transform: translateY(-5px);\r\n  font-weight: bold;\r\n}\r\n\r\n.form-ok-btn:hover {\r\n  background-color: var(--accent-1);\r\n}\r\n\r\n.form-cancel-btn:hover {\r\n  background-color: var(--accent-3);\r\n}\r\n\r\n.border-btm-b {\r\n  border-bottom: 5px solid var(--accent-1);\r\n}\r\n\r\n.border-btm-w {\r\n  border-bottom: 5px solid white;\r\n}\r\n\r\n.no-pointer-events {\r\n  pointer-events: none;\r\n}"],sourceRoot:""}]);const s=i},417:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([r.id,".holder-box-container {\r\n  grid-area: 2 / 1 / 3 / -1;\r\n  justify-content: start;\r\n  align-items: center;\r\n  padding: 15px 10px;\r\n  font-family: 'Lato', sans-serif;\r\n  font-size: 1.15rem;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none;  /* Firefox */\r\n}\r\n\r\n/* Hide scrollbar for Chrome, Safari and Opera */\r\n.holder-box-container::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n@media (min-width: 650px) {\r\n  .holder-box-container {\r\n    grid-area: 2 / 2 / -1 / -1;\r\n    padding: 15px;\r\n  }\r\n}","",{version:3,sources:["webpack://./src/components/holderBox/holderBox.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;EAClB,+BAA+B;EAC/B,kBAAkB;EAClB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE;IACE,0BAA0B;IAC1B,aAAa;EACf;AACF",sourcesContent:[".holder-box-container {\r\n  grid-area: 2 / 1 / 3 / -1;\r\n  justify-content: start;\r\n  align-items: center;\r\n  padding: 15px 10px;\r\n  font-family: 'Lato', sans-serif;\r\n  font-size: 1.15rem;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none;  /* Firefox */\r\n}\r\n\r\n/* Hide scrollbar for Chrome, Safari and Opera */\r\n.holder-box-container::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n@media (min-width: 650px) {\r\n  .holder-box-container {\r\n    grid-area: 2 / 2 / -1 / -1;\r\n    padding: 15px;\r\n  }\r\n}"],sourceRoot:""}]);const s=i},851:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([r.id,".navbar-container {\r\n  width: min(430px, 90%);\r\n  height: 70px;\r\n  place-self: center;\r\n  grid-area: 3 / 1 / -1 / -1;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 15px;\r\n  background-color: var(--accent-4);\r\n  border-radius: 14px;\r\n}\r\n\r\n.navbar-btn {\r\n  height: 47px;\r\n  width: 47px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 15px;\r\n  font-size: 1.3rem;\r\n  color: var(--accent-4);\r\n  transition: background-color .2s, transform .4s;\r\n  cursor: pointer;\r\n  opacity: 0;\r\n}\r\n\r\n.navbar-btn:hover {\r\n  transform: translateY(-4px);\r\n}\r\n\r\n.navbar-btn-selected {\r\n  background-color: var(--accent-1);\r\n}\r\n\r\n.navbar-btn-selected.navbar-btn:hover {\r\n  transform: none;\r\n}\r\n\r\n.navbar-btn-icon {\r\n  width: 27px;\r\n  height: 27px;\r\n}\r\n\r\n.navbar-plus-btn {\r\n  margin-bottom: 4px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: 2.8rem;\r\n  color: var(--accent-1);\r\n  opacity: 1;\r\n}\r\n\r\n.navbar-plus-btn:hover {\r\n  color: var(--accent-1);\r\n}\r\n\r\n@media (min-width: 650px) {\r\n  .navbar-container {\r\n    width: 100%;\r\n    height: 100%;\r\n    place-self: auto;\r\n    grid-area: 2 / 1 / 3 / 2;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0 0 20px 0;\r\n    background-color: var(--accent-5);\r\n    box-shadow: 1px 0 4px 0 rgba(0, 0, 0, 0.25);\r\n    border-radius: 0;\r\n  }\r\n\r\n  .navbar-btn {\r\n    width: 100%;\r\n    height: 65px;\r\n    justify-content: start;\r\n    align-items: center;\r\n    padding-left: 15px;\r\n    position: relative;\r\n    font-size: 1.1rem;\r\n    font-family: 'Montserrat', sans-serif;\r\n    border-radius: 0;\r\n    border-right: 6px solid transparent;\r\n    transition: .55s;\r\n    opacity: 1;\r\n  }\r\n\r\n  .navbar-btn:hover,\r\n  .navbar-btn-selected  {\r\n    transform: none;\r\n    background-color: var(--accent-6);\r\n  }\r\n\r\n  .navbar-btn-selected {\r\n    border-right: 6px solid var(--accent-1);\r\n  }\r\n\r\n  .navbar-btn-grp-1::before {\r\n    width: 25px;\r\n    height: 25px;\r\n    content: attr(data-count);\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-bottom: 1px;\r\n    border-radius: 50%;\r\n    font-size: .85rem;\r\n    font-weight: bold;\r\n    color: var(--accent-3);\r\n    background-color: white;\r\n  }\r\n\r\n  .navbar-plus-btn {\r\n    width: 80px;\r\n    justify-content: center;\r\n    margin-top: auto;\r\n    padding-left: 0px;\r\n    font-size: 2.95rem;\r\n    color: var(--accent-1);\r\n    border: none;\r\n  }\r\n\r\n  .navbar-plus-btn:hover {\r\n    transform: scale(1.3);\r\n    color: var(--accent-1);\r\n    background-color: transparent;\r\n  }\r\n}\r\n\r\n@media (min-width: 850px) {\r\n  .navbar-btn {\r\n    padding-left: 20px;\r\n    font-size: 1.15rem;\r\n  }\r\n\r\n  .navbar-btn-grp-1::before {\r\n    right: 24px;\r\n  }\r\n\r\n  .navbar-plus-btn {\r\n    font-size: 2.95rem;\r\n  }\r\n}\r\n\r\n/* Animations */\r\n.animate-navbar-move-in {\r\n  animation: navbar-move-in 1s normal 0s 1 forwards;\r\n}\r\n\r\n@keyframes navbar-move-in {\r\n  from {\r\n    transform: translateY(150%);\r\n  }\r\n  \r\n  to {\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.animate-btn-appear {\r\n  animation: btn-appear 1s normal .5s 1 forwards;\r\n}\r\n\r\n@keyframes btn-appear {\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n","",{version:3,sources:["webpack://./src/components/navbar/navbar.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,YAAY;EACZ,kBAAkB;EAClB,0BAA0B;EAC1B,8BAA8B;EAC9B,mBAAmB;EACnB,eAAe;EACf,iCAAiC;EACjC,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,uBAAuB;EACvB,mBAAmB;EACnB,mBAAmB;EACnB,iBAAiB;EACjB,sBAAsB;EACtB,+CAA+C;EAC/C,eAAe;EACf,UAAU;AACZ;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,qCAAqC;EACrC,iBAAiB;EACjB,sBAAsB;EACtB,UAAU;AACZ;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE;IACE,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,wBAAwB;IACxB,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,iCAAiC;IACjC,2CAA2C;IAC3C,gBAAgB;EAClB;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,mBAAmB;IACnB,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;IACjB,qCAAqC;IACrC,gBAAgB;IAChB,mCAAmC;IACnC,gBAAgB;IAChB,UAAU;EACZ;;EAEA;;IAEE,eAAe;IACf,iCAAiC;EACnC;;EAEA;IACE,uCAAuC;EACzC;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,yBAAyB;IACzB,kBAAkB;IAClB,WAAW;IACX,QAAQ;IACR,2BAA2B;IAC3B,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;IACjB,sBAAsB;IACtB,uBAAuB;EACzB;;EAEA;IACE,WAAW;IACX,uBAAuB;IACvB,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,sBAAsB;IACtB,YAAY;EACd;;EAEA;IACE,qBAAqB;IACrB,sBAAsB;IACtB,6BAA6B;EAC/B;AACF;;AAEA;EACE;IACE,kBAAkB;IAClB,kBAAkB;EACpB;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,kBAAkB;EACpB;AACF;;AAEA,eAAe;AACf;EACE,iDAAiD;AACnD;;AAEA;EACE;IACE,2BAA2B;EAC7B;;EAEA;IACE,wBAAwB;EAC1B;AACF;;AAEA;EACE,8CAA8C;AAChD;;AAEA;EACE;IACE,UAAU;EACZ;AACF",sourcesContent:[".navbar-container {\r\n  width: min(430px, 90%);\r\n  height: 70px;\r\n  place-self: center;\r\n  grid-area: 3 / 1 / -1 / -1;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 15px;\r\n  background-color: var(--accent-4);\r\n  border-radius: 14px;\r\n}\r\n\r\n.navbar-btn {\r\n  height: 47px;\r\n  width: 47px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 15px;\r\n  font-size: 1.3rem;\r\n  color: var(--accent-4);\r\n  transition: background-color .2s, transform .4s;\r\n  cursor: pointer;\r\n  opacity: 0;\r\n}\r\n\r\n.navbar-btn:hover {\r\n  transform: translateY(-4px);\r\n}\r\n\r\n.navbar-btn-selected {\r\n  background-color: var(--accent-1);\r\n}\r\n\r\n.navbar-btn-selected.navbar-btn:hover {\r\n  transform: none;\r\n}\r\n\r\n.navbar-btn-icon {\r\n  width: 27px;\r\n  height: 27px;\r\n}\r\n\r\n.navbar-plus-btn {\r\n  margin-bottom: 4px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: 2.8rem;\r\n  color: var(--accent-1);\r\n  opacity: 1;\r\n}\r\n\r\n.navbar-plus-btn:hover {\r\n  color: var(--accent-1);\r\n}\r\n\r\n@media (min-width: 650px) {\r\n  .navbar-container {\r\n    width: 100%;\r\n    height: 100%;\r\n    place-self: auto;\r\n    grid-area: 2 / 1 / 3 / 2;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0 0 20px 0;\r\n    background-color: var(--accent-5);\r\n    box-shadow: 1px 0 4px 0 rgba(0, 0, 0, 0.25);\r\n    border-radius: 0;\r\n  }\r\n\r\n  .navbar-btn {\r\n    width: 100%;\r\n    height: 65px;\r\n    justify-content: start;\r\n    align-items: center;\r\n    padding-left: 15px;\r\n    position: relative;\r\n    font-size: 1.1rem;\r\n    font-family: 'Montserrat', sans-serif;\r\n    border-radius: 0;\r\n    border-right: 6px solid transparent;\r\n    transition: .55s;\r\n    opacity: 1;\r\n  }\r\n\r\n  .navbar-btn:hover,\r\n  .navbar-btn-selected  {\r\n    transform: none;\r\n    background-color: var(--accent-6);\r\n  }\r\n\r\n  .navbar-btn-selected {\r\n    border-right: 6px solid var(--accent-1);\r\n  }\r\n\r\n  .navbar-btn-grp-1::before {\r\n    width: 25px;\r\n    height: 25px;\r\n    content: attr(data-count);\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-bottom: 1px;\r\n    border-radius: 50%;\r\n    font-size: .85rem;\r\n    font-weight: bold;\r\n    color: var(--accent-3);\r\n    background-color: white;\r\n  }\r\n\r\n  .navbar-plus-btn {\r\n    width: 80px;\r\n    justify-content: center;\r\n    margin-top: auto;\r\n    padding-left: 0px;\r\n    font-size: 2.95rem;\r\n    color: var(--accent-1);\r\n    border: none;\r\n  }\r\n\r\n  .navbar-plus-btn:hover {\r\n    transform: scale(1.3);\r\n    color: var(--accent-1);\r\n    background-color: transparent;\r\n  }\r\n}\r\n\r\n@media (min-width: 850px) {\r\n  .navbar-btn {\r\n    padding-left: 20px;\r\n    font-size: 1.15rem;\r\n  }\r\n\r\n  .navbar-btn-grp-1::before {\r\n    right: 24px;\r\n  }\r\n\r\n  .navbar-plus-btn {\r\n    font-size: 2.95rem;\r\n  }\r\n}\r\n\r\n/* Animations */\r\n.animate-navbar-move-in {\r\n  animation: navbar-move-in 1s normal 0s 1 forwards;\r\n}\r\n\r\n@keyframes navbar-move-in {\r\n  from {\r\n    transform: translateY(150%);\r\n  }\r\n  \r\n  to {\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.animate-btn-appear {\r\n  animation: btn-appear 1s normal .5s 1 forwards;\r\n}\r\n\r\n@keyframes btn-appear {\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n"],sourceRoot:""}]);const s=i},117:(r,n,e)=>{e.d(n,{Z:()=>p});var t=e(537),o=e.n(t),a=e(645),i=e.n(a),s=e(667),A=e.n(s),d=new URL(e(173),e.b),c=i()(o()),l=A()(d);c.push([r.id,".project-selector-container {\r\n  height: min(425px, 95%);\r\n  width: 335px;\r\n  display: grid;\r\n  grid-template-rows: 65px 1fr 95px;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n  font-family: 'Lato', sans-serif;\r\n  border-radius: 8px;\r\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\r\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\r\n}\r\n\r\n.project-selector-container::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.project-selector-title {\r\n  background-color: var(--accent-3);\r\n  border-radius: 8px 8px 0 0;\r\n  color: white;\r\n  font-size: 1.2rem;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.project-selector-projects-box {\r\n  width: 100%;\r\n  align-items: center;\r\n  padding: 15px;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\r\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\r\n}\r\n\r\n/* Hide scrollbar for Chrome, Safari and Opera */\r\n.project-selector-projects-box::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.project-selector-btns-container {\r\n  gap: 15px;\r\n  margin: 35px 0 25px 0;\r\n}\r\n\r\n.project-selector-cancel-btn, \r\n.project-selector-ok-btn {\r\n  width: 105px;\r\n  padding: 10px 20px;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n  letter-spacing: 1px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: .85rem;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: .5s;\r\n  background-color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.project-selector-cancel-btn {\r\n  border: 1px solid var(--accent-3);\r\n  color: var(--accent-3);\r\n}\r\n\r\n.project-selector-ok-btn {\r\n  border: 1px solid var(--accent-1);\r\n  color: var(--accent-1);\r\n}\r\n\r\n.project-selector-cancel-btn:hover, \r\n.project-selector-ok-btn:hover {\r\n  color: white;\r\n  transform: translateY(-5px);\r\n  font-weight: bold;\r\n}\r\n\r\n.project-selector-cancel-btn:hover {\r\n  background-color: var(--accent-3);\r\n}\r\n\r\n.project-selector-ok-btn:hover {\r\n  background-color: var(--accent-1);\r\n}\r\n\r\n.project-option {\r\n  width: 100%;\r\n  height: auto;\r\n  background-color: var(--accent-2);\r\n  padding: 13px 10px;\r\n  margin-bottom: 8px;\r\n  transition: .25s;\r\n  font-family: 'Lato', sans-serif;\r\n  position: relative;\r\n  cursor: pointer;\r\n}\r\n\r\n.project-option:hover {\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.project-option:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.project-option-title {\r\n  width: 205px; \r\n  margin-right: auto;\r\n  overflow-wrap: anywhere;\r\n}\r\n\r\n.project-option-checkbox {\r\n  height: 20px;\r\n  width: 20px;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 15px;\r\n  transform: translateY(-50%);\r\n  background-color: white;\r\n  border: 2px solid var(--accent-1);\r\n  border-radius: 5px;\r\n}\r\n\r\n.selected .project-option-checkbox {\r\n  background-color: var(--accent-1);\r\n}\r\n\r\n.selected .project-option-checkbox::before {\r\n  height: 12px;\r\n  width: 12px;\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-image: url("+l+");\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n@media (min-width: 950px) {\r\n  .project-selector-container {\r\n    height: min(500px, 95%);\r\n    width: 380px;\r\n  }\r\n\r\n  .project-selector-title {\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  .project-option-title {\r\n    width: 265px; \r\n  }\r\n}","",{version:3,sources:["webpack://./src/components/projectSelector/projectSelector.css"],names:[],mappings:"AAAA;EACE,uBAAuB;EACvB,YAAY;EACZ,aAAa;EACb,iCAAiC;EACjC,eAAe;EACf,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,uBAAuB;EACvB,+BAA+B;EAC/B,kBAAkB;EAClB,6CAA6C;EAC7C,gBAAgB;EAChB,wBAAwB,GAAG,mCAAmC;EAC9D,qBAAqB,GAAG,+BAA+B;AACzD;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iCAAiC;EACjC,0BAA0B;EAC1B,YAAY;EACZ,iBAAiB;EACjB,qCAAqC;AACvC;;AAEA;EACE,WAAW;EACX,mBAAmB;EACnB,aAAa;EACb,gBAAgB;EAChB,wBAAwB,GAAG,mCAAmC;EAC9D,qBAAqB,GAAG,+BAA+B;AACzD;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE,SAAS;EACT,qBAAqB;AACvB;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,mBAAmB;EACnB,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;EACf,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;EACZ,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iCAAiC;EACjC,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,+BAA+B;EAC/B,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,6CAA6C;EAC7C,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,WAAW;EACX,2BAA2B;EAC3B,uBAAuB;EACvB,iCAAiC;EACjC,kBAAkB;AACpB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,yDAA2C;EAC3C,sBAAsB;EACtB,4BAA4B;AAC9B;;AAEA;EACE;IACE,uBAAuB;IACvB,YAAY;EACd;;EAEA;IACE,kBAAkB;EACpB;;EAEA;IACE,YAAY;EACd;AACF",sourcesContent:[".project-selector-container {\r\n  height: min(425px, 95%);\r\n  width: 335px;\r\n  display: grid;\r\n  grid-template-rows: 65px 1fr 95px;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n  font-family: 'Lato', sans-serif;\r\n  border-radius: 8px;\r\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\r\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\r\n}\r\n\r\n.project-selector-container::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.project-selector-title {\r\n  background-color: var(--accent-3);\r\n  border-radius: 8px 8px 0 0;\r\n  color: white;\r\n  font-size: 1.2rem;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.project-selector-projects-box {\r\n  width: 100%;\r\n  align-items: center;\r\n  padding: 15px;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\r\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\r\n}\r\n\r\n/* Hide scrollbar for Chrome, Safari and Opera */\r\n.project-selector-projects-box::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.project-selector-btns-container {\r\n  gap: 15px;\r\n  margin: 35px 0 25px 0;\r\n}\r\n\r\n.project-selector-cancel-btn, \r\n.project-selector-ok-btn {\r\n  width: 105px;\r\n  padding: 10px 20px;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n  letter-spacing: 1px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: .85rem;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: .5s;\r\n  background-color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.project-selector-cancel-btn {\r\n  border: 1px solid var(--accent-3);\r\n  color: var(--accent-3);\r\n}\r\n\r\n.project-selector-ok-btn {\r\n  border: 1px solid var(--accent-1);\r\n  color: var(--accent-1);\r\n}\r\n\r\n.project-selector-cancel-btn:hover, \r\n.project-selector-ok-btn:hover {\r\n  color: white;\r\n  transform: translateY(-5px);\r\n  font-weight: bold;\r\n}\r\n\r\n.project-selector-cancel-btn:hover {\r\n  background-color: var(--accent-3);\r\n}\r\n\r\n.project-selector-ok-btn:hover {\r\n  background-color: var(--accent-1);\r\n}\r\n\r\n.project-option {\r\n  width: 100%;\r\n  height: auto;\r\n  background-color: var(--accent-2);\r\n  padding: 13px 10px;\r\n  margin-bottom: 8px;\r\n  transition: .25s;\r\n  font-family: 'Lato', sans-serif;\r\n  position: relative;\r\n  cursor: pointer;\r\n}\r\n\r\n.project-option:hover {\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.project-option:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.project-option-title {\r\n  width: 205px; \r\n  margin-right: auto;\r\n  overflow-wrap: anywhere;\r\n}\r\n\r\n.project-option-checkbox {\r\n  height: 20px;\r\n  width: 20px;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 15px;\r\n  transform: translateY(-50%);\r\n  background-color: white;\r\n  border: 2px solid var(--accent-1);\r\n  border-radius: 5px;\r\n}\r\n\r\n.selected .project-option-checkbox {\r\n  background-color: var(--accent-1);\r\n}\r\n\r\n.selected .project-option-checkbox::before {\r\n  height: 12px;\r\n  width: 12px;\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-image: url(\"./assets/check.png\");\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n@media (min-width: 950px) {\r\n  .project-selector-container {\r\n    height: min(500px, 95%);\r\n    width: 380px;\r\n  }\r\n\r\n  .project-selector-title {\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  .project-option-title {\r\n    width: 265px; \r\n  }\r\n}"],sourceRoot:""}]);const p=c},735:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([r.id,".project-container {\r\n  width: 100%;\r\n  gap: 18px;\r\n  background-color: var(--accent-2);\r\n  padding: 12px 10px;\r\n  margin-bottom: 7px;\r\n  transition: .25s;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n.project-container:hover {\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.project-container:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.project-title {\r\n  width: 185px;\r\n  margin-right: auto;\r\n  font-size: 1rem;\r\n  overflow-wrap: anywhere;\r\n}\r\n\r\n.project-add-icon {\r\n  margin-left: 2px;\r\n}\r\n\r\n.project-add-icon,\r\n.project-edit-icon,\r\n.project-trash-icon {\r\n  width: var(--icon-width-1);\r\n  height: var(--icon-height-1);\r\n}\r\n\r\n.project-add-icon:hover,\r\n.project-edit-icon:hover,\r\n.project-trash-icon:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.project-container,\r\n.project-add-icon,\r\n.project-edit-icon,\r\n.project-trash-icon {\r\n  cursor: pointer;\r\n}\r\n\r\n@media (min-width: 380px) {\r\n  .project-title {\r\n    width: 215px;\r\n  }\r\n}\r\n\r\n@media (min-width: 450px) {\r\n  .project-title {\r\n    width: 250px;\r\n  }\r\n}\r\n\r\n@media (min-width: 500px) {\r\n  .project-title {\r\n    width: 285px;\r\n  }\r\n}\r\n\r\n@media (min-width: 650px) {\r\n  .project-title {\r\n    width: 275px;\r\n  }\r\n}\r\n\r\n@media (min-width: 750px) {\r\n  .project-title {\r\n    width: 325px;\r\n  }\r\n}\r\n\r\n@media (min-width: 850px) {\r\n  .project-title {\r\n    width: 370px;\r\n  }\r\n}\r\n\r\n","",{version:3,sources:["webpack://./src/components/project/project.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,SAAS;EACT,iCAAiC;EACjC,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,+BAA+B;AACjC;;AAEA;EACE,6CAA6C;EAC7C,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;;EAGE,0BAA0B;EAC1B,4BAA4B;AAC9B;;AAEA;;;EAGE,qBAAqB;AACvB;;AAEA;;;;EAIE,eAAe;AACjB;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF",sourcesContent:[".project-container {\r\n  width: 100%;\r\n  gap: 18px;\r\n  background-color: var(--accent-2);\r\n  padding: 12px 10px;\r\n  margin-bottom: 7px;\r\n  transition: .25s;\r\n  font-family: 'Lato', sans-serif;\r\n}\r\n\r\n.project-container:hover {\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.project-container:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.project-title {\r\n  width: 185px;\r\n  margin-right: auto;\r\n  font-size: 1rem;\r\n  overflow-wrap: anywhere;\r\n}\r\n\r\n.project-add-icon {\r\n  margin-left: 2px;\r\n}\r\n\r\n.project-add-icon,\r\n.project-edit-icon,\r\n.project-trash-icon {\r\n  width: var(--icon-width-1);\r\n  height: var(--icon-height-1);\r\n}\r\n\r\n.project-add-icon:hover,\r\n.project-edit-icon:hover,\r\n.project-trash-icon:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.project-container,\r\n.project-add-icon,\r\n.project-edit-icon,\r\n.project-trash-icon {\r\n  cursor: pointer;\r\n}\r\n\r\n@media (min-width: 380px) {\r\n  .project-title {\r\n    width: 215px;\r\n  }\r\n}\r\n\r\n@media (min-width: 450px) {\r\n  .project-title {\r\n    width: 250px;\r\n  }\r\n}\r\n\r\n@media (min-width: 500px) {\r\n  .project-title {\r\n    width: 285px;\r\n  }\r\n}\r\n\r\n@media (min-width: 650px) {\r\n  .project-title {\r\n    width: 275px;\r\n  }\r\n}\r\n\r\n@media (min-width: 750px) {\r\n  .project-title {\r\n    width: 325px;\r\n  }\r\n}\r\n\r\n@media (min-width: 850px) {\r\n  .project-title {\r\n    width: 370px;\r\n  }\r\n}\r\n\r\n"],sourceRoot:""}]);const s=i},497:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([r.id,".details-container {\r\n  width: 315px;\r\n  height: min(505px, 95%);\r\n  display: grid;\r\n  grid-template-rows: 40px 1fr;\r\n  gap: 20px;\r\n  padding: 10px 15px;\r\n  font-family: 'Lato', sans-serif;\r\n  border-radius: 8px;\r\n  background-color: white;\r\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50.5%, -50.5%); /* translate(-50%, -50%) makes it blurry. This is a trick for quick fix */\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\r\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\r\n}\r\n\r\n.details-container::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.details-top-container {\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.details-bottom-container {\r\n  display: grid;\r\n  gap: 20px;\r\n  grid-template-rows: 90px 230px 60px;\r\n  justify-items: center;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n}\r\n\r\n.details-priority {\r\n  border-radius: 4px;\r\n  padding: 1px 10px 3px 10px;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n\r\n.details-priority-l {\r\n  border: 1px solid var(--low-prio);\r\n  background-color: var(--low-prio);\r\n}\r\n\r\n.details-priority-m {\r\n  border: 1px solid var(--medium-prio);\r\n  background-color: var(--medium-prio);\r\n}\r\n\r\n.details-priority-h {\r\n  border: 1px solid var(--high-prio);\r\n  background-color: var(--high-prio);\r\n}\r\n\r\n.details-title,\r\n.details-notes {\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  overflow-wrap: anywhere;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none;  /* Firefox */\r\n}\r\n\r\n/* Hide scrollbar for Chrome, Safari and Opera */\r\n.details-title::-webkit-scrollbar,\r\n.details-notes::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.details-title {\r\n  text-align: center;\r\n  font-size: 1.1rem;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.details-notes {\r\n  text-align: left;\r\n}\r\n\r\n.details-close-btn {\r\n  padding: 10px 20px;\r\n  border: 1px solid var(--accent-1);\r\n  border-radius: 5px;\r\n  color: var(--accent-1);\r\n  letter-spacing: 1px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: .85rem;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: .5s;\r\n}\r\n\r\n.details-close-btn:hover {\r\n  color: white;\r\n  background-color: var(--accent-1);\r\n  transform: translateY(-5px);\r\n  font-weight: bold;\r\n}","",{version:3,sources:["webpack://./src/components/todoDetails/todoDetails.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,uBAAuB;EACvB,aAAa;EACb,4BAA4B;EAC5B,SAAS;EACT,kBAAkB;EAClB,+BAA+B;EAC/B,kBAAkB;EAClB,uBAAuB;EACvB,6CAA6C;EAC7C,eAAe;EACf,QAAQ;EACR,SAAS;EACT,oCAAoC,EAAE,yEAAyE;EAC/G,gBAAgB;EAChB,wBAAwB,GAAG,mCAAmC;EAC9D,qBAAqB,GAAG,+BAA+B;AACzD;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,mCAAmC;EACnC,qBAAqB;EACrB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,0BAA0B;EAC1B,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;EACjC,iCAAiC;AACnC;;AAEA;EACE,oCAAoC;EACpC,oCAAoC;AACtC;;AAEA;EACE,kCAAkC;EAClC,kCAAkC;AACpC;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,uBAAuB;EACvB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;;EAEE,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,qCAAqC;AACvC;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,iCAAiC;EACjC,kBAAkB;EAClB,sBAAsB;EACtB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,iCAAiC;EACjC,2BAA2B;EAC3B,iBAAiB;AACnB",sourcesContent:[".details-container {\r\n  width: 315px;\r\n  height: min(505px, 95%);\r\n  display: grid;\r\n  grid-template-rows: 40px 1fr;\r\n  gap: 20px;\r\n  padding: 10px 15px;\r\n  font-family: 'Lato', sans-serif;\r\n  border-radius: 8px;\r\n  background-color: white;\r\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50.5%, -50.5%); /* translate(-50%, -50%) makes it blurry. This is a trick for quick fix */\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\r\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\r\n}\r\n\r\n.details-container::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.details-top-container {\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.details-bottom-container {\r\n  display: grid;\r\n  gap: 20px;\r\n  grid-template-rows: 90px 230px 60px;\r\n  justify-items: center;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n}\r\n\r\n.details-priority {\r\n  border-radius: 4px;\r\n  padding: 1px 10px 3px 10px;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n\r\n.details-priority-l {\r\n  border: 1px solid var(--low-prio);\r\n  background-color: var(--low-prio);\r\n}\r\n\r\n.details-priority-m {\r\n  border: 1px solid var(--medium-prio);\r\n  background-color: var(--medium-prio);\r\n}\r\n\r\n.details-priority-h {\r\n  border: 1px solid var(--high-prio);\r\n  background-color: var(--high-prio);\r\n}\r\n\r\n.details-title,\r\n.details-notes {\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  overflow-wrap: anywhere;\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;  /* IE and Edge */\r\n  scrollbar-width: none;  /* Firefox */\r\n}\r\n\r\n/* Hide scrollbar for Chrome, Safari and Opera */\r\n.details-title::-webkit-scrollbar,\r\n.details-notes::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.details-title {\r\n  text-align: center;\r\n  font-size: 1.1rem;\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n\r\n.details-notes {\r\n  text-align: left;\r\n}\r\n\r\n.details-close-btn {\r\n  padding: 10px 20px;\r\n  border: 1px solid var(--accent-1);\r\n  border-radius: 5px;\r\n  color: var(--accent-1);\r\n  letter-spacing: 1px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: .85rem;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: .5s;\r\n}\r\n\r\n.details-close-btn:hover {\r\n  color: white;\r\n  background-color: var(--accent-1);\r\n  transform: translateY(-5px);\r\n  font-weight: bold;\r\n}"],sourceRoot:""}]);const s=i},729:(r,n,e)=>{e.d(n,{Z:()=>p});var t=e(537),o=e.n(t),a=e(645),i=e.n(a),s=e(667),A=e.n(s),d=new URL(e(918),e.b),c=i()(o()),l=A()(d);c.push([r.id,'.item-container {\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 15px;\r\n  background-color: var(--accent-2);\r\n  padding: 14px 10px;\r\n  margin-bottom: 8px;\r\n  transition: .25s;\r\n  font-family: \'Lato\', sans-serif;\r\n  position: relative;\r\n}\r\n\r\n.item-container:hover {\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.item-container:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.item-container:has(.item-checkbox.checked)::before {\r\n  width: calc(100% - 34px - 34px);\r\n  height: 100%;\r\n  content: "";\r\n  position: absolute;\r\n  left: 34px;\r\n  right: 34px;\r\n  background-color: rgba(240, 240, 240, 0.8);\r\n  filter: blur(1px);\r\n}\r\n\r\n.item-left-container {\r\n  gap: 12px;\r\n}\r\n\r\n.item-right-container {\r\n  gap: 14px;\r\n}\r\n\r\n.item-checkbox {\r\n  width: 19px;\r\n  height: 19px;\r\n  position:relative;\r\n  border: 2px solid var(--accent-1);\r\n  border-radius: 5px;\r\n  background-color: white;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.checked {\r\n  background-color: var(--accent-1);\r\n}\r\n\r\n.checked.item-checkbox::before {\r\n  width: 11px;\r\n  height: 11px;\r\n  content: "";\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-image: url('+l+");\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.no-pointer-events {\r\n  pointer-events: none;\r\n  cursor: auto;\r\n}\r\n\r\n.item-container.no-pointer-events .item-checkbox,\r\n.item-container.no-pointer-events .item-trash-icon {\r\n  pointer-events: all;\r\n  cursor: pointer;\r\n}\r\n\r\n.item-title {\r\n  width: 100px;\r\n  font-size: 1rem;\r\n  overflow-wrap: anywhere;\r\n}\r\n\r\n.item-due-date {\r\n  font-size: .9rem;\r\n}\r\n\r\n.item-edit-icon {\r\n  margin-left: 2px;\r\n}\r\n\r\n.item-edit-icon,\r\n.item-move-icon,\r\n.item-trash-icon  {\r\n  width: var(--icon-width-1);\r\n  height: var(--icon-height-1);\r\n  transition: .35s;\r\n}\r\n\r\n.item-edit-icon:hover,\r\n.item-move-icon:hover,\r\n.item-trash-icon:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.item-container,\r\n.item-checkbox,\r\n.item-edit-icon,\r\n.item-move-icon,\r\n.item-trash-icon {\r\n  cursor: pointer;\r\n}\r\n\r\n@media (min-width: 380px) {\r\n  .item-title {\r\n    width: 125px;\r\n  }\r\n}\r\n\r\n@media (min-width: 400px) {\r\n  .item-title {\r\n    width: 145px;\r\n  }\r\n}\r\n\r\n@media (min-width: 450px) {\r\n  .item-title {\r\n    width: 185px;\r\n  }\r\n}\r\n\r\n@media (min-width: 500px) {\r\n  .item-title {\r\n    width: 240px;\r\n  }\r\n}\r\n\r\n@media (min-width: 650px) {\r\n  .item-title {\r\n    width: 175px;\r\n  }\r\n  \r\n  .item-right-container {\r\n    gap: 18px;\r\n  }\r\n}\r\n\r\n@media (min-width: 750px) {\r\n  .item-title {\r\n    width: 270px;\r\n  }\r\n}\r\n\r\n@media (min-width: 850px) {\r\n  .item-title {\r\n    width: 330px;\r\n  }\r\n}\r\n\r\n","",{version:3,sources:["webpack://./src/components/todo/todo.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,8BAA8B;EAC9B,mBAAmB;EACnB,SAAS;EACT,iCAAiC;EACjC,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,+BAA+B;EAC/B,kBAAkB;AACpB;;AAEA;EACE,6CAA6C;EAC7C,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,+BAA+B;EAC/B,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,0CAA0C;EAC1C,iBAAiB;AACnB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,iCAAiC;EACjC,kBAAkB;EAClB,uBAAuB;EACvB,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,yDAA2C;EAC3C,sBAAsB;EACtB,4BAA4B;AAC9B;;AAEA;EACE,oBAAoB;EACpB,YAAY;AACd;;AAEA;;EAEE,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;;EAGE,0BAA0B;EAC1B,4BAA4B;EAC5B,gBAAgB;AAClB;;AAEA;;;EAGE,qBAAqB;AACvB;;AAEA;;;;;EAKE,eAAe;AACjB;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;;EAEA;IACE,SAAS;EACX;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF",sourcesContent:['.item-container {\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 15px;\r\n  background-color: var(--accent-2);\r\n  padding: 14px 10px;\r\n  margin-bottom: 8px;\r\n  transition: .25s;\r\n  font-family: \'Lato\', sans-serif;\r\n  position: relative;\r\n}\r\n\r\n.item-container:hover {\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.item-container:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.item-container:has(.item-checkbox.checked)::before {\r\n  width: calc(100% - 34px - 34px);\r\n  height: 100%;\r\n  content: "";\r\n  position: absolute;\r\n  left: 34px;\r\n  right: 34px;\r\n  background-color: rgba(240, 240, 240, 0.8);\r\n  filter: blur(1px);\r\n}\r\n\r\n.item-left-container {\r\n  gap: 12px;\r\n}\r\n\r\n.item-right-container {\r\n  gap: 14px;\r\n}\r\n\r\n.item-checkbox {\r\n  width: 19px;\r\n  height: 19px;\r\n  position:relative;\r\n  border: 2px solid var(--accent-1);\r\n  border-radius: 5px;\r\n  background-color: white;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.checked {\r\n  background-color: var(--accent-1);\r\n}\r\n\r\n.checked.item-checkbox::before {\r\n  width: 11px;\r\n  height: 11px;\r\n  content: "";\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-image: url("./assets/check.png");\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.no-pointer-events {\r\n  pointer-events: none;\r\n  cursor: auto;\r\n}\r\n\r\n.item-container.no-pointer-events .item-checkbox,\r\n.item-container.no-pointer-events .item-trash-icon {\r\n  pointer-events: all;\r\n  cursor: pointer;\r\n}\r\n\r\n.item-title {\r\n  width: 100px;\r\n  font-size: 1rem;\r\n  overflow-wrap: anywhere;\r\n}\r\n\r\n.item-due-date {\r\n  font-size: .9rem;\r\n}\r\n\r\n.item-edit-icon {\r\n  margin-left: 2px;\r\n}\r\n\r\n.item-edit-icon,\r\n.item-move-icon,\r\n.item-trash-icon  {\r\n  width: var(--icon-width-1);\r\n  height: var(--icon-height-1);\r\n  transition: .35s;\r\n}\r\n\r\n.item-edit-icon:hover,\r\n.item-move-icon:hover,\r\n.item-trash-icon:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.item-container,\r\n.item-checkbox,\r\n.item-edit-icon,\r\n.item-move-icon,\r\n.item-trash-icon {\r\n  cursor: pointer;\r\n}\r\n\r\n@media (min-width: 380px) {\r\n  .item-title {\r\n    width: 125px;\r\n  }\r\n}\r\n\r\n@media (min-width: 400px) {\r\n  .item-title {\r\n    width: 145px;\r\n  }\r\n}\r\n\r\n@media (min-width: 450px) {\r\n  .item-title {\r\n    width: 185px;\r\n  }\r\n}\r\n\r\n@media (min-width: 500px) {\r\n  .item-title {\r\n    width: 240px;\r\n  }\r\n}\r\n\r\n@media (min-width: 650px) {\r\n  .item-title {\r\n    width: 175px;\r\n  }\r\n  \r\n  .item-right-container {\r\n    gap: 18px;\r\n  }\r\n}\r\n\r\n@media (min-width: 750px) {\r\n  .item-title {\r\n    width: 270px;\r\n  }\r\n}\r\n\r\n@media (min-width: 850px) {\r\n  .item-title {\r\n    width: 330px;\r\n  }\r\n}\r\n\r\n'],sourceRoot:""}]);const p=c},618:(r,n,e)=>{e.d(n,{Z:()=>p});var t=e(537),o=e.n(t),a=e(645),i=e.n(a),s=e(667),A=e.n(s),d=new URL(e(360),e.b),c=i()(o());c.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Alatsi&family=JetBrains+Mono:wght@200&family=Lato:wght@100;300&family=Lobster&family=Montserrat+Alternates:wght@300;400&family=Montserrat:wght@200;300;400&family=PT+Mono&family=Press+Start+2P&display=swap);"]);var l=A()(d);c.push([r.id,":root {\r\n  --accent-1: rgb(26, 167, 125);\r\n  --accent-2: rgb(240, 240, 240);\r\n  --accent-3: #cc7e97;\r\n  --accent-4: rgb(35, 35, 35);\r\n  --accent-5: rgba(220, 220, 220, 0.5);\r\n  --accent-6: rgba(205, 205, 205, 0.65);\r\n  --accent-7: rgb(255, 62, 101);\r\n  --low-prio: rgb(40, 207, 40);\r\n  --medium-prio: rgb(255, 187, 60);\r\n  --high-prio: rgb(255, 70, 70);\r\n  --icon-width-1: 20px;\r\n  --icon-height-1: 20px;\r\n}\r\n\r\n.app-container {\r\n  height: 100vh;\r\n  background-image: url("+l+");\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n}\r\n","",{version:3,sources:["webpack://./src/container/app.css"],names:[],mappings:"AAEA;EACE,6BAA6B;EAC7B,8BAA8B;EAC9B,mBAAmB;EACnB,2BAA2B;EAC3B,oCAAoC;EACpC,qCAAqC;EACrC,6BAA6B;EAC7B,4BAA4B;EAC5B,gCAAgC;EAChC,6BAA6B;EAC7B,oBAAoB;EACpB,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,yDAAkD;EAClD,sBAAsB;EACtB,4BAA4B;EAC5B,2BAA2B;AAC7B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Alatsi&family=JetBrains+Mono:wght@200&family=Lato:wght@100;300&family=Lobster&family=Montserrat+Alternates:wght@300;400&family=Montserrat:wght@200;300;400&family=PT+Mono&family=Press+Start+2P&display=swap');\r\n\r\n:root {\r\n  --accent-1: rgb(26, 167, 125);\r\n  --accent-2: rgb(240, 240, 240);\r\n  --accent-3: #cc7e97;\r\n  --accent-4: rgb(35, 35, 35);\r\n  --accent-5: rgba(220, 220, 220, 0.5);\r\n  --accent-6: rgba(205, 205, 205, 0.65);\r\n  --accent-7: rgb(255, 62, 101);\r\n  --low-prio: rgb(40, 207, 40);\r\n  --medium-prio: rgb(255, 187, 60);\r\n  --high-prio: rgb(255, 70, 70);\r\n  --icon-width-1: 20px;\r\n  --icon-height-1: 20px;\r\n}\r\n\r\n.app-container {\r\n  height: 100vh;\r\n  background-image: url(\"./assets/bg-wallpaper.jpg\");\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n}\r\n"],sourceRoot:""}]);const p=c},424:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([r.id,"*,\r\n*::before,\r\n*::after {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* Utilities */\r\n.flex {\r\n  display: flex;\r\n}\r\n\r\n.flex-column {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.center {\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.hidden {\r\n  opacity: 0;\r\n}\r\n\r\n.disabled {\r\n  filter: blur(1px) grayscale(50%) brightness(50%);\r\n  pointer-events: none;\r\n}\r\n\r\n.animate-appear {\r\n  animation: appear .7s 0s 1 forwards;\r\n}\r\n\r\n@keyframes appear {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  \r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.animate-delete {\r\n  animation: delete 1.2s 0s 1 forwards;\r\n}\r\n\r\n@keyframes delete {\r\n  to {\r\n    transform: translateX(150%);\r\n  }\r\n}\r\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;;EAGE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA,cAAc;AACd;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,gDAAgD;EAChD,oBAAoB;AACtB;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE;IACE,UAAU;EACZ;;EAEA;IACE,UAAU;EACZ;AACF;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE;IACE,2BAA2B;EAC7B;AACF",sourcesContent:["*,\r\n*::before,\r\n*::after {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* Utilities */\r\n.flex {\r\n  display: flex;\r\n}\r\n\r\n.flex-column {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.center {\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.hidden {\r\n  opacity: 0;\r\n}\r\n\r\n.disabled {\r\n  filter: blur(1px) grayscale(50%) brightness(50%);\r\n  pointer-events: none;\r\n}\r\n\r\n.animate-appear {\r\n  animation: appear .7s 0s 1 forwards;\r\n}\r\n\r\n@keyframes appear {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  \r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.animate-delete {\r\n  animation: delete 1.2s 0s 1 forwards;\r\n}\r\n\r\n@keyframes delete {\r\n  to {\r\n    transform: translateX(150%);\r\n  }\r\n}\r\n"],sourceRoot:""}]);const s=i},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,a){"string"==typeof r&&(r=[[null,r,void 0]]);var i={};if(t)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var d=0;d<r.length;d++){var c=[].concat(r[d]);t&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),n.push(c))}},n}},667:r=>{r.exports=function(r,n){return n||(n={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),n.hash&&(r+=n.hash),/["'() \t\n]|(%20)/.test(r)||n.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=e.sources.map((function(r){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(r," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var a={},i=[],s=0;s<r.length;s++){var A=r[s],d=t.base?A[0]+t.base:A[0],c=a[d]||0,l="".concat(d," ").concat(c);a[d]=c+1;var p=e(l),m={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var u=o(m,t);t.byIndex=s,n.splice(s,0,{identifier:l,updater:u,references:1})}i.push(l)}return i}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var a=t(r=r||[],o=o||{});return function(r){r=r||[];for(var i=0;i<a.length;i++){var s=e(a[i]);n[s].references--}for(var A=t(r,o),d=0;d<a.length;d++){var c=e(a[d]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}a=A}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},173:(r,n,e)=>{r.exports=e.p+"a568f6f1b577d3fd06b6.png"},918:(r,n,e)=>{r.exports=e.p+"a568f6f1b577d3fd06b6.png"},360:(r,n,e)=>{r.exports=e.p+"cbb11493c646967b47db.jpg"}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var a=n[t]={id:t,exports:{}};return r[t](a,a.exports,e),a.exports}e.m=r,e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;e.g.importScripts&&(r=e.g.location+"");var n=e.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var t=n.getElementsByTagName("script");t.length&&(r=t[t.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=r})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var r=e(379),n=e.n(r),t=e(795),o=e.n(t),a=e(569),i=e.n(a),s=e(565),A=e.n(s),d=e(216),c=e.n(d),l=e(589),p=e.n(l),m=e(618),u={};function f(r,n){if(n.length<r)throw new TypeError(r+" argument"+(r>1?"s":"")+" required, but only "+n.length+" present")}function C(r){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r},C(r)}function h(r){return f(1,arguments),r instanceof Date||"object"===C(r)&&"[object Date]"===Object.prototype.toString.call(r)}function b(r){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r},b(r)}function g(r){f(1,arguments);var n=Object.prototype.toString.call(r);return r instanceof Date||"object"===b(r)&&"[object Date]"===n?new Date(r.getTime()):"number"==typeof r||"[object Number]"===n?new Date(r):("string"!=typeof r&&"[object String]"!==n||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function E(r){if(f(1,arguments),!h(r)&&"number"!=typeof r)return!1;var n=g(r);return!isNaN(Number(n))}function B(r){if(null===r||!0===r||!1===r)return NaN;var n=Number(r);return isNaN(n)?n:n<0?Math.ceil(n):Math.floor(n)}function v(r,n){f(2,arguments);var e=g(r).getTime(),t=B(n);return new Date(e+t)}function x(r,n){f(2,arguments);var e=B(n);return v(r,-e)}u.styleTagTransform=p(),u.setAttributes=A(),u.insert=i().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=c(),n()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;var w=864e5;function y(r){f(1,arguments);var n=1,e=g(r),t=e.getUTCDay(),o=(t<n?7:0)+t-n;return e.setUTCDate(e.getUTCDate()-o),e.setUTCHours(0,0,0,0),e}function k(r){f(1,arguments);var n=g(r),e=n.getUTCFullYear(),t=new Date(0);t.setUTCFullYear(e+1,0,4),t.setUTCHours(0,0,0,0);var o=y(t),a=new Date(0);a.setUTCFullYear(e,0,4),a.setUTCHours(0,0,0,0);var i=y(a);return n.getTime()>=o.getTime()?e+1:n.getTime()>=i.getTime()?e:e-1}function j(r){f(1,arguments);var n=k(r),e=new Date(0);e.setUTCFullYear(n,0,4),e.setUTCHours(0,0,0,0);var t=y(e);return t}var T=6048e5,I={};function L(){return I}function Y(r,n){var e,t,o,a,i,s,A,d;f(1,arguments);var c=L(),l=B(null!==(e=null!==(t=null!==(o=null!==(a=null==n?void 0:n.weekStartsOn)&&void 0!==a?a:null==n||null===(i=n.locale)||void 0===i||null===(s=i.options)||void 0===s?void 0:s.weekStartsOn)&&void 0!==o?o:c.weekStartsOn)&&void 0!==t?t:null===(A=c.locale)||void 0===A||null===(d=A.options)||void 0===d?void 0:d.weekStartsOn)&&void 0!==e?e:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var p=g(r),m=p.getUTCDay(),u=(m<l?7:0)+m-l;return p.setUTCDate(p.getUTCDate()-u),p.setUTCHours(0,0,0,0),p}function S(r,n){var e,t,o,a,i,s,A,d;f(1,arguments);var c=g(r),l=c.getUTCFullYear(),p=L(),m=B(null!==(e=null!==(t=null!==(o=null!==(a=null==n?void 0:n.firstWeekContainsDate)&&void 0!==a?a:null==n||null===(i=n.locale)||void 0===i||null===(s=i.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==o?o:p.firstWeekContainsDate)&&void 0!==t?t:null===(A=p.locale)||void 0===A||null===(d=A.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==e?e:1);if(!(m>=1&&m<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var u=new Date(0);u.setUTCFullYear(l+1,0,m),u.setUTCHours(0,0,0,0);var C=Y(u,n),h=new Date(0);h.setUTCFullYear(l,0,m),h.setUTCHours(0,0,0,0);var b=Y(h,n);return c.getTime()>=C.getTime()?l+1:c.getTime()>=b.getTime()?l:l-1}function D(r,n){var e,t,o,a,i,s,A,d;f(1,arguments);var c=L(),l=B(null!==(e=null!==(t=null!==(o=null!==(a=null==n?void 0:n.firstWeekContainsDate)&&void 0!==a?a:null==n||null===(i=n.locale)||void 0===i||null===(s=i.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==o?o:c.firstWeekContainsDate)&&void 0!==t?t:null===(A=c.locale)||void 0===A||null===(d=A.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==e?e:1),p=S(r,n),m=new Date(0);m.setUTCFullYear(p,0,l),m.setUTCHours(0,0,0,0);var u=Y(m,n);return u}var M=6048e5;function P(r,n){for(var e=r<0?"-":"",t=Math.abs(r).toString();t.length<n;)t="0"+t;return e+t}const W=function(r,n){var e=r.getUTCFullYear(),t=e>0?e:1-e;return P("yy"===n?t%100:t,n.length)},q=function(r,n){var e=r.getUTCMonth();return"M"===n?String(e+1):P(e+1,2)},z=function(r,n){return P(r.getUTCDate(),n.length)},Z=function(r,n){return P(r.getUTCHours()%12||12,n.length)},U=function(r,n){return P(r.getUTCHours(),n.length)},F=function(r,n){return P(r.getUTCMinutes(),n.length)},H=function(r,n){return P(r.getUTCSeconds(),n.length)},O=function(r,n){var e=n.length,t=r.getUTCMilliseconds();return P(Math.floor(t*Math.pow(10,e-3)),n.length)};var N={G:function(r,n,e){var t=r.getUTCFullYear()>0?1:0;switch(n){case"G":case"GG":case"GGG":return e.era(t,{width:"abbreviated"});case"GGGGG":return e.era(t,{width:"narrow"});default:return e.era(t,{width:"wide"})}},y:function(r,n,e){if("yo"===n){var t=r.getUTCFullYear(),o=t>0?t:1-t;return e.ordinalNumber(o,{unit:"year"})}return W(r,n)},Y:function(r,n,e,t){var o=S(r,t),a=o>0?o:1-o;return"YY"===n?P(a%100,2):"Yo"===n?e.ordinalNumber(a,{unit:"year"}):P(a,n.length)},R:function(r,n){return P(k(r),n.length)},u:function(r,n){return P(r.getUTCFullYear(),n.length)},Q:function(r,n,e){var t=Math.ceil((r.getUTCMonth()+1)/3);switch(n){case"Q":return String(t);case"QQ":return P(t,2);case"Qo":return e.ordinalNumber(t,{unit:"quarter"});case"QQQ":return e.quarter(t,{width:"abbreviated",context:"formatting"});case"QQQQQ":return e.quarter(t,{width:"narrow",context:"formatting"});default:return e.quarter(t,{width:"wide",context:"formatting"})}},q:function(r,n,e){var t=Math.ceil((r.getUTCMonth()+1)/3);switch(n){case"q":return String(t);case"qq":return P(t,2);case"qo":return e.ordinalNumber(t,{unit:"quarter"});case"qqq":return e.quarter(t,{width:"abbreviated",context:"standalone"});case"qqqqq":return e.quarter(t,{width:"narrow",context:"standalone"});default:return e.quarter(t,{width:"wide",context:"standalone"})}},M:function(r,n,e){var t=r.getUTCMonth();switch(n){case"M":case"MM":return q(r,n);case"Mo":return e.ordinalNumber(t+1,{unit:"month"});case"MMM":return e.month(t,{width:"abbreviated",context:"formatting"});case"MMMMM":return e.month(t,{width:"narrow",context:"formatting"});default:return e.month(t,{width:"wide",context:"formatting"})}},L:function(r,n,e){var t=r.getUTCMonth();switch(n){case"L":return String(t+1);case"LL":return P(t+1,2);case"Lo":return e.ordinalNumber(t+1,{unit:"month"});case"LLL":return e.month(t,{width:"abbreviated",context:"standalone"});case"LLLLL":return e.month(t,{width:"narrow",context:"standalone"});default:return e.month(t,{width:"wide",context:"standalone"})}},w:function(r,n,e,t){var o=function(r,n){f(1,arguments);var e=g(r),t=Y(e,n).getTime()-D(e,n).getTime();return Math.round(t/M)+1}(r,t);return"wo"===n?e.ordinalNumber(o,{unit:"week"}):P(o,n.length)},I:function(r,n,e){var t=function(r){f(1,arguments);var n=g(r),e=y(n).getTime()-j(n).getTime();return Math.round(e/T)+1}(r);return"Io"===n?e.ordinalNumber(t,{unit:"week"}):P(t,n.length)},d:function(r,n,e){return"do"===n?e.ordinalNumber(r.getUTCDate(),{unit:"date"}):z(r,n)},D:function(r,n,e){var t=function(r){f(1,arguments);var n=g(r),e=n.getTime();n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0);var t=n.getTime(),o=e-t;return Math.floor(o/w)+1}(r);return"Do"===n?e.ordinalNumber(t,{unit:"dayOfYear"}):P(t,n.length)},E:function(r,n,e){var t=r.getUTCDay();switch(n){case"E":case"EE":case"EEE":return e.day(t,{width:"abbreviated",context:"formatting"});case"EEEEE":return e.day(t,{width:"narrow",context:"formatting"});case"EEEEEE":return e.day(t,{width:"short",context:"formatting"});default:return e.day(t,{width:"wide",context:"formatting"})}},e:function(r,n,e,t){var o=r.getUTCDay(),a=(o-t.weekStartsOn+8)%7||7;switch(n){case"e":return String(a);case"ee":return P(a,2);case"eo":return e.ordinalNumber(a,{unit:"day"});case"eee":return e.day(o,{width:"abbreviated",context:"formatting"});case"eeeee":return e.day(o,{width:"narrow",context:"formatting"});case"eeeeee":return e.day(o,{width:"short",context:"formatting"});default:return e.day(o,{width:"wide",context:"formatting"})}},c:function(r,n,e,t){var o=r.getUTCDay(),a=(o-t.weekStartsOn+8)%7||7;switch(n){case"c":return String(a);case"cc":return P(a,n.length);case"co":return e.ordinalNumber(a,{unit:"day"});case"ccc":return e.day(o,{width:"abbreviated",context:"standalone"});case"ccccc":return e.day(o,{width:"narrow",context:"standalone"});case"cccccc":return e.day(o,{width:"short",context:"standalone"});default:return e.day(o,{width:"wide",context:"standalone"})}},i:function(r,n,e){var t=r.getUTCDay(),o=0===t?7:t;switch(n){case"i":return String(o);case"ii":return P(o,n.length);case"io":return e.ordinalNumber(o,{unit:"day"});case"iii":return e.day(t,{width:"abbreviated",context:"formatting"});case"iiiii":return e.day(t,{width:"narrow",context:"formatting"});case"iiiiii":return e.day(t,{width:"short",context:"formatting"});default:return e.day(t,{width:"wide",context:"formatting"})}},a:function(r,n,e){var t=r.getUTCHours()/12>=1?"pm":"am";switch(n){case"a":case"aa":return e.dayPeriod(t,{width:"abbreviated",context:"formatting"});case"aaa":return e.dayPeriod(t,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return e.dayPeriod(t,{width:"narrow",context:"formatting"});default:return e.dayPeriod(t,{width:"wide",context:"formatting"})}},b:function(r,n,e){var t,o=r.getUTCHours();switch(t=12===o?"noon":0===o?"midnight":o/12>=1?"pm":"am",n){case"b":case"bb":return e.dayPeriod(t,{width:"abbreviated",context:"formatting"});case"bbb":return e.dayPeriod(t,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return e.dayPeriod(t,{width:"narrow",context:"formatting"});default:return e.dayPeriod(t,{width:"wide",context:"formatting"})}},B:function(r,n,e){var t,o=r.getUTCHours();switch(t=o>=17?"evening":o>=12?"afternoon":o>=4?"morning":"night",n){case"B":case"BB":case"BBB":return e.dayPeriod(t,{width:"abbreviated",context:"formatting"});case"BBBBB":return e.dayPeriod(t,{width:"narrow",context:"formatting"});default:return e.dayPeriod(t,{width:"wide",context:"formatting"})}},h:function(r,n,e){if("ho"===n){var t=r.getUTCHours()%12;return 0===t&&(t=12),e.ordinalNumber(t,{unit:"hour"})}return Z(r,n)},H:function(r,n,e){return"Ho"===n?e.ordinalNumber(r.getUTCHours(),{unit:"hour"}):U(r,n)},K:function(r,n,e){var t=r.getUTCHours()%12;return"Ko"===n?e.ordinalNumber(t,{unit:"hour"}):P(t,n.length)},k:function(r,n,e){var t=r.getUTCHours();return 0===t&&(t=24),"ko"===n?e.ordinalNumber(t,{unit:"hour"}):P(t,n.length)},m:function(r,n,e){return"mo"===n?e.ordinalNumber(r.getUTCMinutes(),{unit:"minute"}):F(r,n)},s:function(r,n,e){return"so"===n?e.ordinalNumber(r.getUTCSeconds(),{unit:"second"}):H(r,n)},S:function(r,n){return O(r,n)},X:function(r,n,e,t){var o=(t._originalDate||r).getTimezoneOffset();if(0===o)return"Z";switch(n){case"X":return R(o);case"XXXX":case"XX":return X(o);default:return X(o,":")}},x:function(r,n,e,t){var o=(t._originalDate||r).getTimezoneOffset();switch(n){case"x":return R(o);case"xxxx":case"xx":return X(o);default:return X(o,":")}},O:function(r,n,e,t){var o=(t._originalDate||r).getTimezoneOffset();switch(n){case"O":case"OO":case"OOO":return"GMT"+G(o,":");default:return"GMT"+X(o,":")}},z:function(r,n,e,t){var o=(t._originalDate||r).getTimezoneOffset();switch(n){case"z":case"zz":case"zzz":return"GMT"+G(o,":");default:return"GMT"+X(o,":")}},t:function(r,n,e,t){var o=t._originalDate||r;return P(Math.floor(o.getTime()/1e3),n.length)},T:function(r,n,e,t){return P((t._originalDate||r).getTime(),n.length)}};function G(r,n){var e=r>0?"-":"+",t=Math.abs(r),o=Math.floor(t/60),a=t%60;if(0===a)return e+String(o);var i=n||"";return e+String(o)+i+P(a,2)}function R(r,n){return r%60==0?(r>0?"-":"+")+P(Math.abs(r)/60,2):X(r,n)}function X(r,n){var e=n||"",t=r>0?"-":"+",o=Math.abs(r);return t+P(Math.floor(o/60),2)+e+P(o%60,2)}const Q=N;var V=function(r,n){switch(r){case"P":return n.date({width:"short"});case"PP":return n.date({width:"medium"});case"PPP":return n.date({width:"long"});default:return n.date({width:"full"})}},J=function(r,n){switch(r){case"p":return n.time({width:"short"});case"pp":return n.time({width:"medium"});case"ppp":return n.time({width:"long"});default:return n.time({width:"full"})}};const $={p:J,P:function(r,n){var e,t=r.match(/(P+)(p+)?/)||[],o=t[1],a=t[2];if(!a)return V(r,n);switch(o){case"P":e=n.dateTime({width:"short"});break;case"PP":e=n.dateTime({width:"medium"});break;case"PPP":e=n.dateTime({width:"long"});break;default:e=n.dateTime({width:"full"})}return e.replace("{{date}}",V(o,n)).replace("{{time}}",J(a,n))}};function _(r){var n=new Date(Date.UTC(r.getFullYear(),r.getMonth(),r.getDate(),r.getHours(),r.getMinutes(),r.getSeconds(),r.getMilliseconds()));return n.setUTCFullYear(r.getFullYear()),r.getTime()-n.getTime()}var K=["D","DD"],rr=["YY","YYYY"];function nr(r){return-1!==K.indexOf(r)}function er(r){return-1!==rr.indexOf(r)}function tr(r,n,e){if("YYYY"===r)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(n,"`) for formatting years to the input `").concat(e,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("YY"===r)throw new RangeError("Use `yy` instead of `YY` (in `".concat(n,"`) for formatting years to the input `").concat(e,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("D"===r)throw new RangeError("Use `d` instead of `D` (in `".concat(n,"`) for formatting days of the month to the input `").concat(e,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("DD"===r)throw new RangeError("Use `dd` instead of `DD` (in `".concat(n,"`) for formatting days of the month to the input `").concat(e,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"))}var or={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function ar(r){return function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.width?String(n.width):r.defaultWidth,t=r.formats[e]||r.formats[r.defaultWidth];return t}}const ir={date:ar({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:ar({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:ar({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var sr={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function Ar(r){return function(n,e){var t;if("formatting"===(null!=e&&e.context?String(e.context):"standalone")&&r.formattingValues){var o=r.defaultFormattingWidth||r.defaultWidth,a=null!=e&&e.width?String(e.width):o;t=r.formattingValues[a]||r.formattingValues[o]}else{var i=r.defaultWidth,s=null!=e&&e.width?String(e.width):r.defaultWidth;t=r.values[s]||r.values[i]}return t[r.argumentCallback?r.argumentCallback(n):n]}}const dr={ordinalNumber:function(r,n){var e=Number(r),t=e%100;if(t>20||t<10)switch(t%10){case 1:return e+"st";case 2:return e+"nd";case 3:return e+"rd"}return e+"th"},era:Ar({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:Ar({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(r){return r-1}}),month:Ar({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:Ar({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:Ar({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function cr(r){return function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=e.width,o=t&&r.matchPatterns[t]||r.matchPatterns[r.defaultMatchWidth],a=n.match(o);if(!a)return null;var i,s=a[0],A=t&&r.parsePatterns[t]||r.parsePatterns[r.defaultParseWidth],d=Array.isArray(A)?pr(A,(function(r){return r.test(s)})):lr(A,(function(r){return r.test(s)}));i=r.valueCallback?r.valueCallback(d):d,i=e.valueCallback?e.valueCallback(i):i;var c=n.slice(s.length);return{value:i,rest:c}}}function lr(r,n){for(var e in r)if(r.hasOwnProperty(e)&&n(r[e]))return e}function pr(r,n){for(var e=0;e<r.length;e++)if(n(r[e]))return e}var mr,ur={ordinalNumber:(mr={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(r){return parseInt(r,10)}},function(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e=r.match(mr.matchPattern);if(!e)return null;var t=e[0],o=r.match(mr.parsePattern);if(!o)return null;var a=mr.valueCallback?mr.valueCallback(o[0]):o[0];a=n.valueCallback?n.valueCallback(a):a;var i=r.slice(t.length);return{value:a,rest:i}}),era:cr({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:cr({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(r){return r+1}}),month:cr({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:cr({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:cr({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const fr={code:"en-US",formatDistance:function(r,n,e){var t,o=or[r];return t="string"==typeof o?o:1===n?o.one:o.other.replace("{{count}}",n.toString()),null!=e&&e.addSuffix?e.comparison&&e.comparison>0?"in "+t:t+" ago":t},formatLong:ir,formatRelative:function(r,n,e,t){return sr[r]},localize:dr,match:ur,options:{weekStartsOn:0,firstWeekContainsDate:1}};var Cr=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,hr=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,br=/^'([^]*?)'?$/,gr=/''/g,Er=/[a-zA-Z]/;function Br(r){var n=r.match(br);return n?n[1].replace(gr,"'"):r}function vr(r,n){var e,t,o,a,i,s,A,d;f(1,arguments);var c=L(),l=B(null!==(e=null!==(t=null!==(o=null!==(a=null==n?void 0:n.weekStartsOn)&&void 0!==a?a:null==n||null===(i=n.locale)||void 0===i||null===(s=i.options)||void 0===s?void 0:s.weekStartsOn)&&void 0!==o?o:c.weekStartsOn)&&void 0!==t?t:null===(A=c.locale)||void 0===A||null===(d=A.options)||void 0===d?void 0:d.weekStartsOn)&&void 0!==e?e:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var p=g(r),m=p.getDay(),u=(m<l?7:0)+m-l;return p.setDate(p.getDate()-u),p.setHours(0,0,0,0),p}function xr(r,n,e){f(2,arguments);var t=vr(r,e),o=vr(n,e);return t.getTime()===o.getTime()}function wr(r,n){return f(1,arguments),xr(r,Date.now(),n)}const yr=r=>{const n=Ir();return r.filter((r=>r.getDueDate()===n))},kr=r=>r.filter((r=>{const n=`${r.getDueDate()}T00:00:00`;return wr(new Date(n),{weekStartsOn:1})})),jr=(r,n)=>{for(const e in n)r[e]=n[e]},Tr=r=>{return`${r}-${n=1,e=1e6,n=Math.ceil(n),e=Math.floor(e),Math.floor(Math.random()*(e-n+1)+n)}`;var n,e},Ir=()=>{const r=new Date,n=String(r.getFullYear()),e=String(r.getMonth()+1),t=String(r.getDate());return`${n}-${e.padStart(2,"0")}-${t.padStart(2,"0")}`},Lr=r=>{const n=r.map((r=>({id:r.getId(),checked:r.getChecked(),title:r.getTitle(),notes:r.getNotes(),dueDate:r.getDueDate(),priority:r.getPriority()})));return n},Yr=r=>{localStorage.todosData=JSON.stringify(Lr(r.getTodosArr())),localStorage.projectsData=JSON.stringify((r=>{const n=r.map((r=>({id:r.getId(),todosData:Lr(r.getTodosArr()),title:r.getTitle()})));return n})(r.getProjectsArr()))},Sr=(r,n)=>r.getProjectsArr().filter((r=>r.getId()===n))[0],Dr=(r,n,e,t,o,a)=>{const i=a||Tr(n);return{getChecked:()=>r,getTitle:()=>n,getNotes:()=>e,getDueDate:()=>t,getPriority:()=>o,getId:()=>i,editChecked:()=>{r=!r},editTitle:r=>{n=r},editNotes:r=>{e=r},editDueDate:r=>{t=r},editPriority:r=>{o=r}}},Mr=r=>{const[n,e,t]=r.split("-"),o=Number(e)-1;return function(r,n,e){var t,o,a,i,s,A,d,c,l,p,m,u,C,h,b,v,w,y;f(2,arguments);var k=String(n),j=L(),T=null!==(t=null!==(o=null==e?void 0:e.locale)&&void 0!==o?o:j.locale)&&void 0!==t?t:fr,I=B(null!==(a=null!==(i=null!==(s=null!==(A=null==e?void 0:e.firstWeekContainsDate)&&void 0!==A?A:null==e||null===(d=e.locale)||void 0===d||null===(c=d.options)||void 0===c?void 0:c.firstWeekContainsDate)&&void 0!==s?s:j.firstWeekContainsDate)&&void 0!==i?i:null===(l=j.locale)||void 0===l||null===(p=l.options)||void 0===p?void 0:p.firstWeekContainsDate)&&void 0!==a?a:1);if(!(I>=1&&I<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var Y=B(null!==(m=null!==(u=null!==(C=null!==(h=null==e?void 0:e.weekStartsOn)&&void 0!==h?h:null==e||null===(b=e.locale)||void 0===b||null===(v=b.options)||void 0===v?void 0:v.weekStartsOn)&&void 0!==C?C:j.weekStartsOn)&&void 0!==u?u:null===(w=j.locale)||void 0===w||null===(y=w.options)||void 0===y?void 0:y.weekStartsOn)&&void 0!==m?m:0);if(!(Y>=0&&Y<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!T.localize)throw new RangeError("locale must contain localize property");if(!T.formatLong)throw new RangeError("locale must contain formatLong property");var S=g(r);if(!E(S))throw new RangeError("Invalid time value");var D=_(S),M=x(S,D),P={firstWeekContainsDate:I,weekStartsOn:Y,locale:T,_originalDate:S};return k.match(hr).map((function(r){var n=r[0];return"p"===n||"P"===n?(0,$[n])(r,T.formatLong):r})).join("").match(Cr).map((function(t){if("''"===t)return"'";var o=t[0];if("'"===o)return Br(t);var a=Q[o];if(a)return null!=e&&e.useAdditionalWeekYearTokens||!er(t)||tr(t,n,String(r)),null!=e&&e.useAdditionalDayOfYearTokens||!nr(t)||tr(t,n,String(r)),a(M,t,T.localize,P);if(o.match(Er))throw new RangeError("Format string contains an unescaped latin alphabet character `"+o+"`");return t})).join("")}(new Date(n,o,t),"do MMM")},Pr=(r,n,e)=>{const t=n||Tr(r);let o=e||[];return{getTitle:()=>r,getTodosArr:()=>o,getId:()=>t,editTitle:n=>{r=n},pushToTodosArr:r=>{o.push(r)},removeFromTodosArr:r=>{o=o.filter((n=>n.getId()!==r))}}},Wr=r=>r.map((r=>{const{checked:n,title:e,notes:t,dueDate:o,priority:a,id:i}=r;return Dr(n,e,t,o,a,i)}));var qr=e(402),zr={};zr.styleTagTransform=p(),zr.setAttributes=A(),zr.insert=i().bind(null,"head"),zr.domAPI=o(),zr.insertStyleElement=c(),n()(qr.Z,zr),qr.Z&&qr.Z.locals&&qr.Z.locals;var Zr=e(851),Ur={};Ur.styleTagTransform=p(),Ur.setAttributes=A(),Ur.insert=i().bind(null,"head"),Ur.domAPI=o(),Ur.insertStyleElement=c(),n()(Zr.Z,Ur),Zr.Z&&Zr.Z.locals&&Zr.Z.locals;var Fr=e(193),Hr={};Hr.styleTagTransform=p(),Hr.setAttributes=A(),Hr.insert=i().bind(null,"head"),Hr.domAPI=o(),Hr.insertStyleElement=c(),n()(Fr.Z,Hr),Fr.Z&&Fr.Z.locals&&Fr.Z.locals;const Or=()=>{const r=document.querySelector(".form-title-input"),n=document.querySelector(".form-notes-input"),e=document.querySelector(".form-due-date-input"),t=document.querySelector("input[name='priority']:checked");return{titleVal:r.value,notesVal:n?n.value:null,dueDateVal:e?e.value:null,priorityVal:t?t.value:null}},Nr=()=>{const{titleVal:r,notesVal:n,dueDateVal:e,priorityVal:t}=Or();return Dr(!1,r,n,e,t,null)},Gr=r=>{const n=Ir(),e=`${r.getDueDate()}T00:00:00`;return{isDueToday:r.getDueDate()===n,isDueThisWeek:wr(new Date(e),{weekStartsOn:1})}},Rr=()=>document.querySelector(".app-container"),Xr=()=>document.querySelector(".content-box-container"),Qr=r=>{document.querySelector("#root").append(r)};var Vr=e(417),Jr={};Jr.styleTagTransform=p(),Jr.setAttributes=A(),Jr.insert=i().bind(null,"head"),Jr.domAPI=o(),Jr.insertStyleElement=c(),n()(Vr.Z,Jr),Vr.Z&&Vr.Z.locals&&Vr.Z.locals;const $r=r=>r.sort(((r,n)=>function(r,n){f(2,arguments);var e=g(r),t=g(n),o=e.getTime()-t.getTime();return o<0?-1:o>0?1:o}(new Date(r.getDueDate()),new Date(n.getDueDate()))));var _r=e(729),Kr={};Kr.styleTagTransform=p(),Kr.setAttributes=A(),Kr.insert=i().bind(null,"head"),Kr.domAPI=o(),Kr.insertStyleElement=c(),n()(_r.Z,Kr),_r.Z&&_r.Z.locals&&_r.Z.locals;var rn=e(497),nn={};nn.styleTagTransform=p(),nn.setAttributes=A(),nn.insert=i().bind(null,"head"),nn.domAPI=o(),nn.insertStyleElement=c(),n()(rn.Z,nn),rn.Z&&rn.Z.locals&&rn.Z.locals;var en=e(52),tn={};tn.styleTagTransform=p(),tn.setAttributes=A(),tn.insert=i().bind(null,"head"),tn.domAPI=o(),tn.insertStyleElement=c(),n()(en.Z,tn),en.Z&&en.Z.locals&&en.Z.locals;const on=r=>!r.length,an=async(r,n,e,t)=>{r.removeFromTodosArr(n.getId()),r.getProjectsArr().forEach((r=>{r.removeFromTodosArr(n.getId())})),ln(e);const{projectId:o}=t.dataset,a=document.querySelector(".navbar-container").dataset.mode;if(await cn(t),"todos"===a){const n=r.getTodosArr();on(n)&&An(r)}if("day"===a){const n=r.getTodosArr(),e=yr(n);on(e)&&An(r)}if("week"===a){const n=r.getTodosArr(),e=kr(n);on(e)&&An(r)}if("projects"===a){const n=Sr(r,o).getTodosArr();on(n)&&An(r)}},sn=async(r,n,e,t)=>{r.removeFromProjectsArr(n.getId()),n.getTodosArr().forEach((n=>{r.removeFromTodosArr(n.getId())})),ln(e),await cn(t);const o=r.getProjectsArr();on(o)&&dn(r)},An=r=>{Xr().append(Tn({app:r,mode:"todos",arr:[],projectId:null}))},dn=r=>{Xr().append(Tn({app:r,mode:"projects",arr:[],projectId:null}))},cn=r=>(r.classList.add("animate-delete"),new Promise((n=>{setTimeout((()=>{r.remove(),n()}),1e3)}))),ln=r=>{r.remove(),Rr().classList.remove("disabled")},pn=r=>{ee(r),te(r),oe(r),ae(r)},mn=(r,n,e,t)=>{const o=document.createElement("div"),a=document.createElement("p"),i=document.createElement("div"),s=document.createElement("button"),A=document.createElement("button");return o.classList.add("del-confirmation-container","flex-column","center","animate-appear"),a.classList.add("del-confirmation-msg"),a.innerText="Confirm Delete?",i.classList.add("del-confirmation-btns-container","flex","center"),s.classList.add("del-confirmation-no-btn"),s.innerText="NO",s.addEventListener("pointerup",(()=>{ln(o)})),A.classList.add("del-confirmation-yes-btn"),A.innerText="YES",A.addEventListener("pointerup",(()=>{(({app:r,container:n,objUI:e,obj:t,type:o})=>{"todo"===o?an(r,t,n,e):"project"===o&&sn(r,t,n,e),Yr(r),pn(r)})({app:r,container:o,objUI:t,obj:e,type:n})})),i.append(s,A),o.append(a,i),o};var un=e(117),fn={};fn.styleTagTransform=p(),fn.setAttributes=A(),fn.insert=i().bind(null,"head"),fn.domAPI=o(),fn.insertStyleElement=c(),n()(un.Z,fn),un.Z&&un.Z.locals&&un.Z.locals;const Cn=(r,n)=>{const e=document.createElement("div"),t=document.createElement("p"),o=document.createElement("div"),a=document.createElement("div"),i=document.createElement("button"),s=document.createElement("button");e.classList.add("project-selector-container","animate-appear"),t.classList.add("project-selector-title","flex","center"),t.innerText="Add To Project",o.classList.add("project-selector-projects-box","flex-column"),a.classList.add("project-selector-btns-container","flex","center"),i.classList.add("project-selector-cancel-btn"),i.innerText="CANCEL",i.addEventListener("pointerup",(()=>{e.remove(),Rr().classList.remove("disabled")})),s.classList.add("project-selector-ok-btn"),s.innerText="OK",s.addEventListener("pointerup",(()=>{((r,n,e)=>{const t=Array.from(document.querySelectorAll(".project-option.selected"));if(!t.length)return Rr().classList.remove("disabled"),void n.remove();const o=t.map((r=>r.dataset.id));o.forEach((n=>{r.getProjectsArr().forEach((r=>{n===r.getId()&&r.pushToTodosArr(e)}))})),Yr(r),Rr().classList.remove("disabled"),n.remove()})(r,e,n)}));const A=r.getProjectsArr().filter((r=>r.getTodosArr().every((r=>r.getId()!==n.getId())))),d=A.map((r=>(r=>{const n=document.createElement("div"),e=document.createElement("p"),t=document.createElement("div");return n.classList.add("project-option","flex","center"),n.dataset.id=r.getId(),n.addEventListener("pointerup",(()=>{n.classList.toggle("selected")})),e.classList.add("project-option-title"),e.innerText=r.getTitle(),t.classList.add("project-option-checkbox"),n.append(e,t),n})(r)));return d.length?o.append(...d):o.append("No Projects"),a.append(i,s),e.append(t,o,a),e},hn=e.p+"1f907a58b0cc1eaf0caf.svg",bn=e.p+"a220482e9ba79a8aa587.svg",gn=e.p+"ba8ee4721ed25900c034.svg",En=(r,n)=>{r.stopPropagation(),Qr((({getPriority:r,getDueDate:n,getTitle:e,getNotes:t})=>{const o=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div"),s=document.createElement("div"),A=document.createElement("p"),d=document.createElement("p"),c=document.createElement("p"),l=document.createElement("button");return o.classList.add("details-container","animate-appear"),a.classList.add("details-top-container","flex"),i.classList.add("details-bottom-container"),s.classList.add("details-priority","flex","center"),"low"===r()?s.classList.add("details-priority-l"):"medium"===r()?s.classList.add("details-priority-m"):s.classList.add("details-priority-h"),s.innerText=r()[0].toUpperCase()+r().slice(1),A.classList.add("details-due-date","flex","center"),A.innerText=`Due: ${n()}`,d.classList.add("details-title","flex"),d.innerText=e(),c.classList.add("details-notes","flex"),c.innerText=t()||"No Notes",l.classList.add("details-close-btn"),l.innerText="CLOSE",l.addEventListener("pointerup",(()=>{o.remove(),Rr().classList.remove("disabled")})),a.append(s,A),i.append(d,c,l),o.append(a,i),o})(n)),Rr().classList.add("disabled")},Bn=(r,n,e)=>{const t=document.createElement("div"),o=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div"),s=document.createElement("p"),A=document.createElement("sup"),d=document.createElement("p"),c=document.createElement("img"),l=document.createElement("img"),p=document.createElement("img"),{day:m,ordinalIndicator:u,month:f}={day:(C=Mr(r.getDueDate())).slice(0,-6),ordinalIndicator:C.slice(-6,-4),month:C.slice(-4)};var C;return t.classList.add("item-container","flex","animate-appear"),t.dataset.id=r.getId(),t.dataset.projectId=e,t.style.borderLeft=`5px solid var(--${r.getPriority()}-prio)`,t.addEventListener("pointerup",(n=>{En(n,r)})),o.classList.add("item-left-container","flex","center"),a.classList.add("item-right-container","flex","center"),i.classList.add("item-checkbox","flex","center"),r.getChecked()&&(i.classList.add("checked"),t.classList.add("no-pointer-events")),i.addEventListener("pointerup",(e=>{(({e:r,app:n,container:e,todo:t})=>{const o=r.target;r.stopPropagation(),o.classList.toggle("checked"),e.classList.toggle("no-pointer-events"),t.editChecked(),Yr(n)})({e,app:n,container:t,todo:r})})),s.classList.add("item-title"),s.innerText=r.getTitle(),A.innerText=u,d.classList.add("item-due-date"),d.append(m,A,f),c.classList.add("item-edit-icon"),c.title="Edit Todo",c.src=hn,c.addEventListener("pointerup",(e=>{(({e:r,app:n,container:e,todo:t})=>{r.stopPropagation();const o=document.querySelector(".navbar-container[data-mode]").dataset.mode,a="null"===e.dataset.projectId?null:e.dataset.projectId;Qr(Vn({objs:{app:n,project:null,todo:t},modes:{navbarMode:o,formMode:"edit-todo"},projectId:a})),Rr().classList.add("disabled")})({e,app:n,container:t,todo:r})})),l.classList.add("item-move-icon"),l.title="Move to Project",l.src=bn,l.addEventListener("pointerup",(e=>{(({e:r,app:n,todo:e})=>{r.stopPropagation(),Qr(Cn(n,e)),Rr().classList.add("disabled")})({e,app:n,todo:r})})),p.classList.add("item-trash-icon"),p.title="Delete Todo",p.src=gn,p.addEventListener("pointerup",(e=>{(({e:r,app:n,container:e,todo:t})=>{r.stopPropagation(),Qr(mn(n,"todo",t,e)),Rr().classList.add("disabled")})({e,app:n,container:t,todo:r})})),o.append(i,s),a.append(d,c,l,p),t.append(o,a),t};var vn=e(735),xn={};xn.styleTagTransform=p(),xn.setAttributes=A(),xn.insert=i().bind(null,"head"),xn.domAPI=o(),xn.insertStyleElement=c(),n()(vn.Z,xn),vn.Z&&vn.Z.locals&&vn.Z.locals;const wn=e.p+"5c04c572798e520c3444.svg",yn=e.p+"1f907a58b0cc1eaf0caf.svg",kn=e.p+"ba8ee4721ed25900c034.svg",jn=(r,n)=>{const e=document.createElement("div"),t=document.createElement("p"),o=document.createElement("img"),a=document.createElement("img"),i=document.createElement("img");return e.classList.add("project-container","flex","center","animate-appear"),e.dataset.id=r.getId(),e.addEventListener("pointerup",(t=>{(({e:r,app:n,container:e,project:t})=>{r.stopPropagation();const o=t.getTodosArr(),a=e.dataset.id;Xr().append(Tn({app:n,mode:"todos",arr:o,projectId:a}))})({e:t,app:n,container:e,project:r})})),t.classList.add("project-title"),t.innerText=r.getTitle(),o.classList.add("project-add-icon"),o.src=wn,o.addEventListener("pointerup",(e=>{(({e:r,app:n,project:e})=>{r.stopPropagation(),Qr(Vn({objs:{app:n,project:e,todo:null},modes:{navbarMode:null,formMode:"add-to-project"},projectId:null})),Rr().classList.add("disabled")})({e,app:n,project:r})})),a.classList.add("project-edit-icon"),a.src=yn,a.addEventListener("pointerup",(e=>{(({e:r,app:n,project:e})=>{r.stopPropagation();const t=document.querySelector(".navbar-container[data-mode]").dataset.mode;Qr(Vn({objs:{app:n,project:e,todo:null},modes:{navbarMode:t,formMode:"edit-project"},projectId:null})),Rr().classList.add("disabled")})({e,app:n,project:r})})),i.classList.add("project-trash-icon"),i.src=kn,i.addEventListener("pointerup",(t=>{(({e:r,app:n,container:e,project:t})=>{r.stopPropagation(),Qr(mn(n,"project",t,e)),Rr().classList.add("disabled")})({e:t,app:n,container:e,project:r})})),e.append(t,o,a,i),e},Tn=({app:r,mode:n,arr:e,projectId:t})=>{const o=document.createElement("div");return o.classList.add("holder-box-container","flex-column"),!!Xr()&&Xr().lastElementChild.remove(),((r,n)=>!r.length&&"projects"===n)(e,n)?(o.append("No Projects"),o):(r=>!r.length)(e)?(o.append("No Todos"),o):"todos"===n?(o.append(...(({app:r,arr:n,projectId:e})=>$r(n).map((n=>Bn(n,r,e))))({app:r,arr:e,projectId:t})),o):"projects"===n?(o.append(...(({app:r,arr:n})=>n.map((n=>jn(n,r))))({app:r,arr:e})),o):"day"===n?(o.append(...(({app:r,arr:n,projectId:e})=>n.map((n=>Bn(n,r,e))))({app:r,arr:e,projectId:t})),o):"week"===n?(o.append(...(({app:r,arr:n,projectId:e})=>$r(n).map((n=>Bn(n,r,e))))({app:r,arr:e,projectId:t})),o):o},In=({objs:r,modes:n,elems:e})=>{const{formHolder:t,container:o,todoBtn:a,projectBtn:i}=e;o.classList.remove("project-fields-height"),a.classList.add("border-btm-b"),i.classList.remove("border-btm-b"),o.lastElementChild.remove(),o.append(Yn({objs:r,modes:n,elems:{formHolder:t},projectId:null})),t.append(o)},Ln=({objs:r,modes:n,elems:e})=>{const{formHolder:t,container:o,todoBtn:a,projectBtn:i}=e;o.classList.add("project-fields-height"),a.classList.remove("border-btm-b"),i.classList.add("border-btm-b"),o.lastElementChild.remove(),o.append(Dn({objs:r,modes:n,elems:{formHolder:t}})),t.append(o)},Yn=({objs:r,modes:n,elems:e,projectId:t})=>{const{todo:o}=r,{formHolder:a}=e,i=document.createElement("div"),s=document.createElement("form"),A=document.createElement("textarea"),d=document.createElement("textarea"),c=document.createElement("div"),l=document.createElement("label"),p=document.createElement("input"),m=document.createElement("div"),u=document.createElement("p"),f=document.createElement("div"),C=document.createElement("input"),h=document.createElement("label"),b=document.createElement("input"),g=document.createElement("label"),E=document.createElement("input"),B=document.createElement("label");return i.classList.add("form-fields-container","flex-column"),s.classList.add("form-middle-container","flex-column"),s.id="form",s.addEventListener("submit",(o=>{o.preventDefault(),Sn({objs:r,modes:n,elems:e,projectId:t})})),A.classList.add("form-title-input"),A.placeholder="Enter Title",A.value=o?o.getTitle():"",A.setAttribute("maxlength","50"),A.required=!0,d.classList.add("form-notes-input"),d.placeholder="Enter Notes",d.value=o?o.getNotes():"",d.setAttribute("maxlength","300"),c.classList.add("form-due-date-container","flex-column","center"),l.classList.add("form-due-date-label"),l.innerText="Due Date",p.classList.add("form-due-date-input"),p.type="date",p.value=o?o.getDueDate():"22-11-11",p.required=!0,m.classList.add("form-priority-container","flex-column","center"),u.classList.add("form-priority-title"),u.innerText="Priority",f.classList.add("form-priority-options-container","flex"),jr(C,{type:"radio",id:"l-prio",value:"low",name:"priority",required:!0,checked:!(!o||"low"!==o.getPriority())}),C.classList.add("form-priority-radio","hidden"),h.setAttribute("for","l-prio"),h.innerText="Low",h.classList.add("form-priority-label","l-prio-label"),jr(b,{type:"radio",id:"m-prio",value:"medium",name:"priority",required:!0,checked:!(!o||"medium"!==o.getPriority())}),b.classList.add("form-priority-radio","hidden"),g.setAttribute("for","m-prio"),g.innerText="Medium",g.classList.add("form-priority-label","m-prio-label"),jr(E,{type:"radio",id:"h-prio",value:"high",name:"priority",required:!0,checked:!(!o||"high"!==o.getPriority())}),E.classList.add("form-priority-radio","hidden"),B.setAttribute("for","h-prio"),B.innerText="High",B.classList.add("form-priority-label","h-prio-label"),i.append(s,Pn(a)),s.append(A,d,c,m),c.append(l,p),m.append(u,f),f.append(C,h,b,g,E,B),i},Sn=({objs:r,modes:n,elems:e,projectId:t})=>{const{app:o,todo:a,project:i}=r,{navbarMode:s,formMode:A}=n,{formHolder:d}=e;"add"===A?Wn(o,s):"edit-todo"===A?zn(o,s,a,t):"add-to-project"===A&&Nn(o,i),Rr().classList.remove("disabled"),d.remove()},Dn=({objs:r,modes:n,elems:e})=>{const{project:t}=r,{formHolder:o}=e,a=document.createElement("div"),i=document.createElement("form"),s=document.createElement("textarea");return a.classList.add("form-fields-container","flex-column"),i.classList.add("form-middle-container","flex-column"),i.id="form",i.addEventListener("submit",(t=>{t.preventDefault(),Mn({objs:r,modes:n,elems:e})})),s.classList.add("form-title-input"),s.placeholder="Enter Title",s.innerText=t?t.getTitle():"",s.setAttribute("maxlength","50"),s.required=!0,a.append(i,Pn(o)),i.append(s),a},Mn=({objs:r,modes:n,elems:e})=>{const{app:t,project:o}=r,{navbarMode:a,formMode:i}=n,{formHolder:s}=e;"add"===i?Un(t,a):"edit-project"===i&&Hn(t,o),Rr().classList.remove("disabled"),s.remove()},Pn=r=>{const n=document.createElement("div"),e=document.createElement("button"),t=document.createElement("button");return n.classList.add("form-bottom-container","flex","center"),e.classList.add("form-cancel-btn"),e.innerText="CANCEL",e.addEventListener("pointerup",(()=>{r.remove(),Rr().classList.remove("disabled")})),t.classList.add("form-ok-btn"),t.innerText="OK",t.setAttribute("form","form"),n.append(e,t),n},Wn=(r,n)=>{const e=Nr(),{isDueToday:t,isDueThisWeek:o}=Gr(e);qn(r,e),"projects"!==n&&Rn({app:r,navbarMode:n,isDueToday:t,isDueThisWeek:o,projectId:null})},qn=(r,n)=>{r.pushToTodosArr(n),Yr(r),ee(r),oe(r),ae(r)},zn=(r,n,e,t)=>{const{titleVal:o,notesVal:a,dueDateVal:i,priorityVal:s}=Or();if(e.editTitle(o),e.editNotes(a),e.editDueDate(i),e.editPriority(s),Zn(r,e),t){const n=Sr(r,t);Xn({app:r,project:n})}else{const{isDueToday:t,isDueThisWeek:o}=Gr(e);Rn({app:r,navbarMode:n,isDueToday:t,isDueThisWeek:o,projectId:null})}},Zn=(r,n)=>{r.updateTodosArr(n),Yr(r),oe(r),ae(r)},Un=(r,n)=>{const e=(()=>{const{titleVal:r}=Or();return Pr(r,null,null)})();Fn(r,e),"projects"===n&&Qn(r)},Fn=(r,n)=>{r.pushToProjectsArr(n),Yr(r),te(r)},Hn=(r,n)=>{const{titleVal:e}=Or();n.editTitle(e),On(r,n),Qn(r)},On=(r,n)=>{r.updateProjectsArr(n),Yr(r)},Nn=(r,n)=>{const e=Nr();Gn(r,n,e)},Gn=(r,n,e)=>{n.pushToTodosArr(e),r.pushToTodosArr(e),r.updateProjectsArr(n),Yr(r),ee(r),oe(r),ae(r)},Rn=({app:r,navbarMode:n,isDueToday:e,isDueThisWeek:t,projectId:o})=>{const a=r.getTodosArr();(({app:r,navbarMode:n,todosArr:e,isDueToday:t,isDueThisWeek:o,projectId:a})=>{let i;"todos"===n?i=Tn({app:r,mode:"todos",arr:e,projectId:a}):"day"===n&&t?i=Tn({app:r,mode:"day",arr:e,projectId:a}):"week"===n&&o&&(i=Tn({app:r,mode:"week",arr:e,projectId:a})),Xr().append(i)})({app:r,navbarMode:n,todosArr:a,isDueToday:e,isDueThisWeek:t,projectId:o})},Xn=({app:r,project:n})=>{(({app:r,todosArr:n,projectId:e})=>{Xr().append(Tn({app:r,mode:"todos",arr:n,projectId:e}))})({app:r,todosArr:n.getTodosArr(),projectId:n.getId()})},Qn=r=>{const n=r.getProjectsArr();(({app:r,projectsArr:n})=>{Xr().append(Tn({app:r,mode:"projects",arr:n,projectId:null}))})({app:r,projectsArr:n})},Vn=({objs:r,modes:n,projectId:e})=>{const{app:t,todo:o,project:a}=r,{navbarMode:i,formMode:s}=n,A=document.createElement("div"),d=document.createElement("div"),c=(()=>{const r=document.createElement("div");return r.classList.add("form-top-container","flex","center"),r})(),l=document.createElement("button"),p=document.createElement("button");return A.classList.add("form-holder","flex","center","animate-appear"),d.classList.add("form-container"),l.classList.add("form-todo-btn"),l.innerText="edit-todo"===s?"Edit Todo":"New Todo",p.classList.add("form-project-btn"),p.innerText="edit-project"===s?"Edit Project":"New Project","edit-todo"===s?((({objs:r,modes:n,elems:e,projectId:t})=>{const{formHolder:o,container:a,topContainer:i,todoBtn:s}=e;s.classList.add("border-btm-w","no-pointer-events"),i.append(s),a.append(i,Yn({objs:r,modes:n,elems:{formHolder:o},projectId:t})),o.append(a)})({objs:{app:t,todo:o,project:null},modes:{navbarMode:i,formMode:s},elems:{formHolder:A,container:d,topContainer:c,todoBtn:l},projectId:e}),A):"edit-project"===s?((({objs:r,modes:n,elems:e})=>{const{formHolder:t,container:o,topContainer:a,projectBtn:i}=e;o.classList.add("project-fields-height"),i.classList.add("border-btm-w","no-pointer-events"),a.append(i),o.append(a,Dn({objs:r,modes:n,elems:{formHolder:t}})),t.append(o)})({objs:{app:t,project:a},modes:{navbarMode:i,formMode:s},elems:{formHolder:A,container:d,topContainer:c,projectBtn:p}}),A):"add-to-project"===s?((({objs:r,modes:n,elems:e})=>{const{formHolder:t,container:o,topContainer:a,todoBtn:i}=e;i.classList.add("border-btm-w","no-pointer-events"),a.append(i),o.append(a,Yn({objs:r,modes:n,elems:{formHolder:t},projectId:null})),t.append(o)})({objs:{app:t,project:a,todo:null},modes:{navbarMode:i,formMode:s},elems:{formHolder:A,container:d,topContainer:c,todoBtn:l}}),A):((({objs:r,modes:n,elems:e})=>{const{formHolder:t,container:o,topContainer:a,todoBtn:i,projectBtn:s}=e;i.classList.add("border-btm-b"),a.append(i,s),o.append(a,Yn({objs:r,modes:n,elems:{formHolder:t},projectId:null})),t.append(o),i.addEventListener("pointerup",(()=>{In({objs:r,modes:n,elems:e})})),s.addEventListener("pointerup",(()=>{Ln({objs:r,modes:n,elems:e})}))})({objs:{app:t,todo:null,project:null},modes:{navbarMode:i,formMode:s},elems:{formHolder:A,container:d,topContainer:c,todoBtn:l,projectBtn:p}}),A)},Jn=e.p+"fca7267107ab84a927a4.png",$n=e.p+"e93f2a923fc7de099a60.png",_n=e.p+"02b75d2441ca70aed6d3.png",Kn=e.p+"7511833571b88e0a38a2.png",re=r=>{document.querySelectorAll(".navbar-btn-grp-1").forEach((r=>{r.classList.remove("navbar-btn-selected")})),document.querySelectorAll(".navbar-btn-icon").forEach((r=>{r.classList.remove("navbar-btn-selected")})),r.target.classList.contains("navbar-btn-icon")&&r.target.parentElement.classList.add("navbar-btn-selected"),r.target.classList.add("navbar-btn-selected")},ne=(r,n)=>{window.innerWidth<650?((r=>{const n=[Jn,$n,_n,Kn];r.forEach(((r,e)=>{r.innerText="";const t=document.createElement("img");t.classList.add("navbar-btn-icon"),t.src=n[e],r.append(t)}))})(r),r.forEach((r=>r.classList.add("animate-btn-appear"))),n.classList.add("animate-navbar-move-in")):((r=>{const[n,e,t,o]=r;n.innerText="Todos",e.innerText="Projects",t.innerText="Day",o.innerText="Week"})(r),r.forEach((r=>r.classList.remove("animate-btn-appear"))),n.classList.remove("animate-navbar-move-in"))},ee=r=>{document.querySelector(".navbar-todos-btn").dataset.count=r.getTodosArr().length},te=r=>{document.querySelector(".navbar-projects-btn").dataset.count=r.getProjectsArr().length},oe=r=>{document.querySelector(".navbar-day-btn").dataset.count=yr(r.getTodosArr()).length},ae=r=>{document.querySelector(".navbar-week-btn").dataset.count=kr(r.getTodosArr()).length},ie=r=>{const n=document.createElement("div"),e=document.createElement("span"),t=document.createElement("h1");return n.classList.add("content-box-container"),e.classList.add("material-symbols-outlined"),e.append("checklist"),t.classList.add("content-box-title","flex"),t.append(e,"To-Do"),n.append(t,(r=>{const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("div"),o=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div");return n.classList.add("navbar-container","flex"),n.dataset.mode="todos",e.classList.add("navbar-btn","navbar-btn-grp-1","navbar-todos-btn","flex","navbar-btn-selected"),e.dataset.count=r.getTodosArr().length,e.addEventListener("pointerup",(e=>{(({e:r,app:n,container:e})=>{re(r),e.dataset.mode="todos";const t=n.getTodosArr();Xr().append(Tn({app:n,mode:"todos",arr:t,projectId:null}))})({e,app:r,container:n})})),t.classList.add("navbar-btn","navbar-btn-grp-1","navbar-projects-btn","flex"),t.dataset.count=r.getProjectsArr().length,t.addEventListener("pointerup",(e=>{(({e:r,app:n,container:e})=>{re(r),e.dataset.mode="projects";const t=n.getProjectsArr();Xr().append(Tn({app:n,mode:"projects",arr:t,projectId:null}))})({e,app:r,container:n})})),o.classList.add("navbar-btn","navbar-btn-grp-1","navbar-day-btn","flex"),o.dataset.count=yr(r.getTodosArr()).length,o.addEventListener("pointerup",(e=>{(({e:r,app:n,container:e})=>{re(r),e.dataset.mode="day";const t=n.getTodosArr(),o=yr(t);Xr().append(Tn({app:n,mode:"day",arr:o,projectId:null}))})({e,app:r,container:n})})),a.classList.add("navbar-btn","navbar-btn-grp-1","navbar-week-btn","flex"),a.dataset.count=kr(r.getTodosArr()).length,a.addEventListener("pointerup",(e=>{(({e:r,app:n,container:e})=>{re(r),e.dataset.mode="week";const t=n.getTodosArr(),o=kr(t);Xr().append(Tn({app:n,mode:"week",arr:o,projectId:null}))})({e,app:r,container:n})})),i.classList.add("navbar-btn","navbar-btn-grp-2","navbar-plus-btn","flex"),i.title="Add New",i.innerText="+",i.addEventListener("pointerup",(()=>{((r,n)=>{Qr(Vn({objs:{app:r,todo:null,project:null},modes:{navbarMode:n,formMode:"add"},projectId:null})),Rr().classList.add("disabled")})(r,n.dataset.mode)})),((r,n)=>{ne(n,r),window.onresize=()=>ne(n,r)})(n,[e,t,o,a]),n.append(e,t,o,a,i),n})(r),Tn({app:r,mode:"todos",arr:r.getTodosArr(),projectId:null})),n};var se=e(424),Ae={};Ae.styleTagTransform=p(),Ae.setAttributes=A(),Ae.insert=i().bind(null,"head"),Ae.domAPI=o(),Ae.insertStyleElement=c(),n()(se.Z,Ae),se.Z&&se.Z.locals&&se.Z.locals,document.querySelector("#root").append((()=>{const r=document.createElement("div"),n=(()=>{let r=[],n=[];return{getTodosArr:()=>r,getProjectsArr:()=>n,initializeTodosArr:n=>{r=n},initializeProjectsArr:r=>{n=r},pushToTodosArr:n=>{r.push(n)},removeFromTodosArr:n=>{r=r.filter((r=>r.getId()!==n))},updateTodosArr:n=>{r=r.map((r=>r.getId()===n.getId()?n:r))},pushToProjectsArr:r=>{n.push(r)},removeFromProjectsArr:r=>{n=n.filter((n=>n.getId()!==r))},updateProjectsArr:r=>{n=n.map((n=>n.getId()===r.getId()?r:n))}}})();return(r=>{(r=>{const[n,e]=(()=>{const r=Dr(!0,"Leg day","Squats x 100","2022-11-25","low",null);return[[Dr(!1,"CS fundamentals","Finish lesson 28","2022-11-28","high",null),Dr(!1,"Codewars practice","Complete 10 challenges today","2022-11-28","medium",null),Dr(!1,"Project update","Update sign-in form features","2022-11-28","high",null),r],[Pr("Fitness",null,[r])]]})();r.initializeTodosArr(localStorage.todosData?Wr(JSON.parse(localStorage.todosData)):n),r.initializeProjectsArr(localStorage.projectsData?JSON.parse(localStorage.projectsData).map((r=>{const{title:n,id:e,todosData:t}=r,o=Wr(t);return Pr(n,e,o)})):e)})(r),onbeforeunload=Yr(r)})(n),r.classList.add("app-container","flex-column","center"),r.append(ie(n)),r})())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,