(()=>{"use strict";var n={402:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".content-box-container {\n  width: 100%;\n  height: 100vh;\n  min-height: 435px;\n  display: grid;\n  grid-template: 65px 1fr 65px / 1fr;\n  background-color: white;\n}\n\n.material-symbols-outlined {\n  font-variation-settings:\n  'FILL' 0,\n  'wght' 400,\n  'GRAD' 200,\n  'opsz' 48;\n  font-size: 1.85rem;\n}\n\n.content-box-title {\n  justify-content: center;\n  align-items: center;\n  gap: 11px;\n  grid-area: 1 / 1 / 2 / -1;\n  color: white;\n  background-color: var(--accent-3);\n  font-size: 2rem;\n  font-family: 'PT Mono', monospace;\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25);\n}\n\n@media (min-width: 650px) {\n  .content-box-container {\n    max-width: 950px;\n    height: min(550px, 85%);\n    grid-template: 65px 1fr / 165px 1fr;\n    box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  }\n\n  .content-box-title {\n    justify-content: start;\n    padding-left: 25px;\n  }\n}\n\n@media (min-width: 850px) {\n  .content-box-container {\n    grid-template: 65px 1fr / 185px 1fr;\n  }\n\n  .material-symbols-outlined {\n    font-size: 2.1rem;\n  }\n\n  .content-box-title {\n    font-size: 2.15rem;\n  }\n}\n\n@media (min-width: 1600px) {\n  .content-box-container {\n    max-width: 1050px;\n    height: min(570px, 85%);\n    grid-template: 65px 1fr / 200px 1fr;\n  }\n}\n","",{version:3,sources:["webpack://./src/components/contentBox/contentBox.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,aAAa;EACb,iBAAiB;EACjB,aAAa;EACb,kCAAkC;EAClC,uBAAuB;AACzB;;AAEA;EACE;;;;WAIS;EACT,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,yBAAyB;EACzB,YAAY;EACZ,iCAAiC;EACjC,eAAe;EACf,iCAAiC;EACjC,2CAA2C;AAC7C;;AAEA;EACE;IACE,gBAAgB;IAChB,uBAAuB;IACvB,mCAAmC;IACnC,6CAA6C;EAC/C;;EAEA;IACE,sBAAsB;IACtB,kBAAkB;EACpB;AACF;;AAEA;EACE;IACE,mCAAmC;EACrC;;EAEA;IACE,iBAAiB;EACnB;;EAEA;IACE,kBAAkB;EACpB;AACF;;AAEA;EACE;IACE,iBAAiB;IACjB,uBAAuB;IACvB,mCAAmC;EACrC;AACF",sourcesContent:[".content-box-container {\n  width: 100%;\n  height: 100vh;\n  min-height: 435px;\n  display: grid;\n  grid-template: 65px 1fr 65px / 1fr;\n  background-color: white;\n}\n\n.material-symbols-outlined {\n  font-variation-settings:\n  'FILL' 0,\n  'wght' 400,\n  'GRAD' 200,\n  'opsz' 48;\n  font-size: 1.85rem;\n}\n\n.content-box-title {\n  justify-content: center;\n  align-items: center;\n  gap: 11px;\n  grid-area: 1 / 1 / 2 / -1;\n  color: white;\n  background-color: var(--accent-3);\n  font-size: 2rem;\n  font-family: 'PT Mono', monospace;\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25);\n}\n\n@media (min-width: 650px) {\n  .content-box-container {\n    max-width: 950px;\n    height: min(550px, 85%);\n    grid-template: 65px 1fr / 165px 1fr;\n    box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  }\n\n  .content-box-title {\n    justify-content: start;\n    padding-left: 25px;\n  }\n}\n\n@media (min-width: 850px) {\n  .content-box-container {\n    grid-template: 65px 1fr / 185px 1fr;\n  }\n\n  .material-symbols-outlined {\n    font-size: 2.1rem;\n  }\n\n  .content-box-title {\n    font-size: 2.15rem;\n  }\n}\n\n@media (min-width: 1600px) {\n  .content-box-container {\n    max-width: 1050px;\n    height: min(570px, 85%);\n    grid-template: 65px 1fr / 200px 1fr;\n  }\n}\n"],sourceRoot:""}]);const s=a},52:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".del-confirmation-container {\n  width: 255px;\n  height: 140px;\n  gap: 35px;\n  background-color: white;\n  padding: 10px 15px;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 100;\n}\n\n.del-confirmation-msg {\n  font-size: 1.25rem;\n}\n\n.del-confirmation-btns-container {\n  gap: 15px;\n}\n\n.del-confirmation-no-btn,\n.del-confirmation-yes-btn {\n  width: 100px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.del-confirmation-no-btn:hover,\n.del-confirmation-yes-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.del-confirmation-no-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.del-confirmation-yes-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.del-confirmation-no-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.del-confirmation-yes-btn:hover {\n  background-color: var(--accent-1);\n}\n\n\n\n","",{version:3,sources:["webpack://./src/components/delConfirmation/delConfirmation.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,aAAa;EACb,SAAS;EACT,uBAAuB;EACvB,kBAAkB;EAClB,+BAA+B;EAC/B,kBAAkB;EAClB,6CAA6C;EAC7C,eAAe;EACf,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,SAAS;AACX;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;EACf,uBAAuB;EACvB,eAAe;AACjB;;AAEA;;EAEE,YAAY;EACZ,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;AACnC",sourcesContent:[".del-confirmation-container {\n  width: 255px;\n  height: 140px;\n  gap: 35px;\n  background-color: white;\n  padding: 10px 15px;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 100;\n}\n\n.del-confirmation-msg {\n  font-size: 1.25rem;\n}\n\n.del-confirmation-btns-container {\n  gap: 15px;\n}\n\n.del-confirmation-no-btn,\n.del-confirmation-yes-btn {\n  width: 100px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.del-confirmation-no-btn:hover,\n.del-confirmation-yes-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.del-confirmation-no-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.del-confirmation-yes-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.del-confirmation-no-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.del-confirmation-yes-btn:hover {\n  background-color: var(--accent-1);\n}\n\n\n\n"],sourceRoot:""}]);const s=a},417:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".holder-box-container {\n  grid-area: 2 / 1 / 3 / -1;\n  justify-content: start;\n  align-items: center;\n  padding: 15px 10px;\n  font-family: 'Lato', sans-serif;\n  font-size: 1.15rem;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.holder-box-container::-webkit-scrollbar {\n  display: none;\n}\n\n@media (min-width: 650px) {\n  .holder-box-container {\n    grid-area: 2 / 2 / -1 / -1;\n    padding: 20px;\n  }\n}","",{version:3,sources:["webpack://./src/components/holderBox/holderBox.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;EAClB,+BAA+B;EAC/B,kBAAkB;EAClB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE;IACE,0BAA0B;IAC1B,aAAa;EACf;AACF",sourcesContent:[".holder-box-container {\n  grid-area: 2 / 1 / 3 / -1;\n  justify-content: start;\n  align-items: center;\n  padding: 15px 10px;\n  font-family: 'Lato', sans-serif;\n  font-size: 1.15rem;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.holder-box-container::-webkit-scrollbar {\n  display: none;\n}\n\n@media (min-width: 650px) {\n  .holder-box-container {\n    grid-area: 2 / 2 / -1 / -1;\n    padding: 20px;\n  }\n}"],sourceRoot:""}]);const s=a},851:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".navbar-container {\n  width: 100%;\n  height: 65px;\n  grid-area: 3 / 1 / -1 / -1;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 15px;\n  background-color: var(--accent-4);\n  font-family: 'Press Start 2P', cursive;\n}\n\n.navbar-btn {\n  height: 40px;\n  width: 40px;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.3rem;\n  color: white;\n  transition: .4s;\n  cursor: pointer;\n}\n\n.navbar-btn:hover,\n.navbar-btn-selected {\n  transform: scale(1.2);\n  color: var(--accent-3);\n}\n\n.navbar-plus-btn {\n  font-family: 'Montserrat', sans-serif;\n  font-size: 2.55rem;\n  margin-bottom: 4px;\n  color: var(--accent-1)\n}\n\n.navbar-plus-btn:hover {\n  color: var(--accent-1);\n}\n\n@media (min-width: 400px) {\n  .navbar-container {\n    padding: 0 30px;\n  }\n}\n\n@media (min-width: 500px) {\n  .navbar-container {\n    padding: 0 60px;\n  }\n}\n\n@media (min-width: 600px) {\n  .navbar-container {\n    padding: 0 80px;\n  }\n}\n\n@media (min-width: 650px) {\n  .navbar-container {\n    height: 100%;\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0 0 20px 0;\n    background-color: var(--accent-5);\n    box-shadow: 1px 0 4px 0 rgba(0, 0, 0, 0.25);\n  }\n\n  .navbar-btn {\n    width: 100%;\n    height: 60px;\n    justify-content: start;\n    align-items: center;\n    padding-left: 25px;\n    font-size: 1.1rem;\n    color: var(--accent-4);\n    font-family: 'Montserrat', sans-serif;\n    border-right: 6px solid transparent;\n    transition: .65s;\n  }\n\n  .navbar-btn:hover,\n  .navbar-btn-selected  {\n    transform: none;\n    color: var(--accent-4);\n    background-color: var(--accent-6);\n  }\n\n  .navbar-btn-selected {\n    border-right: 6px solid var(--accent-1);\n  }\n\n  .navbar-plus-btn {\n    width: 80px;\n    justify-content: center;\n    margin-top: auto;\n    padding-left: 0px;\n    font-size: 2.95rem;\n    color: var(--accent-1);\n    border: none;\n  }\n\n  .navbar-plus-btn:hover {\n    transform: scale(1.3);\n    color: var(--accent-1);\n    background-color: transparent;\n  }\n}\n\n\n\n","",{version:3,sources:["webpack://./src/components/navbar/navbar.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,YAAY;EACZ,0BAA0B;EAC1B,8BAA8B;EAC9B,mBAAmB;EACnB,eAAe;EACf,iCAAiC;EACjC,sCAAsC;AACxC;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,uBAAuB;EACvB,mBAAmB;EACnB,iBAAiB;EACjB,YAAY;EACZ,eAAe;EACf,eAAe;AACjB;;AAEA;;EAEE,qBAAqB;EACrB,sBAAsB;AACxB;;AAEA;EACE,qCAAqC;EACrC,kBAAkB;EAClB,kBAAkB;EAClB;AACF;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE;IACE,eAAe;EACjB;AACF;;AAEA;EACE;IACE,eAAe;EACjB;AACF;;AAEA;EACE;IACE,eAAe;EACjB;AACF;;AAEA;EACE;IACE,YAAY;IACZ,wBAAwB;IACxB,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,iCAAiC;IACjC,2CAA2C;EAC7C;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,mBAAmB;IACnB,kBAAkB;IAClB,iBAAiB;IACjB,sBAAsB;IACtB,qCAAqC;IACrC,mCAAmC;IACnC,gBAAgB;EAClB;;EAEA;;IAEE,eAAe;IACf,sBAAsB;IACtB,iCAAiC;EACnC;;EAEA;IACE,uCAAuC;EACzC;;EAEA;IACE,WAAW;IACX,uBAAuB;IACvB,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,sBAAsB;IACtB,YAAY;EACd;;EAEA;IACE,qBAAqB;IACrB,sBAAsB;IACtB,6BAA6B;EAC/B;AACF",sourcesContent:[".navbar-container {\n  width: 100%;\n  height: 65px;\n  grid-area: 3 / 1 / -1 / -1;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 15px;\n  background-color: var(--accent-4);\n  font-family: 'Press Start 2P', cursive;\n}\n\n.navbar-btn {\n  height: 40px;\n  width: 40px;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.3rem;\n  color: white;\n  transition: .4s;\n  cursor: pointer;\n}\n\n.navbar-btn:hover,\n.navbar-btn-selected {\n  transform: scale(1.2);\n  color: var(--accent-3);\n}\n\n.navbar-plus-btn {\n  font-family: 'Montserrat', sans-serif;\n  font-size: 2.55rem;\n  margin-bottom: 4px;\n  color: var(--accent-1)\n}\n\n.navbar-plus-btn:hover {\n  color: var(--accent-1);\n}\n\n@media (min-width: 400px) {\n  .navbar-container {\n    padding: 0 30px;\n  }\n}\n\n@media (min-width: 500px) {\n  .navbar-container {\n    padding: 0 60px;\n  }\n}\n\n@media (min-width: 600px) {\n  .navbar-container {\n    padding: 0 80px;\n  }\n}\n\n@media (min-width: 650px) {\n  .navbar-container {\n    height: 100%;\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0 0 20px 0;\n    background-color: var(--accent-5);\n    box-shadow: 1px 0 4px 0 rgba(0, 0, 0, 0.25);\n  }\n\n  .navbar-btn {\n    width: 100%;\n    height: 60px;\n    justify-content: start;\n    align-items: center;\n    padding-left: 25px;\n    font-size: 1.1rem;\n    color: var(--accent-4);\n    font-family: 'Montserrat', sans-serif;\n    border-right: 6px solid transparent;\n    transition: .65s;\n  }\n\n  .navbar-btn:hover,\n  .navbar-btn-selected  {\n    transform: none;\n    color: var(--accent-4);\n    background-color: var(--accent-6);\n  }\n\n  .navbar-btn-selected {\n    border-right: 6px solid var(--accent-1);\n  }\n\n  .navbar-plus-btn {\n    width: 80px;\n    justify-content: center;\n    margin-top: auto;\n    padding-left: 0px;\n    font-size: 2.95rem;\n    color: var(--accent-1);\n    border: none;\n  }\n\n  .navbar-plus-btn:hover {\n    transform: scale(1.3);\n    color: var(--accent-1);\n    background-color: transparent;\n  }\n}\n\n\n\n"],sourceRoot:""}]);const s=a},735:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".project-container {\n  width: 100%;\n  gap: 18px;\n  background-color: var(--accent-2);\n  padding: 12px 10px;\n  margin-bottom: 7px;\n  transition: .25s;\n  font-family: 'Lato', sans-serif;\n}\n\n.project-container:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.project-container:last-child {\n  margin-bottom: 0;\n}\n\n.project-title {\n  width: 185px;\n  margin-right: auto;\n  font-size: 1rem;\n  overflow-wrap: anywhere;\n}\n\n.project-add-icon {\n  margin-left: 2px;\n}\n\n.project-add-icon,\n.project-edit-icon,\n.project-trash-icon {\n  width: var(--icon-width-1);\n  height: var(--icon-height-1);\n}\n\n.project-add-icon:hover,\n.project-edit-icon:hover,\n.project-trash-icon:hover {\n  transform: scale(1.1);\n}\n\n.project-container,\n.project-add-icon,\n.project-edit-icon,\n.project-trash-icon {\n  cursor: pointer;\n}\n\n@media (min-width: 380px) {\n  .project-title {\n    width: 215px;\n  }\n}\n\n@media (min-width: 450px) {\n  .project-title {\n    width: 250px;\n  }\n}\n\n@media (min-width: 500px) {\n  .project-title {\n    width: 285px;\n  }\n}\n\n@media (min-width: 750px) {\n  .project-title {\n    width: 325px;\n  }\n}\n\n@media (min-width: 850px) {\n  .project-title {\n    width: 370px;\n  }\n}\n\n","",{version:3,sources:["webpack://./src/components/project/project.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,SAAS;EACT,iCAAiC;EACjC,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,+BAA+B;AACjC;;AAEA;EACE,6CAA6C;EAC7C,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;;EAGE,0BAA0B;EAC1B,4BAA4B;AAC9B;;AAEA;;;EAGE,qBAAqB;AACvB;;AAEA;;;;EAIE,eAAe;AACjB;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF",sourcesContent:[".project-container {\n  width: 100%;\n  gap: 18px;\n  background-color: var(--accent-2);\n  padding: 12px 10px;\n  margin-bottom: 7px;\n  transition: .25s;\n  font-family: 'Lato', sans-serif;\n}\n\n.project-container:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.project-container:last-child {\n  margin-bottom: 0;\n}\n\n.project-title {\n  width: 185px;\n  margin-right: auto;\n  font-size: 1rem;\n  overflow-wrap: anywhere;\n}\n\n.project-add-icon {\n  margin-left: 2px;\n}\n\n.project-add-icon,\n.project-edit-icon,\n.project-trash-icon {\n  width: var(--icon-width-1);\n  height: var(--icon-height-1);\n}\n\n.project-add-icon:hover,\n.project-edit-icon:hover,\n.project-trash-icon:hover {\n  transform: scale(1.1);\n}\n\n.project-container,\n.project-add-icon,\n.project-edit-icon,\n.project-trash-icon {\n  cursor: pointer;\n}\n\n@media (min-width: 380px) {\n  .project-title {\n    width: 215px;\n  }\n}\n\n@media (min-width: 450px) {\n  .project-title {\n    width: 250px;\n  }\n}\n\n@media (min-width: 500px) {\n  .project-title {\n    width: 285px;\n  }\n}\n\n@media (min-width: 750px) {\n  .project-title {\n    width: 325px;\n  }\n}\n\n@media (min-width: 850px) {\n  .project-title {\n    width: 370px;\n  }\n}\n\n"],sourceRoot:""}]);const s=a},117:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),s=t(667),A=t.n(s),c=new URL(t(530),t.b),d=a()(o()),l=A()(c);d.push([n.id,".project-selector-container {\n  height: 425px;\n  width: 335px;\n  display: grid;\n  grid-template-rows: 65px 1fr 95px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n}\n\n.project-selector-title {\n  background-color: var(--accent-3);\n  border-radius: 8px 8px 0 0;\n  color: white;\n  font-size: 1.2rem;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.project-selector-projects-box {\n  width: 100%;\n  align-items: center;\n  padding: 15px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.project-selector-projects-box::-webkit-scrollbar {\n  display: none;\n}\n\n.project-selector-btns-container {\n  gap: 15px;\n  margin: 35px 0 25px 0;\n}\n\n.project-selector-cancel-btn, \n.project-selector-ok-btn {\n  width: 105px;\n  padding: 10px 20px;\n  margin-bottom: 10px; /* Specific */\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.project-selector-cancel-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.project-selector-ok-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.project-selector-cancel-btn:hover, \n.project-selector-ok-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.project-selector-cancel-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.project-selector-ok-btn:hover {\n  background-color: var(--accent-1);\n}\n\n.project-option {\n  width: 100%;\n  height: auto;\n  background-color: var(--accent-2);\n  padding: 13px 10px;\n  margin-bottom: 8px;\n  transition: .25s;\n  font-family: 'Lato', sans-serif;\n  position: relative;\n  cursor: pointer;\n}\n\n.project-option:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.project-option:last-child {\n  margin-bottom: 0;\n}\n\n.project-option-title {\n  width: 205px; \n  margin-right: auto;\n  overflow-wrap: anywhere;\n}\n\n.project-option-checkbox {\n  height: 20px;\n  width: 20px;\n  position: absolute;\n  top: 50%;\n  right: 15px;\n  transform: translateY(-50%);\n  background-color: white;\n  border: 2px solid var(--accent-1);\n  border-radius: 5px;\n}\n\n.selected .project-option-checkbox {\n  background-color: var(--accent-1);\n}\n\n.selected .project-option-checkbox::before {\n  height: 12px;\n  width: 12px;\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-image: url("+l+");\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n@media (min-width: 950px) {\n  .project-selector-container {\n    height: 475px;\n    width: 400px;\n  }\n\n  .project-selector-title {\n    font-size: 1.35rem;\n  }\n\n  .project-option-title {\n    width: 265px; \n  }\n}","",{version:3,sources:["webpack://./src/components/projectSelector/projectSelector.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,YAAY;EACZ,aAAa;EACb,iCAAiC;EACjC,eAAe;EACf,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,uBAAuB;EACvB,+BAA+B;EAC/B,kBAAkB;EAClB,6CAA6C;AAC/C;;AAEA;EACE,iCAAiC;EACjC,0BAA0B;EAC1B,YAAY;EACZ,iBAAiB;EACjB,qCAAqC;AACvC;;AAEA;EACE,WAAW;EACX,mBAAmB;EACnB,aAAa;EACb,gBAAgB;EAChB,wBAAwB,GAAG,mCAAmC;EAC9D,qBAAqB,GAAG,+BAA+B;AACzD;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE,SAAS;EACT,qBAAqB;AACvB;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,mBAAmB,EAAE,aAAa;EAClC,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;EACf,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;EACZ,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iCAAiC;EACjC,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,+BAA+B;EAC/B,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,6CAA6C;EAC7C,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,WAAW;EACX,2BAA2B;EAC3B,uBAAuB;EACvB,iCAAiC;EACjC,kBAAkB;AACpB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,yDAAoC;EACpC,sBAAsB;EACtB,4BAA4B;AAC9B;;AAEA;EACE;IACE,aAAa;IACb,YAAY;EACd;;EAEA;IACE,kBAAkB;EACpB;;EAEA;IACE,YAAY;EACd;AACF",sourcesContent:[".project-selector-container {\n  height: 425px;\n  width: 335px;\n  display: grid;\n  grid-template-rows: 65px 1fr 95px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n}\n\n.project-selector-title {\n  background-color: var(--accent-3);\n  border-radius: 8px 8px 0 0;\n  color: white;\n  font-size: 1.2rem;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.project-selector-projects-box {\n  width: 100%;\n  align-items: center;\n  padding: 15px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.project-selector-projects-box::-webkit-scrollbar {\n  display: none;\n}\n\n.project-selector-btns-container {\n  gap: 15px;\n  margin: 35px 0 25px 0;\n}\n\n.project-selector-cancel-btn, \n.project-selector-ok-btn {\n  width: 105px;\n  padding: 10px 20px;\n  margin-bottom: 10px; /* Specific */\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.project-selector-cancel-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.project-selector-ok-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.project-selector-cancel-btn:hover, \n.project-selector-ok-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.project-selector-cancel-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.project-selector-ok-btn:hover {\n  background-color: var(--accent-1);\n}\n\n.project-option {\n  width: 100%;\n  height: auto;\n  background-color: var(--accent-2);\n  padding: 13px 10px;\n  margin-bottom: 8px;\n  transition: .25s;\n  font-family: 'Lato', sans-serif;\n  position: relative;\n  cursor: pointer;\n}\n\n.project-option:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.project-option:last-child {\n  margin-bottom: 0;\n}\n\n.project-option-title {\n  width: 205px; \n  margin-right: auto;\n  overflow-wrap: anywhere;\n}\n\n.project-option-checkbox {\n  height: 20px;\n  width: 20px;\n  position: absolute;\n  top: 50%;\n  right: 15px;\n  transform: translateY(-50%);\n  background-color: white;\n  border: 2px solid var(--accent-1);\n  border-radius: 5px;\n}\n\n.selected .project-option-checkbox {\n  background-color: var(--accent-1);\n}\n\n.selected .project-option-checkbox::before {\n  height: 12px;\n  width: 12px;\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-image: url(\"./check.png\");\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n@media (min-width: 950px) {\n  .project-selector-container {\n    height: 475px;\n    width: 400px;\n  }\n\n  .project-selector-title {\n    font-size: 1.35rem;\n  }\n\n  .project-option-title {\n    width: 265px; \n  }\n}"],sourceRoot:""}]);const p=d},497:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".details-container {\n  width: 315px;\n  height: 495px;\n  display: grid;\n  grid-template-rows: 40px 1fr;\n  gap: 20px;\n  padding: 10px 15px;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  background-color: white;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.details-top-container {\n  justify-content: space-between;\n  align-items: center;\n}\n\n.details-bottom-container {\n  display: grid;\n  gap: 15px;\n  grid-template-rows: 90px 225px 75px;\n  justify-items: center;\n  align-items: center;\n  padding: 0 15px;\n}\n\n.details-priority {\n  border-radius: 4px;\n  padding: 1px 10px 3px 10px;\n  color: white;\n  font-weight: bold;\n}\n\n.details-priority-l {\n  border: 1px solid var(--low-prio);\n  background-color: var(--low-prio);\n}\n\n.details-priority-m {\n  border: 1px solid var(--medium-prio);\n  background-color: var(--medium-prio);\n}\n\n.details-priority-h {\n  border: 1px solid var(--high-prio);\n  background-color: var(--high-prio);\n}\n\n.details-title,\n.details-notes {\n  width: 100%;\n  height: 100%;\n  overflow-wrap: anywhere;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.details-title::-webkit-scrollbar,\n.details-notes::-webkit-scrollbar {\n  display: none;\n}\n\n.details-title {\n  text-align: center;\n  font-size: 1.1rem;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.details-notes {\n  text-align: left;\n}\n\n.details-close-btn {\n  padding: 10px 20px;\n  border: 1px solid var(--accent-1);\n  border-radius: 5px;\n  color: var(--accent-1);\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n}\n\n.details-close-btn:hover {\n  color: white;\n  background-color: var(--accent-1);\n  transform: translateY(-5px);\n  font-weight: bold;\n}","",{version:3,sources:["webpack://./src/components/todoDetails/todoDetails.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,aAAa;EACb,aAAa;EACb,4BAA4B;EAC5B,SAAS;EACT,kBAAkB;EAClB,+BAA+B;EAC/B,kBAAkB;EAClB,uBAAuB;EACvB,6CAA6C;EAC7C,eAAe;EACf,QAAQ;EACR,SAAS;EACT,gCAAgC;AAClC;;AAEA;EACE,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,mCAAmC;EACnC,qBAAqB;EACrB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,0BAA0B;EAC1B,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;EACjC,iCAAiC;AACnC;;AAEA;EACE,oCAAoC;EACpC,oCAAoC;AACtC;;AAEA;EACE,kCAAkC;EAClC,kCAAkC;AACpC;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;;EAEE,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,qCAAqC;AACvC;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,iCAAiC;EACjC,kBAAkB;EAClB,sBAAsB;EACtB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,iCAAiC;EACjC,2BAA2B;EAC3B,iBAAiB;AACnB",sourcesContent:[".details-container {\n  width: 315px;\n  height: 495px;\n  display: grid;\n  grid-template-rows: 40px 1fr;\n  gap: 20px;\n  padding: 10px 15px;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  background-color: white;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.details-top-container {\n  justify-content: space-between;\n  align-items: center;\n}\n\n.details-bottom-container {\n  display: grid;\n  gap: 15px;\n  grid-template-rows: 90px 225px 75px;\n  justify-items: center;\n  align-items: center;\n  padding: 0 15px;\n}\n\n.details-priority {\n  border-radius: 4px;\n  padding: 1px 10px 3px 10px;\n  color: white;\n  font-weight: bold;\n}\n\n.details-priority-l {\n  border: 1px solid var(--low-prio);\n  background-color: var(--low-prio);\n}\n\n.details-priority-m {\n  border: 1px solid var(--medium-prio);\n  background-color: var(--medium-prio);\n}\n\n.details-priority-h {\n  border: 1px solid var(--high-prio);\n  background-color: var(--high-prio);\n}\n\n.details-title,\n.details-notes {\n  width: 100%;\n  height: 100%;\n  overflow-wrap: anywhere;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.details-title::-webkit-scrollbar,\n.details-notes::-webkit-scrollbar {\n  display: none;\n}\n\n.details-title {\n  text-align: center;\n  font-size: 1.1rem;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.details-notes {\n  text-align: left;\n}\n\n.details-close-btn {\n  padding: 10px 20px;\n  border: 1px solid var(--accent-1);\n  border-radius: 5px;\n  color: var(--accent-1);\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n}\n\n.details-close-btn:hover {\n  color: white;\n  background-color: var(--accent-1);\n  transform: translateY(-5px);\n  font-weight: bold;\n}"],sourceRoot:""}]);const s=a},304:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,".box {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.form-container {\n  width: 325px;\n  height: min(585px, 85%);\n  display: grid;\n  grid-template-rows: 65px 1fr;\n  gap: 5px;\n  background-color: white;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.form-container::-webkit-scrollbar {\n  display: none;\n}\n\n.project-fields-height {\n  height: min(245px, 85%);\n}\n\n.form-top-container {\n  grid-row: 1 / 2;\n  background-color: var(--accent-3);\n  border-radius: 8px 8px 0 0;\n}\n\n.form-todo-btn,\n.form-project-btn {\n  width: clamp(50%, 100%, 100%);\n  height: 100%;\n  color: white;\n  background-color: transparent;\n  border: none;\n  border-bottom: 4px solid white;\n  outline: none;\n  font-size: 1.2rem;\n  transition: .5s;\n  cursor: pointer;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.form-fields-container {\n  grid-row: 2 / 3;\n}\n\n.form-middle-container {\n  align-items: center;\n  justify-content: start;\n  padding: 0px 15px;\n}\n\n.form-title-input,\n.form-notes-input {\n  width: 100%;\n  border: none;\n  border-bottom: 4px solid rgba(0, 0, 0, 0.05);\n  outline: none;\n  resize: none;\n  padding: 15px 10px 10px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.form-title-input::-webkit-scrollbar,\n.form-notes-input::-webkit-scrollbar {\n  display: none;\n}\n\n.form-title-input {\n  height: 75px;\n}\n\n.form-notes-input {\n  height: 165px;\n}\n\n.form-due-date-container,\n.form-priority-container {\n  gap: 13px;\n  margin-top: 24px;\n}\n\n.form-due-date-label {\n  font-size: 1.05rem;\n}\n\n.form-due-date-input {\n  border-radius: 5px;\n  border: 2px solid rgba(26, 167, 125, 0.5);\n  outline: none;\n  padding: 5px 10px;\n  cursor: pointer;\n  color: black;\n}\n\n.form-priority-title {\n  font-size: 1.15rem;\n}\n\n.form-priority-options-container {\n  gap: 4px;\n}\n\n.form-priority-label {\n  border-radius: 4px;\n  padding: 1px 7px 3px 7px;\n  text-align: center;\n  transition: .25s;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.l-prio-label {\n  border: 1px solid var(--low-prio);\n  color: var(--low-prio);\n}\n\n.m-prio-label {\n  border: 1px solid var(--medium-prio);\n  color: var(--medium-prio);\n}\n\n.h-prio-label {\n  border: 1px solid var(--high-prio);\n  color: var(--high-prio);\n  margin-right: 18px;\n}\n\n.form-priority-radio:checked + .l-prio-label {\n  border: 1px solid var(--low-prio);\n  background-color: var(--low-prio);\n}\n\n.form-priority-radio:checked + .m-prio-label {\n  border: 1px solid var(--medium-prio);\n  background-color: var(--medium-prio);\n}\n\n.form-priority-radio:checked + .h-prio-label {\n  border: 1px solid var(--high-prio);\n  background-color: var(--high-prio);\n}\n\n.form-priority-radio:checked + .form-priority-label {\n  transform: scale(1.1);\n  color: white;\n}\n\n.form-bottom-container {\n  gap: 15px;\n  margin: 35px 0 25px 0;\n}\n\n.form-ok-btn,\n.form-cancel-btn {\n  width: 105px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.form-ok-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.form-cancel-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.form-ok-btn:hover,\n.form-cancel-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.form-ok-btn:hover {\n  background-color: var(--accent-1);\n}\n\n.form-cancel-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.border-btm-b {\n  border-bottom: 4px solid black;\n}\n\n.border-btm-w {\n  border-bottom: 4px solid white;\n}\n\n.no-pointer-events {\n  pointer-events: none;\n}","",{version:3,sources:["webpack://./src/components/todoForm/todoForm.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;AACV;;AAEA;EACE,YAAY;EACZ,uBAAuB;EACvB,aAAa;EACb,4BAA4B;EAC5B,QAAQ;EACR,uBAAuB;EACvB,6CAA6C;EAC7C,+BAA+B;EAC/B,kBAAkB;EAClB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,iCAAiC;EACjC,0BAA0B;AAC5B;;AAEA;;EAEE,6BAA6B;EAC7B,YAAY;EACZ,YAAY;EACZ,6BAA6B;EAC7B,YAAY;EACZ,8BAA8B;EAC9B,aAAa;EACb,iBAAiB;EACjB,eAAe;EACf,eAAe;EACf,qCAAqC;AACvC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,4CAA4C;EAC5C,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;;EAEE,aAAa;AACf;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,yCAAyC;EACzC,aAAa;EACb,iBAAiB;EACjB,eAAe;EACf,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,QAAQ;AACV;;AAEA;EACE,kBAAkB;EAClB,wBAAwB;EACxB,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,oCAAoC;EACpC,yBAAyB;AAC3B;;AAEA;EACE,kCAAkC;EAClC,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,iCAAiC;EACjC,iCAAiC;AACnC;;AAEA;EACE,oCAAoC;EACpC,oCAAoC;AACtC;;AAEA;EACE,kCAAkC;EAClC,kCAAkC;AACpC;;AAEA;EACE,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,SAAS;EACT,qBAAqB;AACvB;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;EACf,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;EACZ,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,oBAAoB;AACtB",sourcesContent:[".box {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.form-container {\n  width: 325px;\n  height: min(585px, 85%);\n  display: grid;\n  grid-template-rows: 65px 1fr;\n  gap: 5px;\n  background-color: white;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.form-container::-webkit-scrollbar {\n  display: none;\n}\n\n.project-fields-height {\n  height: min(245px, 85%);\n}\n\n.form-top-container {\n  grid-row: 1 / 2;\n  background-color: var(--accent-3);\n  border-radius: 8px 8px 0 0;\n}\n\n.form-todo-btn,\n.form-project-btn {\n  width: clamp(50%, 100%, 100%);\n  height: 100%;\n  color: white;\n  background-color: transparent;\n  border: none;\n  border-bottom: 4px solid white;\n  outline: none;\n  font-size: 1.2rem;\n  transition: .5s;\n  cursor: pointer;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.form-fields-container {\n  grid-row: 2 / 3;\n}\n\n.form-middle-container {\n  align-items: center;\n  justify-content: start;\n  padding: 0px 15px;\n}\n\n.form-title-input,\n.form-notes-input {\n  width: 100%;\n  border: none;\n  border-bottom: 4px solid rgba(0, 0, 0, 0.05);\n  outline: none;\n  resize: none;\n  padding: 15px 10px 10px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.form-title-input::-webkit-scrollbar,\n.form-notes-input::-webkit-scrollbar {\n  display: none;\n}\n\n.form-title-input {\n  height: 75px;\n}\n\n.form-notes-input {\n  height: 165px;\n}\n\n.form-due-date-container,\n.form-priority-container {\n  gap: 13px;\n  margin-top: 24px;\n}\n\n.form-due-date-label {\n  font-size: 1.05rem;\n}\n\n.form-due-date-input {\n  border-radius: 5px;\n  border: 2px solid rgba(26, 167, 125, 0.5);\n  outline: none;\n  padding: 5px 10px;\n  cursor: pointer;\n  color: black;\n}\n\n.form-priority-title {\n  font-size: 1.15rem;\n}\n\n.form-priority-options-container {\n  gap: 4px;\n}\n\n.form-priority-label {\n  border-radius: 4px;\n  padding: 1px 7px 3px 7px;\n  text-align: center;\n  transition: .25s;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.l-prio-label {\n  border: 1px solid var(--low-prio);\n  color: var(--low-prio);\n}\n\n.m-prio-label {\n  border: 1px solid var(--medium-prio);\n  color: var(--medium-prio);\n}\n\n.h-prio-label {\n  border: 1px solid var(--high-prio);\n  color: var(--high-prio);\n  margin-right: 18px;\n}\n\n.form-priority-radio:checked + .l-prio-label {\n  border: 1px solid var(--low-prio);\n  background-color: var(--low-prio);\n}\n\n.form-priority-radio:checked + .m-prio-label {\n  border: 1px solid var(--medium-prio);\n  background-color: var(--medium-prio);\n}\n\n.form-priority-radio:checked + .h-prio-label {\n  border: 1px solid var(--high-prio);\n  background-color: var(--high-prio);\n}\n\n.form-priority-radio:checked + .form-priority-label {\n  transform: scale(1.1);\n  color: white;\n}\n\n.form-bottom-container {\n  gap: 15px;\n  margin: 35px 0 25px 0;\n}\n\n.form-ok-btn,\n.form-cancel-btn {\n  width: 105px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.form-ok-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.form-cancel-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.form-ok-btn:hover,\n.form-cancel-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.form-ok-btn:hover {\n  background-color: var(--accent-1);\n}\n\n.form-cancel-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.border-btm-b {\n  border-bottom: 4px solid black;\n}\n\n.border-btm-w {\n  border-bottom: 4px solid white;\n}\n\n.no-pointer-events {\n  pointer-events: none;\n}"],sourceRoot:""}]);const s=a},272:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),s=t(667),A=t.n(s),c=new URL(t(241),t.b),d=a()(o()),l=A()(c);d.push([n.id,'.item-container {\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  background-color: var(--accent-2);\n  padding: 14px 10px;\n  margin-bottom: 8px;\n  transition: .25s;\n  font-family: \'Lato\', sans-serif;\n  position: relative;\n}\n\n.item-container:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.item-container:last-child {\n  margin-bottom: 0;\n}\n\n.item-container:has(.item-checkbox.checked)::before {\n  width: calc(100% - 34px - 34px);\n  height: 100%;\n  content: "";\n  position: absolute;\n  left: 34px;\n  right: 34px;\n  background-color: rgba(240, 240, 240, 0.8);\n  filter: blur(1px);\n}\n\n.item-left-container {\n  gap: 12px;\n}\n\n.item-right-container {\n  gap: 14px;\n}\n\n.item-checkbox {\n  width: 19px;\n  height: 19px;\n  position:relative;\n  border: 2px solid var(--accent-1);\n  border-radius: 5px;\n  background-color: white;\n  font-size: 1.2rem;\n}\n\n.checked {\n  background-color: var(--accent-1);\n}\n\n.checked.item-checkbox::before {\n  width: 11px;\n  height: 11px;\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-image: url('+l+");\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n.no-pointer-events {\n  pointer-events: none;\n  cursor: auto;\n}\n\n.item-container.no-pointer-events .item-checkbox,\n.item-container.no-pointer-events .item-trash-icon {\n  pointer-events: all;\n  cursor: pointer;\n}\n\n.item-title {\n  width: 100px;\n  font-size: 1rem;\n  overflow-wrap: anywhere;\n}\n\n.item-due-date {\n  font-size: .9rem;\n}\n\n.item-edit-icon {\n  margin-left: 2px;\n}\n\n.item-edit-icon,\n.item-move-icon,\n.item-trash-icon  {\n  width: var(--icon-width-1);\n  height: var(--icon-height-1);\n  transition: .35s;\n}\n\n.item-edit-icon:hover,\n.item-move-icon:hover,\n.item-trash-icon:hover {\n  transform: scale(1.1);\n}\n\n.item-container,\n.item-checkbox,\n.item-edit-icon,\n.item-move-icon,\n.item-trash-icon {\n  cursor: pointer;\n}\n\n@media (min-width: 380px) {\n  .item-title {\n    width: 125px;\n  }\n}\n\n@media (min-width: 400px) {\n  .item-title {\n    width: 145px;\n  }\n}\n\n@media (min-width: 450px) {\n  .item-title {\n    width: 185px;\n  }\n}\n\n@media (min-width: 500px) {\n  .item-title {\n    width: 240px;\n  }\n}\n\n@media (min-width: 650px) {\n  .item-title {\n    width: 200px;\n  }\n  \n  .item-right-container {\n    gap: 18px;\n  }\n}\n\n@media (min-width: 750px) {\n  .item-title {\n    width: 270px;\n  }\n}\n\n@media (min-width: 850px) {\n  .item-title {\n    width: 335px;\n  }\n}\n\n","",{version:3,sources:["webpack://./src/components/todoItem/todoItem.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,8BAA8B;EAC9B,mBAAmB;EACnB,SAAS;EACT,iCAAiC;EACjC,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,+BAA+B;EAC/B,kBAAkB;AACpB;;AAEA;EACE,6CAA6C;EAC7C,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,+BAA+B;EAC/B,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,0CAA0C;EAC1C,iBAAiB;AACnB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,iCAAiC;EACjC,kBAAkB;EAClB,uBAAuB;EACvB,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,yDAAoC;EACpC,sBAAsB;EACtB,4BAA4B;AAC9B;;AAEA;EACE,oBAAoB;EACpB,YAAY;AACd;;AAEA;;EAEE,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;;EAGE,0BAA0B;EAC1B,4BAA4B;EAC5B,gBAAgB;AAClB;;AAEA;;;EAGE,qBAAqB;AACvB;;AAEA;;;;;EAKE,eAAe;AACjB;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;;EAEA;IACE,SAAS;EACX;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF",sourcesContent:['.item-container {\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  background-color: var(--accent-2);\n  padding: 14px 10px;\n  margin-bottom: 8px;\n  transition: .25s;\n  font-family: \'Lato\', sans-serif;\n  position: relative;\n}\n\n.item-container:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.item-container:last-child {\n  margin-bottom: 0;\n}\n\n.item-container:has(.item-checkbox.checked)::before {\n  width: calc(100% - 34px - 34px);\n  height: 100%;\n  content: "";\n  position: absolute;\n  left: 34px;\n  right: 34px;\n  background-color: rgba(240, 240, 240, 0.8);\n  filter: blur(1px);\n}\n\n.item-left-container {\n  gap: 12px;\n}\n\n.item-right-container {\n  gap: 14px;\n}\n\n.item-checkbox {\n  width: 19px;\n  height: 19px;\n  position:relative;\n  border: 2px solid var(--accent-1);\n  border-radius: 5px;\n  background-color: white;\n  font-size: 1.2rem;\n}\n\n.checked {\n  background-color: var(--accent-1);\n}\n\n.checked.item-checkbox::before {\n  width: 11px;\n  height: 11px;\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-image: url("./check.png");\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n.no-pointer-events {\n  pointer-events: none;\n  cursor: auto;\n}\n\n.item-container.no-pointer-events .item-checkbox,\n.item-container.no-pointer-events .item-trash-icon {\n  pointer-events: all;\n  cursor: pointer;\n}\n\n.item-title {\n  width: 100px;\n  font-size: 1rem;\n  overflow-wrap: anywhere;\n}\n\n.item-due-date {\n  font-size: .9rem;\n}\n\n.item-edit-icon {\n  margin-left: 2px;\n}\n\n.item-edit-icon,\n.item-move-icon,\n.item-trash-icon  {\n  width: var(--icon-width-1);\n  height: var(--icon-height-1);\n  transition: .35s;\n}\n\n.item-edit-icon:hover,\n.item-move-icon:hover,\n.item-trash-icon:hover {\n  transform: scale(1.1);\n}\n\n.item-container,\n.item-checkbox,\n.item-edit-icon,\n.item-move-icon,\n.item-trash-icon {\n  cursor: pointer;\n}\n\n@media (min-width: 380px) {\n  .item-title {\n    width: 125px;\n  }\n}\n\n@media (min-width: 400px) {\n  .item-title {\n    width: 145px;\n  }\n}\n\n@media (min-width: 450px) {\n  .item-title {\n    width: 185px;\n  }\n}\n\n@media (min-width: 500px) {\n  .item-title {\n    width: 240px;\n  }\n}\n\n@media (min-width: 650px) {\n  .item-title {\n    width: 200px;\n  }\n  \n  .item-right-container {\n    gap: 18px;\n  }\n}\n\n@media (min-width: 750px) {\n  .item-title {\n    width: 270px;\n  }\n}\n\n@media (min-width: 850px) {\n  .item-title {\n    width: 335px;\n  }\n}\n\n'],sourceRoot:""}]);const p=d},618:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),s=t(667),A=t.n(s),c=new URL(t(891),t.b),d=a()(o());d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Alatsi&family=JetBrains+Mono:wght@200&family=Lato:wght@100;300&family=Lobster&family=Montserrat+Alternates:wght@300;400&family=Montserrat:wght@200;300;400&family=PT+Mono&family=Press+Start+2P&display=swap);"]);var l=A()(c);d.push([n.id,":root {\n  --accent-1: rgb(26, 167, 125);\n  --accent-2: rgb(240, 240, 240);\n  /* --accent-3: rgb(255, 62, 101); */\n  --accent-3: #cc7e97;\n  --accent-4: rgb(45, 45, 45);\n  --accent-5: rgba(220, 220, 220, 0.5);\n  --accent-6: rgba(205, 205, 205, 0.65);\n  --low-prio: rgb(40, 207, 40);\n  --medium-prio: rgb(255, 187, 60);\n  --high-prio: rgb(255, 70, 70);\n  --icon-width-1: 20px;\n  --icon-height-1: 20px;\n}\n\n.app-container {\n  height: 100vh;\n  background-image: url("+l+");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n","",{version:3,sources:["webpack://./src/container/app.css"],names:[],mappings:"AAEA;EACE,6BAA6B;EAC7B,8BAA8B;EAC9B,mCAAmC;EACnC,mBAAmB;EACnB,2BAA2B;EAC3B,oCAAoC;EACpC,qCAAqC;EACrC,4BAA4B;EAC5B,gCAAgC;EAChC,6BAA6B;EAC7B,oBAAoB;EACpB,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,yDAA2C;EAC3C,sBAAsB;EACtB,4BAA4B;EAC5B,2BAA2B;AAC7B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Alatsi&family=JetBrains+Mono:wght@200&family=Lato:wght@100;300&family=Lobster&family=Montserrat+Alternates:wght@300;400&family=Montserrat:wght@200;300;400&family=PT+Mono&family=Press+Start+2P&display=swap');\n\n:root {\n  --accent-1: rgb(26, 167, 125);\n  --accent-2: rgb(240, 240, 240);\n  /* --accent-3: rgb(255, 62, 101); */\n  --accent-3: #cc7e97;\n  --accent-4: rgb(45, 45, 45);\n  --accent-5: rgba(220, 220, 220, 0.5);\n  --accent-6: rgba(205, 205, 205, 0.65);\n  --low-prio: rgb(40, 207, 40);\n  --medium-prio: rgb(255, 187, 60);\n  --high-prio: rgb(255, 70, 70);\n  --icon-width-1: 20px;\n  --icon-height-1: 20px;\n}\n\n.app-container {\n  height: 100vh;\n  background-image: url(\"./bg-wallpaper.jpg\");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n"],sourceRoot:""}]);const p=d},424:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/* Utilities */\n.flex {\n  display: flex;\n}\n\n.flex-column {\n  display: flex;\n  flex-direction: column;\n}\n\n.center {\n  justify-content: center;\n  align-items: center;\n}\n\n.hidden {\n  opacity: 0;\n}\n\n.disabled {\n  filter: blur(1px) grayscale(50%) brightness(50%);\n  pointer-events: none;\n}\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;;EAGE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA,cAAc;AACd;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,gDAAgD;EAChD,oBAAoB;AACtB",sourcesContent:["*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/* Utilities */\n.flex {\n  display: flex;\n}\n\n.flex-column {\n  display: flex;\n  flex-direction: column;\n}\n\n.center {\n  justify-content: center;\n  align-items: center;\n}\n\n.hidden {\n  opacity: 0;\n}\n\n.disabled {\n  filter: blur(1px) grayscale(50%) brightness(50%);\n  pointer-events: none;\n}\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],d=i[c]||0,l="".concat(c," ").concat(d);i[c]=d+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var A=r(n,o),c=0;c<i.length;c++){var d=t(i[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},530:(n,e,t)=>{n.exports=t.p+"a568f6f1b577d3fd06b6.png"},241:(n,e,t)=>{n.exports=t.p+"a568f6f1b577d3fd06b6.png"},891:(n,e,t)=>{n.exports=t.p+"cbb11493c646967b47db.jpg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),s=t(565),A=t.n(s),c=t(216),d=t.n(c),l=t(589),p=t.n(l),u=t(618),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var f=t(402),h={};h.styleTagTransform=p(),h.setAttributes=A(),h.insert=a().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=d(),e()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals;var C=t(851),g={};g.styleTagTransform=p(),g.setAttributes=A(),g.insert=a().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=d(),e()(C.Z,g),C.Z&&C.Z.locals&&C.Z.locals;var E=t(304),b={};b.styleTagTransform=p(),b.setAttributes=A(),b.insert=a().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=d(),e()(E.Z,b),E.Z&&E.Z.locals&&E.Z.locals;const x=(n,e)=>{for(let t in e)n[t]=e[t]},v=n=>{return`${n}-${e=1,t=1e6,e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e+1)+e)}`;var e,t},B=()=>{const n=new Date,e=String(n.getFullYear()),t=String(n.getMonth()+1),r=String(n.getDate());return`${e}-${t.padStart(2,"0")}-${r.padStart(2,"0")}`},w=n=>n.map((n=>({id:n.getId(),checked:n.getChecked(),title:n.getTitle(),notes:n.getNotes(),dueDate:n.getDueDate(),priority:n.getPriority()}))),y=n=>{localStorage.todosData=JSON.stringify(w(n.getTodosArr())),localStorage.projectsData=JSON.stringify((n=>{let e=n.map((n=>({id:n.getId(),todosData:w(n.getTodosArr()),title:n.getTitle()})));return e})(n.getProjectsArr()))},k=()=>document.querySelector(".app-container"),j=()=>document.querySelector(".content-box-container"),T=n=>{document.querySelector("#root").append(n)};var L=t(272),S={};S.styleTagTransform=p(),S.setAttributes=A(),S.insert=a().bind(null,"head"),S.domAPI=o(),S.insertStyleElement=d(),e()(L.Z,S),L.Z&&L.Z.locals&&L.Z.locals;const Y=t.p+"1f907a58b0cc1eaf0caf.svg",D=t.p+"a220482e9ba79a8aa587.svg",M=t.p+"ba8ee4721ed25900c034.svg";var P=t(497),I={};I.styleTagTransform=p(),I.setAttributes=A(),I.insert=a().bind(null,"head"),I.domAPI=o(),I.insertStyleElement=d(),e()(P.Z,I),P.Z&&P.Z.locals&&P.Z.locals;var W=t(52),z={};z.styleTagTransform=p(),z.setAttributes=A(),z.insert=a().bind(null,"head"),z.domAPI=o(),z.insertStyleElement=d(),e()(W.Z,z),W.Z&&W.Z.locals&&W.Z.locals;const q=(n,e,t,r)=>{const o=document.createElement("div"),i=document.createElement("p"),a=document.createElement("div"),s=document.createElement("button"),A=document.createElement("button");function c(){o.remove(),k().classList.remove("disabled")}return o.classList.add("del-confirmation-container","flex-column","center"),i.classList.add("del-confirmation-msg"),i.innerText="Confirm Delete?",a.classList.add("del-confirmation-btns-container","flex","center"),s.classList.add("del-confirmation-no-btn"),s.innerText="NO",s.addEventListener("pointerup",(()=>{c()})),A.classList.add("del-confirmation-yes-btn"),A.innerText="YES",A.addEventListener("pointerup",(()=>{"todo"===e?(n.removeFromTodosArr(t.getId()),console.log(n.getTodosArr()),n.getProjectsArr().forEach((n=>{n.removeFromTodosArr(t.getId())}))):"project"===e&&(n.removeFromProjectsArr(t.getId()),console.log(n.getProjectsArr())),y(n),r.remove(),c()})),a.append(s,A),o.append(i,a),o};var Z=t(117),U={};U.styleTagTransform=p(),U.setAttributes=A(),U.insert=a().bind(null,"head"),U.domAPI=o(),U.insertStyleElement=d(),e()(Z.Z,U),Z.Z&&Z.Z.locals&&Z.Z.locals;function F(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function O(n){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},O(n)}function N(n){return F(1,arguments),n instanceof Date||"object"===O(n)&&"[object Date]"===Object.prototype.toString.call(n)}function R(n){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},R(n)}function G(n){F(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"===R(n)&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function H(n){if(F(1,arguments),!N(n)&&"number"!=typeof n)return!1;var e=G(n);return!isNaN(Number(e))}function X(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function Q(n,e){F(2,arguments);var t=G(n).getTime(),r=X(e);return new Date(t+r)}function V(n,e){F(2,arguments);var t=X(e);return Q(n,-t)}var J=864e5;function $(n){F(1,arguments);var e=1,t=G(n),r=t.getUTCDay(),o=(r<e?7:0)+r-e;return t.setUTCDate(t.getUTCDate()-o),t.setUTCHours(0,0,0,0),t}function _(n){F(1,arguments);var e=G(n),t=e.getUTCFullYear(),r=new Date(0);r.setUTCFullYear(t+1,0,4),r.setUTCHours(0,0,0,0);var o=$(r),i=new Date(0);i.setUTCFullYear(t,0,4),i.setUTCHours(0,0,0,0);var a=$(i);return e.getTime()>=o.getTime()?t+1:e.getTime()>=a.getTime()?t:t-1}function K(n){F(1,arguments);var e=_(n),t=new Date(0);t.setUTCFullYear(e,0,4),t.setUTCHours(0,0,0,0);var r=$(t);return r}var nn=6048e5,en={};function tn(){return en}function rn(n,e){var t,r,o,i,a,s,A,c;F(1,arguments);var d=tn(),l=X(null!==(t=null!==(r=null!==(o=null!==(i=null==e?void 0:e.weekStartsOn)&&void 0!==i?i:null==e||null===(a=e.locale)||void 0===a||null===(s=a.options)||void 0===s?void 0:s.weekStartsOn)&&void 0!==o?o:d.weekStartsOn)&&void 0!==r?r:null===(A=d.locale)||void 0===A||null===(c=A.options)||void 0===c?void 0:c.weekStartsOn)&&void 0!==t?t:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var p=G(n),u=p.getUTCDay(),m=(u<l?7:0)+u-l;return p.setUTCDate(p.getUTCDate()-m),p.setUTCHours(0,0,0,0),p}function on(n,e){var t,r,o,i,a,s,A,c;F(1,arguments);var d=G(n),l=d.getUTCFullYear(),p=tn(),u=X(null!==(t=null!==(r=null!==(o=null!==(i=null==e?void 0:e.firstWeekContainsDate)&&void 0!==i?i:null==e||null===(a=e.locale)||void 0===a||null===(s=a.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==o?o:p.firstWeekContainsDate)&&void 0!==r?r:null===(A=p.locale)||void 0===A||null===(c=A.options)||void 0===c?void 0:c.firstWeekContainsDate)&&void 0!==t?t:1);if(!(u>=1&&u<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var m=new Date(0);m.setUTCFullYear(l+1,0,u),m.setUTCHours(0,0,0,0);var f=rn(m,e),h=new Date(0);h.setUTCFullYear(l,0,u),h.setUTCHours(0,0,0,0);var C=rn(h,e);return d.getTime()>=f.getTime()?l+1:d.getTime()>=C.getTime()?l:l-1}function an(n,e){var t,r,o,i,a,s,A,c;F(1,arguments);var d=tn(),l=X(null!==(t=null!==(r=null!==(o=null!==(i=null==e?void 0:e.firstWeekContainsDate)&&void 0!==i?i:null==e||null===(a=e.locale)||void 0===a||null===(s=a.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==o?o:d.firstWeekContainsDate)&&void 0!==r?r:null===(A=d.locale)||void 0===A||null===(c=A.options)||void 0===c?void 0:c.firstWeekContainsDate)&&void 0!==t?t:1),p=on(n,e),u=new Date(0);u.setUTCFullYear(p,0,l),u.setUTCHours(0,0,0,0);var m=rn(u,e);return m}var sn=6048e5;function An(n,e){for(var t=n<0?"-":"",r=Math.abs(n).toString();r.length<e;)r="0"+r;return t+r}const cn=function(n,e){var t=n.getUTCFullYear(),r=t>0?t:1-t;return An("yy"===e?r%100:r,e.length)},dn=function(n,e){var t=n.getUTCMonth();return"M"===e?String(t+1):An(t+1,2)},ln=function(n,e){return An(n.getUTCDate(),e.length)},pn=function(n,e){return An(n.getUTCHours()%12||12,e.length)},un=function(n,e){return An(n.getUTCHours(),e.length)},mn=function(n,e){return An(n.getUTCMinutes(),e.length)},fn=function(n,e){return An(n.getUTCSeconds(),e.length)},hn=function(n,e){var t=e.length,r=n.getUTCMilliseconds();return An(Math.floor(r*Math.pow(10,t-3)),e.length)};var Cn={G:function(n,e,t){var r=n.getUTCFullYear()>0?1:0;switch(e){case"G":case"GG":case"GGG":return t.era(r,{width:"abbreviated"});case"GGGGG":return t.era(r,{width:"narrow"});default:return t.era(r,{width:"wide"})}},y:function(n,e,t){if("yo"===e){var r=n.getUTCFullYear(),o=r>0?r:1-r;return t.ordinalNumber(o,{unit:"year"})}return cn(n,e)},Y:function(n,e,t,r){var o=on(n,r),i=o>0?o:1-o;return"YY"===e?An(i%100,2):"Yo"===e?t.ordinalNumber(i,{unit:"year"}):An(i,e.length)},R:function(n,e){return An(_(n),e.length)},u:function(n,e){return An(n.getUTCFullYear(),e.length)},Q:function(n,e,t){var r=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"Q":return String(r);case"QQ":return An(r,2);case"Qo":return t.ordinalNumber(r,{unit:"quarter"});case"QQQ":return t.quarter(r,{width:"abbreviated",context:"formatting"});case"QQQQQ":return t.quarter(r,{width:"narrow",context:"formatting"});default:return t.quarter(r,{width:"wide",context:"formatting"})}},q:function(n,e,t){var r=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"q":return String(r);case"qq":return An(r,2);case"qo":return t.ordinalNumber(r,{unit:"quarter"});case"qqq":return t.quarter(r,{width:"abbreviated",context:"standalone"});case"qqqqq":return t.quarter(r,{width:"narrow",context:"standalone"});default:return t.quarter(r,{width:"wide",context:"standalone"})}},M:function(n,e,t){var r=n.getUTCMonth();switch(e){case"M":case"MM":return dn(n,e);case"Mo":return t.ordinalNumber(r+1,{unit:"month"});case"MMM":return t.month(r,{width:"abbreviated",context:"formatting"});case"MMMMM":return t.month(r,{width:"narrow",context:"formatting"});default:return t.month(r,{width:"wide",context:"formatting"})}},L:function(n,e,t){var r=n.getUTCMonth();switch(e){case"L":return String(r+1);case"LL":return An(r+1,2);case"Lo":return t.ordinalNumber(r+1,{unit:"month"});case"LLL":return t.month(r,{width:"abbreviated",context:"standalone"});case"LLLLL":return t.month(r,{width:"narrow",context:"standalone"});default:return t.month(r,{width:"wide",context:"standalone"})}},w:function(n,e,t,r){var o=function(n,e){F(1,arguments);var t=G(n),r=rn(t,e).getTime()-an(t,e).getTime();return Math.round(r/sn)+1}(n,r);return"wo"===e?t.ordinalNumber(o,{unit:"week"}):An(o,e.length)},I:function(n,e,t){var r=function(n){F(1,arguments);var e=G(n),t=$(e).getTime()-K(e).getTime();return Math.round(t/nn)+1}(n);return"Io"===e?t.ordinalNumber(r,{unit:"week"}):An(r,e.length)},d:function(n,e,t){return"do"===e?t.ordinalNumber(n.getUTCDate(),{unit:"date"}):ln(n,e)},D:function(n,e,t){var r=function(n){F(1,arguments);var e=G(n),t=e.getTime();e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0);var r=e.getTime(),o=t-r;return Math.floor(o/J)+1}(n);return"Do"===e?t.ordinalNumber(r,{unit:"dayOfYear"}):An(r,e.length)},E:function(n,e,t){var r=n.getUTCDay();switch(e){case"E":case"EE":case"EEE":return t.day(r,{width:"abbreviated",context:"formatting"});case"EEEEE":return t.day(r,{width:"narrow",context:"formatting"});case"EEEEEE":return t.day(r,{width:"short",context:"formatting"});default:return t.day(r,{width:"wide",context:"formatting"})}},e:function(n,e,t,r){var o=n.getUTCDay(),i=(o-r.weekStartsOn+8)%7||7;switch(e){case"e":return String(i);case"ee":return An(i,2);case"eo":return t.ordinalNumber(i,{unit:"day"});case"eee":return t.day(o,{width:"abbreviated",context:"formatting"});case"eeeee":return t.day(o,{width:"narrow",context:"formatting"});case"eeeeee":return t.day(o,{width:"short",context:"formatting"});default:return t.day(o,{width:"wide",context:"formatting"})}},c:function(n,e,t,r){var o=n.getUTCDay(),i=(o-r.weekStartsOn+8)%7||7;switch(e){case"c":return String(i);case"cc":return An(i,e.length);case"co":return t.ordinalNumber(i,{unit:"day"});case"ccc":return t.day(o,{width:"abbreviated",context:"standalone"});case"ccccc":return t.day(o,{width:"narrow",context:"standalone"});case"cccccc":return t.day(o,{width:"short",context:"standalone"});default:return t.day(o,{width:"wide",context:"standalone"})}},i:function(n,e,t){var r=n.getUTCDay(),o=0===r?7:r;switch(e){case"i":return String(o);case"ii":return An(o,e.length);case"io":return t.ordinalNumber(o,{unit:"day"});case"iii":return t.day(r,{width:"abbreviated",context:"formatting"});case"iiiii":return t.day(r,{width:"narrow",context:"formatting"});case"iiiiii":return t.day(r,{width:"short",context:"formatting"});default:return t.day(r,{width:"wide",context:"formatting"})}},a:function(n,e,t){var r=n.getUTCHours()/12>=1?"pm":"am";switch(e){case"a":case"aa":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"aaa":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return t.dayPeriod(r,{width:"narrow",context:"formatting"});default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},b:function(n,e,t){var r,o=n.getUTCHours();switch(r=12===o?"noon":0===o?"midnight":o/12>=1?"pm":"am",e){case"b":case"bb":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"bbb":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return t.dayPeriod(r,{width:"narrow",context:"formatting"});default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},B:function(n,e,t){var r,o=n.getUTCHours();switch(r=o>=17?"evening":o>=12?"afternoon":o>=4?"morning":"night",e){case"B":case"BB":case"BBB":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"BBBBB":return t.dayPeriod(r,{width:"narrow",context:"formatting"});default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},h:function(n,e,t){if("ho"===e){var r=n.getUTCHours()%12;return 0===r&&(r=12),t.ordinalNumber(r,{unit:"hour"})}return pn(n,e)},H:function(n,e,t){return"Ho"===e?t.ordinalNumber(n.getUTCHours(),{unit:"hour"}):un(n,e)},K:function(n,e,t){var r=n.getUTCHours()%12;return"Ko"===e?t.ordinalNumber(r,{unit:"hour"}):An(r,e.length)},k:function(n,e,t){var r=n.getUTCHours();return 0===r&&(r=24),"ko"===e?t.ordinalNumber(r,{unit:"hour"}):An(r,e.length)},m:function(n,e,t){return"mo"===e?t.ordinalNumber(n.getUTCMinutes(),{unit:"minute"}):mn(n,e)},s:function(n,e,t){return"so"===e?t.ordinalNumber(n.getUTCSeconds(),{unit:"second"}):fn(n,e)},S:function(n,e){return hn(n,e)},X:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();if(0===o)return"Z";switch(e){case"X":return En(o);case"XXXX":case"XX":return bn(o);default:return bn(o,":")}},x:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();switch(e){case"x":return En(o);case"xxxx":case"xx":return bn(o);default:return bn(o,":")}},O:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();switch(e){case"O":case"OO":case"OOO":return"GMT"+gn(o,":");default:return"GMT"+bn(o,":")}},z:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();switch(e){case"z":case"zz":case"zzz":return"GMT"+gn(o,":");default:return"GMT"+bn(o,":")}},t:function(n,e,t,r){var o=r._originalDate||n;return An(Math.floor(o.getTime()/1e3),e.length)},T:function(n,e,t,r){return An((r._originalDate||n).getTime(),e.length)}};function gn(n,e){var t=n>0?"-":"+",r=Math.abs(n),o=Math.floor(r/60),i=r%60;if(0===i)return t+String(o);var a=e||"";return t+String(o)+a+An(i,2)}function En(n,e){return n%60==0?(n>0?"-":"+")+An(Math.abs(n)/60,2):bn(n,e)}function bn(n,e){var t=e||"",r=n>0?"-":"+",o=Math.abs(n);return r+An(Math.floor(o/60),2)+t+An(o%60,2)}const xn=Cn;var vn=function(n,e){switch(n){case"P":return e.date({width:"short"});case"PP":return e.date({width:"medium"});case"PPP":return e.date({width:"long"});default:return e.date({width:"full"})}},Bn=function(n,e){switch(n){case"p":return e.time({width:"short"});case"pp":return e.time({width:"medium"});case"ppp":return e.time({width:"long"});default:return e.time({width:"full"})}};const wn={p:Bn,P:function(n,e){var t,r=n.match(/(P+)(p+)?/)||[],o=r[1],i=r[2];if(!i)return vn(n,e);switch(o){case"P":t=e.dateTime({width:"short"});break;case"PP":t=e.dateTime({width:"medium"});break;case"PPP":t=e.dateTime({width:"long"});break;default:t=e.dateTime({width:"full"})}return t.replace("{{date}}",vn(o,e)).replace("{{time}}",Bn(i,e))}};function yn(n){var e=new Date(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()));return e.setUTCFullYear(n.getFullYear()),n.getTime()-e.getTime()}var kn=["D","DD"],jn=["YY","YYYY"];function Tn(n){return-1!==kn.indexOf(n)}function Ln(n){return-1!==jn.indexOf(n)}function Sn(n,e,t){if("YYYY"===n)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("YY"===n)throw new RangeError("Use `yy` instead of `YY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("D"===n)throw new RangeError("Use `d` instead of `D` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("DD"===n)throw new RangeError("Use `dd` instead of `DD` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"))}var Yn={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function Dn(n){return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.width?String(e.width):n.defaultWidth,r=n.formats[t]||n.formats[n.defaultWidth];return r}}const Mn={date:Dn({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:Dn({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:Dn({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var Pn={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function In(n){return function(e,t){var r;if("formatting"===(null!=t&&t.context?String(t.context):"standalone")&&n.formattingValues){var o=n.defaultFormattingWidth||n.defaultWidth,i=null!=t&&t.width?String(t.width):o;r=n.formattingValues[i]||n.formattingValues[o]}else{var a=n.defaultWidth,s=null!=t&&t.width?String(t.width):n.defaultWidth;r=n.values[s]||n.values[a]}return r[n.argumentCallback?n.argumentCallback(e):e]}}const Wn={ordinalNumber:function(n,e){var t=Number(n),r=t%100;if(r>20||r<10)switch(r%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"},era:In({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:In({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(n){return n-1}}),month:In({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:In({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:In({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function zn(n){return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.width,o=r&&n.matchPatterns[r]||n.matchPatterns[n.defaultMatchWidth],i=e.match(o);if(!i)return null;var a,s=i[0],A=r&&n.parsePatterns[r]||n.parsePatterns[n.defaultParseWidth],c=Array.isArray(A)?Zn(A,(function(n){return n.test(s)})):qn(A,(function(n){return n.test(s)}));a=n.valueCallback?n.valueCallback(c):c,a=t.valueCallback?t.valueCallback(a):a;var d=e.slice(s.length);return{value:a,rest:d}}}function qn(n,e){for(var t in n)if(n.hasOwnProperty(t)&&e(n[t]))return t}function Zn(n,e){for(var t=0;t<n.length;t++)if(e(n[t]))return t}var Un,Fn={ordinalNumber:(Un={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(n){return parseInt(n,10)}},function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=n.match(Un.matchPattern);if(!t)return null;var r=t[0],o=n.match(Un.parsePattern);if(!o)return null;var i=Un.valueCallback?Un.valueCallback(o[0]):o[0];i=e.valueCallback?e.valueCallback(i):i;var a=n.slice(r.length);return{value:i,rest:a}}),era:zn({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:zn({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(n){return n+1}}),month:zn({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:zn({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:zn({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const On={code:"en-US",formatDistance:function(n,e,t){var r,o=Yn[n];return r="string"==typeof o?o:1===e?o.one:o.other.replace("{{count}}",e.toString()),null!=t&&t.addSuffix?t.comparison&&t.comparison>0?"in "+r:r+" ago":r},formatLong:Mn,formatRelative:function(n,e,t,r){return Pn[n]},localize:Wn,match:Fn,options:{weekStartsOn:0,firstWeekContainsDate:1}};var Nn=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,Rn=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,Gn=/^'([^]*?)'?$/,Hn=/''/g,Xn=/[a-zA-Z]/;function Qn(n){var e=n.match(Gn);return e?e[1].replace(Hn,"'"):n}const Vn=(n,e,t,r,o,i)=>{const a=i||v(e);return{id:a,getChecked:()=>n,getTitle:()=>e,getNotes:()=>t,getDueDate:()=>r,getPriority:()=>o,getId:()=>a,editChecked:()=>{n=!n},editTitle:n=>{e=n},editNotes:n=>{t=n},editDueDate:n=>{r=n},editPriority:n=>{o=n}}},Jn=(n,e,t)=>{const r=document.createElement("div"),o=document.createElement("div"),i=document.createElement("div"),a=document.createElement("div"),s=document.createElement("p"),A=document.createElement("sup"),c=document.createElement("p"),d=document.createElement("img"),l=document.createElement("img"),p=document.createElement("img"),u=$n(n.getDueDate());return r.classList.add("item-container","flex"),r.dataset.id=n.getId(),r.dataset.projectId=t,r.style.borderLeft=`5px solid var(--${n.getPriority()}-prio)`,r.addEventListener("pointerup",(e=>{e.stopPropagation(),T((({getPriority:n,getDueDate:e,getTitle:t,getNotes:r})=>{const o=document.createElement("div"),i=document.createElement("div"),a=document.createElement("div"),s=document.createElement("div"),A=document.createElement("p"),c=document.createElement("p"),d=document.createElement("p"),l=document.createElement("button");return o.classList.add("details-container"),i.classList.add("details-top-container","flex"),a.classList.add("details-bottom-container"),s.classList.add("details-priority","flex","center"),"low"===n()?s.classList.add("details-priority-l"):"medium"===n()?s.classList.add("details-priority-m"):s.classList.add("details-priority-h"),s.innerText=n()[0].toUpperCase()+n().slice(1),A.classList.add("details-due-date","flex","center"),A.innerText=`Due: ${e()}`,c.classList.add("details-title","flex","center"),c.innerText=t(),d.classList.add("details-notes"),d.innerText=r()||"No Notes",l.classList.add("details-close-btn"),l.innerText="CLOSE",l.addEventListener("pointerup",(()=>{o.remove(),k().classList.remove("disabled")})),i.append(s,A),a.append(c,d,l),o.append(i,a),o})(n)),k().classList.add("disabled")})),o.classList.add("item-left-container","flex","center"),i.classList.add("item-right-container","flex","center"),a.classList.add("item-checkbox","flex","center"),n.getChecked()&&(a.classList.add("checked"),r.classList.add("no-pointer-events")),a.addEventListener("pointerup",(t=>{t.stopPropagation(),a.classList.toggle("checked"),r.classList.toggle("no-pointer-events"),n.editChecked(),y(e)})),s.classList.add("item-title"),s.innerText=n.getTitle(),A.innerText=u.slice(-6,-4),c.classList.add("item-due-date"),c.append(u.slice(0,-6),A,u.slice(-4)),d.classList.add("item-edit-icon"),d.title="Edit Todo",d.src=Y,d.addEventListener("pointerup",(t=>{t.stopPropagation();const o=document.querySelector(".navbar-container[data-mode]").dataset.mode,i="null"===r.dataset.projectId?null:r.dataset.projectId;T(me(e,o,"edit-todo",n,null,i)),k().classList.add("disabled")})),l.classList.add("item-move-icon"),l.title="Move to Project",l.src=D,l.addEventListener("pointerup",(t=>{t.stopPropagation(),T(((n,e)=>{const t=document.createElement("div"),r=document.createElement("p"),o=document.createElement("div"),i=document.createElement("div"),a=document.createElement("button"),s=document.createElement("button");t.classList.add("project-selector-container"),r.classList.add("project-selector-title","flex","center"),r.innerText="Add To Project",o.classList.add("project-selector-projects-box","flex-column"),i.classList.add("project-selector-btns-container","flex","center"),a.classList.add("project-selector-cancel-btn"),a.innerText="CANCEL",a.addEventListener("pointerup",(()=>{t.remove(),k().classList.remove("disabled")})),s.classList.add("project-selector-ok-btn"),s.innerText="OK",s.addEventListener("pointerup",(()=>{const r=Array.from(document.querySelectorAll(".project-option.selected"));if(!r.length)return k().classList.remove("disabled"),void t.remove();const o=r.map((n=>n.dataset.id));console.log("ids:",o),o.forEach((t=>{n.getProjectsArr().forEach((n=>{t===n.getId()&&n.pushToTodosArr(e)}))})),y(n),k().classList.remove("disabled"),t.remove()}));const A=n.getProjectsArr().filter((n=>n.getTodosArr().every((n=>n.getId()!==e.getId())))),c=A.map((n=>(n=>{const e=document.createElement("div"),t=document.createElement("p"),r=document.createElement("div");return e.classList.add("project-option","flex","center"),e.dataset.id=n.getId(),e.addEventListener("pointerup",(()=>{e.classList.toggle("selected")})),t.classList.add("project-option-title"),t.innerText=n.getTitle(),r.classList.add("project-option-checkbox"),e.append(t,r),e})(n)));return c.length?o.append(...c):o.append("No Projects"),i.append(a,s),t.append(r,o,i),t})(e,n)),k().classList.add("disabled")})),p.classList.add("item-trash-icon"),p.title="Delete Todo",p.src=M,p.addEventListener("pointerup",(t=>{t.stopPropagation(),T(q(e,"todo",n,r)),k().classList.add("disabled")})),o.append(a,s),i.append(c,d,l,p),r.append(o,i),r},$n=n=>{const[e,t,r]=n.split("-"),o=Number(t)-1;return function(n,e,t){var r,o,i,a,s,A,c,d,l,p,u,m,f,h,C,g,E,b;F(2,arguments);var x=String(e),v=tn(),B=null!==(r=null!==(o=null==t?void 0:t.locale)&&void 0!==o?o:v.locale)&&void 0!==r?r:On,w=X(null!==(i=null!==(a=null!==(s=null!==(A=null==t?void 0:t.firstWeekContainsDate)&&void 0!==A?A:null==t||null===(c=t.locale)||void 0===c||null===(d=c.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==s?s:v.firstWeekContainsDate)&&void 0!==a?a:null===(l=v.locale)||void 0===l||null===(p=l.options)||void 0===p?void 0:p.firstWeekContainsDate)&&void 0!==i?i:1);if(!(w>=1&&w<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var y=X(null!==(u=null!==(m=null!==(f=null!==(h=null==t?void 0:t.weekStartsOn)&&void 0!==h?h:null==t||null===(C=t.locale)||void 0===C||null===(g=C.options)||void 0===g?void 0:g.weekStartsOn)&&void 0!==f?f:v.weekStartsOn)&&void 0!==m?m:null===(E=v.locale)||void 0===E||null===(b=E.options)||void 0===b?void 0:b.weekStartsOn)&&void 0!==u?u:0);if(!(y>=0&&y<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!B.localize)throw new RangeError("locale must contain localize property");if(!B.formatLong)throw new RangeError("locale must contain formatLong property");var k=G(n);if(!H(k))throw new RangeError("Invalid time value");var j=yn(k),T=V(k,j),L={firstWeekContainsDate:w,weekStartsOn:y,locale:B,_originalDate:k};return x.match(Rn).map((function(n){var e=n[0];return"p"===e||"P"===e?(0,wn[e])(n,B.formatLong):n})).join("").match(Nn).map((function(r){if("''"===r)return"'";var o=r[0];if("'"===o)return Qn(r);var i=xn[o];if(i)return null!=t&&t.useAdditionalWeekYearTokens||!Ln(r)||Sn(r,e,String(n)),null!=t&&t.useAdditionalDayOfYearTokens||!Tn(r)||Sn(r,e,String(n)),i(T,r,B.localize,L);if(o.match(Xn))throw new RangeError("Format string contains an unescaped latin alphabet character `"+o+"`");return r})).join("")}(new Date(e,o,r),"do MMM")};var _n=t(735),Kn={};Kn.styleTagTransform=p(),Kn.setAttributes=A(),Kn.insert=a().bind(null,"head"),Kn.domAPI=o(),Kn.insertStyleElement=d(),e()(_n.Z,Kn),_n.Z&&_n.Z.locals&&_n.Z.locals;const ne=t.p+"5c04c572798e520c3444.svg",ee=t.p+"1f907a58b0cc1eaf0caf.svg",te=t.p+"ba8ee4721ed25900c034.svg";var re=t(417),oe={};function ie(n,e){var t,r,o,i,a,s,A,c;F(1,arguments);var d=tn(),l=X(null!==(t=null!==(r=null!==(o=null!==(i=null==e?void 0:e.weekStartsOn)&&void 0!==i?i:null==e||null===(a=e.locale)||void 0===a||null===(s=a.options)||void 0===s?void 0:s.weekStartsOn)&&void 0!==o?o:d.weekStartsOn)&&void 0!==r?r:null===(A=d.locale)||void 0===A||null===(c=A.options)||void 0===c?void 0:c.weekStartsOn)&&void 0!==t?t:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var p=G(n),u=p.getDay(),m=(u<l?7:0)+u-l;return p.setDate(p.getDate()-m),p.setHours(0,0,0,0),p}function ae(n,e,t){F(2,arguments);var r=ie(n,t),o=ie(e,t);return r.getTime()===o.getTime()}function se(n,e){return F(1,arguments),ae(n,Date.now(),e)}oe.styleTagTransform=p(),oe.setAttributes=A(),oe.insert=a().bind(null,"head"),oe.domAPI=o(),oe.insertStyleElement=d(),e()(re.Z,oe),re.Z&&re.Z.locals&&re.Z.locals;const Ae=(n,e,t,r)=>{const o=document.createElement("div");if(o.classList.add("holder-box-container","flex-column"),j()&&j().lastElementChild.remove(),!t.length&&"projects"===e)return o.append("No Projects"),o;if(!t.length)return o.append("No Todos"),o;if("todos"===e){const e=ce(t);o.append(...e.map((e=>Jn(e,n,r))))}else if("projects"===e)o.append(...t.map((e=>ue(e,n))));else if("day"===e){const e=de(t);o.append(...e.map((e=>Jn(e,n,r))))}else if("week"===e){const e=le(t),i=ce(e);o.append(...i.map((e=>Jn(e,n,r))))}return o},ce=n=>n.sort(((n,e)=>function(n,e){F(2,arguments);var t=G(n),r=G(e),o=t.getTime()-r.getTime();return o<0?-1:o>0?1:o}(new Date(n.getDueDate()),new Date(e.getDueDate())))),de=n=>{const e=B();return n.filter((n=>n.getDueDate()===e))},le=n=>n.filter((n=>{const e=`${n.getDueDate()}T00:00:00`;return se(new Date(e),{weekStartsOn:1})})),pe=(n,e,t)=>{const r=e||v(n);let o=t||[];return{id:r,getTitle:()=>n,getTodosArr:()=>o,getId:()=>r,editTitle:e=>{n=e},pushToTodosArr:n=>{o.push(n)},removeFromTodosArr:n=>{o=o.filter((e=>e.id!==n))}}},ue=(n,e)=>{const t=document.createElement("div"),r=document.createElement("p"),o=document.createElement("img"),i=document.createElement("img"),a=document.createElement("img");return t.classList.add("project-container","flex","center"),t.dataset.id=n.getId(),t.addEventListener("pointerup",(r=>{r.stopPropagation();const o=n.getTodosArr(),i=t.dataset.id;console.log("todosArr:",o),j().append(Ae(e,"todos",o,i))})),r.classList.add("project-title"),r.innerText=n.getTitle(),o.classList.add("project-add-icon"),o.src=ne,o.addEventListener("pointerup",(t=>{t.stopPropagation(),T(me(e,null,"add-to-project",null,n)),k().classList.add("disabled")})),i.classList.add("project-edit-icon"),i.src=ee,i.addEventListener("pointerup",(t=>{t.stopPropagation();const r=document.querySelector(".navbar-container[data-mode]").dataset.mode;T(me(e,r,"edit-project",null,n)),k().classList.add("disabled")})),a.classList.add("project-trash-icon"),a.src=te,a.addEventListener("pointerup",(r=>{r.stopPropagation(),T(q(e,"project",n,t)),k().classList.add("disabled")})),t.append(r,o,i,a),t},me=(n,e,t,r,o,i)=>{const a=document.createElement("div"),s=document.createElement("div"),A=document.createElement("div"),c=document.createElement("button"),d=document.createElement("button");return a.classList.add("box","flex","center"),s.classList.add("form-container"),A.classList.add("form-top-container","flex","center"),c.classList.add("form-todo-btn"),c.innerText="edit-todo"===t?"Edit Todo":"New Todo",d.classList.add("form-project-btn"),d.innerText="edit-project"===t?"Edit Project":"New Project","edit-todo"===t?(c.classList.add("border-btm-w","no-pointer-events"),A.append(c),s.append(A,fe(n,e,t,a,r,null,i)),a.append(s)):"edit-project"===t?(s.classList.add("project-fields-height"),d.classList.add("border-btm-w","no-pointer-events"),A.append(d),s.append(A,he(n,e,t,a,o)),a.append(s)):"add-to-project"===t?(c.classList.add("border-btm-w","no-pointer-events"),A.append(c),s.append(A,fe(n,e,t,a,null,o,null)),a.append(s)):(c.classList.add("border-btm-b"),A.append(c,d),s.append(A,fe(n,e,t,a,null,null,null)),a.append(s),c.addEventListener("pointerup",(()=>{s.classList.remove("project-fields-height"),c.classList.add("border-btm-b"),d.classList.remove("border-btm-b"),s.lastElementChild.remove(),s.append(fe(n,e,t,a,null,null,null)),a.append(s)})),d.addEventListener("pointerup",(()=>{s.classList.add("project-fields-height"),c.classList.remove("border-btm-b"),d.classList.add("border-btm-b"),s.lastElementChild.remove(),s.append(he(n,e,t,a,null)),a.append(s)}))),a},fe=(n,e,t,r,o,i,a)=>{const s=document.createElement("div"),A=document.createElement("form"),c=document.createElement("textarea"),d=document.createElement("textarea"),l=document.createElement("div"),p=document.createElement("label"),u=document.createElement("input"),m=document.createElement("div"),f=document.createElement("p"),h=document.createElement("div"),C=document.createElement("input"),g=document.createElement("label"),E=document.createElement("input"),b=document.createElement("label"),v=document.createElement("input"),B=document.createElement("label");return s.classList.add("form-fields-container","flex-column"),A.classList.add("form-middle-container","flex-column"),A.id="form",A.addEventListener("submit",(s=>{s.preventDefault(),"add"===t?Ee(n,e):"edit-todo"===t?be(n,e,o,a):"add-to-project"===t&&ke(n,i),k().classList.remove("disabled"),r.remove()})),c.classList.add("form-title-input"),c.placeholder="Enter Title",c.innerText=o?o.getTitle():"",c.setAttribute("maxlength","50"),c.required=!0,d.classList.add("form-notes-input"),d.placeholder="Enter Notes",d.innerText=o?o.getNotes():"",d.setAttribute("maxlength","300"),l.classList.add("form-due-date-container","flex-column","center"),p.classList.add("form-due-date-label"),p.innerText="Due Date",u.classList.add("form-due-date-input"),u.type="date",u.value=o?o.getDueDate():"22-11-11",u.required=!0,m.classList.add("form-priority-container","flex-column","center"),f.classList.add("form-priority-title"),f.innerText="Priority",h.classList.add("form-priority-options-container","flex"),x(C,{type:"radio",id:"l-prio",value:"low",name:"priority",required:!0,checked:!(!o||"low"!==o.getPriority())}),C.classList.add("form-priority-radio","hidden"),g.setAttribute("for","l-prio"),g.innerText="Low",g.classList.add("form-priority-label","l-prio-label"),x(E,{type:"radio",id:"m-prio",value:"medium",name:"priority",required:!0,checked:!(!o||"medium"!==o.getPriority())}),E.classList.add("form-priority-radio","hidden"),b.setAttribute("for","m-prio"),b.innerText="Medium",b.classList.add("form-priority-label","m-prio-label"),x(v,{type:"radio",id:"h-prio",value:"high",name:"priority",required:!0,checked:!(!o||"high"!==o.getPriority())}),v.classList.add("form-priority-radio","hidden"),B.setAttribute("for","h-prio"),B.innerText="High",B.classList.add("form-priority-label","h-prio-label"),s.append(A,Ce(r)),A.append(c,d,l,m),l.append(p,u),m.append(f,h),h.append(C,g,E,b,v,B),s},he=(n,e,t,r,o)=>{const i=document.createElement("div"),a=document.createElement("form"),s=document.createElement("textarea");return i.classList.add("form-fields-container","flex-column"),a.classList.add("form-middle-container","flex-column"),a.id="form",a.addEventListener("submit",(i=>{i.preventDefault(),"add"===t?xe(n,e):"edit-project"===t&&ve(n,e,o),k().classList.remove("disabled"),r.remove()})),s.classList.add("form-title-input"),s.placeholder="Enter Title",s.innerText=o?o.getTitle():"",s.setAttribute("maxlength","50"),s.required=!0,i.append(a,Ce(r)),a.append(s),i},Ce=n=>{const e=document.createElement("div"),t=document.createElement("button"),r=document.createElement("button");return e.classList.add("form-bottom-container","flex","center"),t.classList.add("form-cancel-btn"),t.innerText="CANCEL",t.addEventListener("pointerup",(()=>{n.remove(),k().classList.remove("disabled")})),r.classList.add("form-ok-btn"),r.innerText="OK",r.setAttribute("form","form"),e.append(t,r),e},ge=()=>{const n=document.querySelector(".form-title-input"),e=document.querySelector(".form-notes-input"),t=document.querySelector(".form-due-date-input"),r=document.querySelector("input[name='priority']:checked");return console.log({titleVal:n.value,notesVal:e?e.value:null,dueDateVal:t?t.value:null,priorityVal:r?r.value:null}),{titleVal:n.value,notesVal:e?e.value:null,dueDateVal:t?t.value:null,priorityVal:r?r.value:null}},Ee=(n,e)=>{const t=je(),{isDueToday:r,isDueThisWeek:o}=Be(t);n.pushToTodosArr(t),y(n);const i=n.getTodosArr();we(n,e,i,r,o,null)},be=(n,e,t,r)=>{const{titleVal:o,notesVal:i,dueDateVal:a,priorityVal:s}=ge();t.editTitle(o),t.editNotes(i),t.editDueDate(a),t.editPriority(s),n.updateTodosArr(t),y(n);const{isDueToday:A,isDueThisWeek:c}=Be(t);if(r){const t=n.getProjectsArr().filter((n=>n.getId()===r))[0].getTodosArr();we(n,e,t,null,null,r)}else{const t=n.getTodosArr();we(n,e,t,A,c,null)}},xe=(n,e)=>{const{titleVal:t}=ge(),r=pe(t,null,null);n.pushToProjectsArr(r),y(n);const o=n.getProjectsArr();ye(n,e,o)},ve=(n,e,t)=>{const{titleVal:r}=ge();t.editTitle(r),n.updateProjectsArr(t),y(n);const o=n.getProjectsArr();ye(n,e,o)},Be=n=>{const e=B(),t=`${n.getDueDate()}T00:00:00`;return{isDueToday:n.getDueDate()===e,isDueThisWeek:se(new Date(t),{weekStartsOn:1})}},we=(n,e,t,r,o,i)=>{"todos"===e?j().append(Ae(n,"todos",t,i)):"day"===e&&r?j().append(Ae(n,"day",t,i)):"week"===e&&o?j().append(Ae(n,"week",t,i)):"projects"===e&&j().append(Ae(n,"todos",t,i))},ye=(n,e,t)=>{"projects"===e&&j().append(Ae(n,"projects",t))},ke=(n,e)=>{const t=je();e.pushToTodosArr(t),n.pushToTodosArr(t),n.updateProjectsArr(e),y(n)},je=()=>{const{titleVal:n,notesVal:e,dueDateVal:t,priorityVal:r}=ge();return Vn(!1,n,e,t,r,null)},Te=n=>n.map((n=>{const{checked:e,title:t,notes:r,dueDate:o,priority:i,id:a}=n;return Vn(e,t,r,o,i,a)}));var Le=t(424),Se={};Se.styleTagTransform=p(),Se.setAttributes=A(),Se.insert=a().bind(null,"head"),Se.domAPI=o(),Se.insertStyleElement=d(),e()(Le.Z,Se),Le.Z&&Le.Z.locals&&Le.Z.locals,document.querySelector("#root").append((()=>{const n=document.createElement("div"),e=(()=>{let n=[],e=[];return{getTodosArr:()=>n,getProjectsArr:()=>e,initializeTodosArr:e=>{n=e},initializeProjectsArr:n=>{e=n},pushToTodosArr:e=>{n.push(e)},removeFromTodosArr:e=>{n=n.filter((n=>n.id!==e))},updateTodosArr:e=>{n=n.map((n=>n.getId()===e.getId()?e:n))},pushToProjectsArr:n=>{e.push(n)},removeFromProjectsArr:n=>{e=e.filter((e=>e.id!==n))},updateProjectsArr:n=>{e=e.map((e=>e.getId()===n.getId()?n:e))}}})();return(n=>{localStorage.todosData?n.initializeTodosArr(Te(JSON.parse(localStorage.todosData))):n.initializeTodosArr([]),localStorage.projectsData?n.initializeProjectsArr(JSON.parse(localStorage.projectsData).map((n=>{const{title:e,id:t,todosData:r}=n,o=Te(r);return pe(e,t,o)}))):n.initializeProjectsArr([])})(e),onbeforeunload=y(e),n.classList.add("app-container","flex-column","center"),n.append((n=>{const e=document.createElement("div"),t=document.createElement("span"),r=document.createElement("h1");return e.classList.add("content-box-container"),t.classList.add("material-symbols-outlined"),t.append("checklist"),r.classList.add("content-box-title","flex"),r.append(t,"To-Do"),e.append(r,(n=>{let e="todos";const t=document.createElement("div"),r=document.createElement("div"),o=document.createElement("div"),i=document.createElement("div"),a=document.createElement("div"),s=document.createElement("div");function A(n){e=n,t.dataset.mode=e}function c(n){document.querySelectorAll(".navbar-btn-grp-1").forEach((n=>{n.classList.remove("navbar-btn-selected")})),n.target.classList.add("navbar-btn-selected")}function d(){window.innerWidth<650?(r.innerText="T",o.innerText="P",i.innerText="D",a.innerText="W"):(r.innerText="Todos",o.innerText="Projects",i.innerText="Day",a.innerText="Week")}return t.classList.add("navbar-container","flex"),t.dataset.mode=e,r.classList.add("navbar-btn","navbar-btn-grp-1","navbar-todos-btn","flex","navbar-btn-selected"),r.addEventListener("pointerup",(e=>{c(e),A("todos");const t=n.getTodosArr();console.log("todosArr:",t),j().append(Ae(n,"todos",t,null))})),o.classList.add("navbar-btn","navbar-btn-grp-1","navbar-projects-btn","flex"),o.addEventListener("pointerup",(e=>{c(e),A("projects");const t=n.getProjectsArr();console.log("projectsArr:",t),j().append(Ae(n,"projects",t))})),i.classList.add("navbar-btn","navbar-btn-grp-1","navbar-day-btn","flex"),i.addEventListener("pointerup",(t=>{c(t),A("day");const r=n.getTodosArr();console.log("todosArr:",r),j().append(Ae(n,e,r,null))})),a.classList.add("navbar-btn","navbar-btn-grp-1","navbar-week-btn","flex"),a.addEventListener("pointerup",(t=>{c(t),A("week");const r=n.getTodosArr();console.log("todosArr:",r),j().append(Ae(n,e,r,null))})),s.classList.add("navbar-btn","navbar-btn-grp-2","navbar-plus-btn","flex"),s.title="Add New",s.innerText="+",s.addEventListener("pointerup",(()=>{T(me(n,e,"add",null,null,null)),k().classList.add("disabled")})),d(),window.onresize=d,t.append(r,o,i,a,s),t})(n),Ae(n,"todos",n.getTodosArr(),null)),e})(e)),n})())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VUFBWSxJQUNwQjZhLEVBQVE1YSxpQkFBaUIsYUFBYSxLQUNwQyxFQUEyQmtULEdBQWE1VSxFQUFLMFUsRUFBWSxNQUFPLEtBQU0sS0FBTSxPQUM1RSxJQUFnQ25ULFVBQVVDLElBQUksV0FBVyxJQStCM0RrYixJQUVBMWlCLE9BQU80aUIsU0FBV0YsRUFFbEJ6YixFQUFVSixPQUFPcWIsRUFBVUMsRUFBYUMsRUFBUUMsRUFBU0MsR0FFbERyYixDQUFTLEVEcEZRNGIsQ0FBZTdjLEdBQU00WCxHQUFrQjVYLEVBQUssUUFBU0EsRUFBSUcsY0FBZSxPQUV6RmMsQ0FBUyxFSDZEQzZiLENBQW1COWMsSUFFN0JpQixDQUFTLEVFOUVOOGIsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8vLi9zcmMvY29tcG9uZW50cy9jb250ZW50Qm94L2NvbnRlbnRCb3guY3NzIiwid2VicGFjazovL3RvZG8vLi9zcmMvY29tcG9uZW50cy9kZWxDb25maXJtYXRpb24vZGVsQ29uZmlybWF0aW9uLmNzcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NvbXBvbmVudHMvaG9sZGVyQm94L2hvbGRlckJveC5jc3MiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9jb21wb25lbnRzL25hdmJhci9uYXZiYXIuY3NzIiwid2VicGFjazovL3RvZG8vLi9zcmMvY29tcG9uZW50cy9wcm9qZWN0L3Byb2plY3QuY3NzIiwid2VicGFjazovL3RvZG8vLi9zcmMvY29tcG9uZW50cy9wcm9qZWN0U2VsZWN0b3IvcHJvamVjdFNlbGVjdG9yLmNzcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NvbXBvbmVudHMvdG9kb0RldGFpbHMvdG9kb0RldGFpbHMuY3NzIiwid2VicGFjazovL3RvZG8vLi9zcmMvY29tcG9uZW50cy90b2RvRm9ybS90b2RvRm9ybS5jc3MiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9jb21wb25lbnRzL3RvZG9JdGVtL3RvZG9JdGVtLmNzcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NvbnRhaW5lci9hcHAuY3NzIiwid2VicGFjazovL3RvZG8vLi9zcmMvaW5kZXguY3NzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NvbnRhaW5lci9hcHAuY3NzPzA5YjAiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9jb21wb25lbnRzL2NvbnRlbnRCb3gvY29udGVudEJveC5jc3M/ZTFlOSIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jc3M/MWE2OCIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NvbXBvbmVudHMvdG9kb0Zvcm0vdG9kb0Zvcm0uY3NzP2ExZmEiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy91dGlsaXR5RnVuY3Rpb25zL3V0aWxpdHlGdW5jdGlvbnMuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9kb21Db250cm9sbGVyL2RvbUNvbnRyb2xsZXIuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9jb21wb25lbnRzL3RvZG9JdGVtL3RvZG9JdGVtLmNzcz9jZmNiIiwid2VicGFjazovL3RvZG8vLi9zcmMvY29tcG9uZW50cy90b2RvRGV0YWlscy90b2RvRGV0YWlscy5jc3M/NzQ5YiIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NvbXBvbmVudHMvZGVsQ29uZmlybWF0aW9uL2RlbENvbmZpcm1hdGlvbi5jc3M/ZWE1MCIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NvbXBvbmVudHMvZGVsQ29uZmlybWF0aW9uL2RlbENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NvbXBvbmVudHMvcHJvamVjdFNlbGVjdG9yL3Byb2plY3RTZWxlY3Rvci5jc3M/OWRiZiIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9pc0RhdGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vdG9EYXRlL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2lzVmFsaWQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi90b0ludGVnZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vYWRkTWlsbGlzZWNvbmRzL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL3N1Yk1pbGxpc2Vjb25kcy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL2dldFVUQ0RheU9mWWVhci9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL3N0YXJ0T2ZVVENJU09XZWVrL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvZ2V0VVRDSVNPV2Vla1llYXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi9zdGFydE9mVVRDSVNPV2Vla1llYXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi9nZXRVVENJU09XZWVrL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvZGVmYXVsdE9wdGlvbnMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi9zdGFydE9mVVRDV2Vlay9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL2dldFVUQ1dlZWtZZWFyL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvc3RhcnRPZlVUQ1dlZWtZZWFyL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvZ2V0VVRDV2Vlay9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL2FkZExlYWRpbmdaZXJvcy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL2Zvcm1hdC9saWdodEZvcm1hdHRlcnMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi9mb3JtYXQvZm9ybWF0dGVycy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL2Zvcm1hdC9sb25nRm9ybWF0dGVycy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL2dldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vX2xpYi9wcm90ZWN0ZWRUb2tlbnMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL2VuLVVTL19saWIvZm9ybWF0RGlzdGFuY2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL19saWIvYnVpbGRGb3JtYXRMb25nRm4vaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL2VuLVVTL19saWIvZm9ybWF0TG9uZy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9sb2NhbGUvZW4tVVMvX2xpYi9mb3JtYXRSZWxhdGl2ZS9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9sb2NhbGUvX2xpYi9idWlsZExvY2FsaXplRm4vaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL2VuLVVTL19saWIvbG9jYWxpemUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL19saWIvYnVpbGRNYXRjaEZuL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2xvY2FsZS9lbi1VUy9fbGliL21hdGNoL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2xvY2FsZS9fbGliL2J1aWxkTWF0Y2hQYXR0ZXJuRm4vaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vbG9jYWxlL2VuLVVTL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvZGVmYXVsdExvY2FsZS9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9mb3JtYXQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9jb21wb25lbnRzL3RvZG9JdGVtL3RvZG9JdGVtLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvY29tcG9uZW50cy90b2RvRGV0YWlscy90b2RvRGV0YWlscy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NvbXBvbmVudHMvcHJvamVjdFNlbGVjdG9yL3Byb2plY3RTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NvbXBvbmVudHMvcHJvamVjdC9wcm9qZWN0LmNzcz83NzRkIiwid2VicGFjazovL3RvZG8vLi9zcmMvY29tcG9uZW50cy9ob2xkZXJCb3gvaG9sZGVyQm94LmNzcz9iNjMxIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL3N0YXJ0T2ZXZWVrL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2lzU2FtZVdlZWsvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vaXNUaGlzV2Vlay9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NvbXBvbmVudHMvaG9sZGVyQm94L2hvbGRlckJveC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9jb21wYXJlQXNjL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvY29tcG9uZW50cy9wcm9qZWN0L3Byb2plY3QuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9jb21wb25lbnRzL3RvZG9Gb3JtL3RvZG9Gb3JtLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvY29udGFpbmVyL2FwcC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2luZGV4LmNzcz9jZmU0Iiwid2VicGFjazovL3RvZG8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9jb21wb25lbnRzL2NvbnRlbnRCb3gvY29udGVudEJveC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5jb250ZW50LWJveC1jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbiAgbWluLWhlaWdodDogNDM1cHg7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZTogNjVweCAxZnIgNjVweCAvIDFmcjtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbn1cXG5cXG4ubWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCB7XFxuICBmb250LXZhcmlhdGlvbi1zZXR0aW5nczpcXG4gICdGSUxMJyAwLFxcbiAgJ3dnaHQnIDQwMCxcXG4gICdHUkFEJyAyMDAsXFxuICAnb3BzeicgNDg7XFxuICBmb250LXNpemU6IDEuODVyZW07XFxufVxcblxcbi5jb250ZW50LWJveC10aXRsZSB7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDExcHg7XFxuICBncmlkLWFyZWE6IDEgLyAxIC8gMiAvIC0xO1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50LTMpO1xcbiAgZm9udC1zaXplOiAycmVtO1xcbiAgZm9udC1mYW1pbHk6ICdQVCBNb25vJywgbW9ub3NwYWNlO1xcbiAgYm94LXNoYWRvdzogMCAxcHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTtcXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDY1MHB4KSB7XFxuICAuY29udGVudC1ib3gtY29udGFpbmVyIHtcXG4gICAgbWF4LXdpZHRoOiA5NTBweDtcXG4gICAgaGVpZ2h0OiBtaW4oNTUwcHgsIDg1JSk7XFxuICAgIGdyaWQtdGVtcGxhdGU6IDY1cHggMWZyIC8gMTY1cHggMWZyO1xcbiAgICBib3gtc2hhZG93OiAzcHggM3B4IDRweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7XFxuICB9XFxuXFxuICAuY29udGVudC1ib3gtdGl0bGUge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xcbiAgICBwYWRkaW5nLWxlZnQ6IDI1cHg7XFxuICB9XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA4NTBweCkge1xcbiAgLmNvbnRlbnQtYm94LWNvbnRhaW5lciB7XFxuICAgIGdyaWQtdGVtcGxhdGU6IDY1cHggMWZyIC8gMTg1cHggMWZyO1xcbiAgfVxcblxcbiAgLm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQge1xcbiAgICBmb250LXNpemU6IDIuMXJlbTtcXG4gIH1cXG5cXG4gIC5jb250ZW50LWJveC10aXRsZSB7XFxuICAgIGZvbnQtc2l6ZTogMi4xNXJlbTtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDE2MDBweCkge1xcbiAgLmNvbnRlbnQtYm94LWNvbnRhaW5lciB7XFxuICAgIG1heC13aWR0aDogMTA1MHB4O1xcbiAgICBoZWlnaHQ6IG1pbig1NzBweCwgODUlKTtcXG4gICAgZ3JpZC10ZW1wbGF0ZTogNjVweCAxZnIgLyAyMDBweCAxZnI7XFxuICB9XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL2NvbnRlbnRCb3gvY29udGVudEJveC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixhQUFhO0VBQ2Isa0NBQWtDO0VBQ2xDLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFOzs7O1dBSVM7RUFDVCxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLFNBQVM7RUFDVCx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLGlDQUFpQztFQUNqQyxlQUFlO0VBQ2YsaUNBQWlDO0VBQ2pDLDJDQUEyQztBQUM3Qzs7QUFFQTtFQUNFO0lBQ0UsZ0JBQWdCO0lBQ2hCLHVCQUF1QjtJQUN2QixtQ0FBbUM7SUFDbkMsNkNBQTZDO0VBQy9DOztFQUVBO0lBQ0Usc0JBQXNCO0lBQ3RCLGtCQUFrQjtFQUNwQjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxtQ0FBbUM7RUFDckM7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxrQkFBa0I7RUFDcEI7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsaUJBQWlCO0lBQ2pCLHVCQUF1QjtJQUN2QixtQ0FBbUM7RUFDckM7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuY29udGVudC1ib3gtY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG4gIG1pbi1oZWlnaHQ6IDQzNXB4O1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGU6IDY1cHggMWZyIDY1cHggLyAxZnI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuLm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQge1xcbiAgZm9udC12YXJpYXRpb24tc2V0dGluZ3M6XFxuICAnRklMTCcgMCxcXG4gICd3Z2h0JyA0MDAsXFxuICAnR1JBRCcgMjAwLFxcbiAgJ29wc3onIDQ4O1xcbiAgZm9udC1zaXplOiAxLjg1cmVtO1xcbn1cXG5cXG4uY29udGVudC1ib3gtdGl0bGUge1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiAxMXB4O1xcbiAgZ3JpZC1hcmVhOiAxIC8gMSAvIDIgLyAtMTtcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC0zKTtcXG4gIGZvbnQtc2l6ZTogMnJlbTtcXG4gIGZvbnQtZmFtaWx5OiAnUFQgTW9ubycsIG1vbm9zcGFjZTtcXG4gIGJveC1zaGFkb3c6IDAgMXB4IDRweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA2NTBweCkge1xcbiAgLmNvbnRlbnQtYm94LWNvbnRhaW5lciB7XFxuICAgIG1heC13aWR0aDogOTUwcHg7XFxuICAgIGhlaWdodDogbWluKDU1MHB4LCA4NSUpO1xcbiAgICBncmlkLXRlbXBsYXRlOiA2NXB4IDFmciAvIDE2NXB4IDFmcjtcXG4gICAgYm94LXNoYWRvdzogM3B4IDNweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xcbiAgfVxcblxcbiAgLmNvbnRlbnQtYm94LXRpdGxlIHtcXG4gICAganVzdGlmeS1jb250ZW50OiBzdGFydDtcXG4gICAgcGFkZGluZy1sZWZ0OiAyNXB4O1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogODUwcHgpIHtcXG4gIC5jb250ZW50LWJveC1jb250YWluZXIge1xcbiAgICBncmlkLXRlbXBsYXRlOiA2NXB4IDFmciAvIDE4NXB4IDFmcjtcXG4gIH1cXG5cXG4gIC5tYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkIHtcXG4gICAgZm9udC1zaXplOiAyLjFyZW07XFxuICB9XFxuXFxuICAuY29udGVudC1ib3gtdGl0bGUge1xcbiAgICBmb250LXNpemU6IDIuMTVyZW07XFxuICB9XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiAxNjAwcHgpIHtcXG4gIC5jb250ZW50LWJveC1jb250YWluZXIge1xcbiAgICBtYXgtd2lkdGg6IDEwNTBweDtcXG4gICAgaGVpZ2h0OiBtaW4oNTcwcHgsIDg1JSk7XFxuICAgIGdyaWQtdGVtcGxhdGU6IDY1cHggMWZyIC8gMjAwcHggMWZyO1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuZGVsLWNvbmZpcm1hdGlvbi1jb250YWluZXIge1xcbiAgd2lkdGg6IDI1NXB4O1xcbiAgaGVpZ2h0OiAxNDBweDtcXG4gIGdhcDogMzVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgcGFkZGluZzogMTBweCAxNXB4O1xcbiAgZm9udC1mYW1pbHk6ICdMYXRvJywgc2Fucy1zZXJpZjtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gIGJveC1zaGFkb3c6IDNweCAzcHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHRvcDogNTAlO1xcbiAgbGVmdDogNTAlO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxuICB6LWluZGV4OiAxMDA7XFxufVxcblxcbi5kZWwtY29uZmlybWF0aW9uLW1zZyB7XFxuICBmb250LXNpemU6IDEuMjVyZW07XFxufVxcblxcbi5kZWwtY29uZmlybWF0aW9uLWJ0bnMtY29udGFpbmVyIHtcXG4gIGdhcDogMTVweDtcXG59XFxuXFxuLmRlbC1jb25maXJtYXRpb24tbm8tYnRuLFxcbi5kZWwtY29uZmlybWF0aW9uLXllcy1idG4ge1xcbiAgd2lkdGg6IDEwMHB4O1xcbiAgcGFkZGluZzogMTBweCAyMHB4O1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcXG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XFxuICBmb250LXNpemU6IC44NXJlbTtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICB0cmFuc2l0aW9uOiAuNXM7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmRlbC1jb25maXJtYXRpb24tbm8tYnRuOmhvdmVyLFxcbi5kZWwtY29uZmlybWF0aW9uLXllcy1idG46aG92ZXIge1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01cHgpO1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVxcblxcbi5kZWwtY29uZmlybWF0aW9uLW5vLWJ0biB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1hY2NlbnQtMyk7XFxuICBjb2xvcjogdmFyKC0tYWNjZW50LTMpO1xcbn1cXG5cXG4uZGVsLWNvbmZpcm1hdGlvbi15ZXMtYnRuIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWFjY2VudC0xKTtcXG4gIGNvbG9yOiB2YXIoLS1hY2NlbnQtMSk7XFxufVxcblxcbi5kZWwtY29uZmlybWF0aW9uLW5vLWJ0bjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQtMyk7XFxufVxcblxcbi5kZWwtY29uZmlybWF0aW9uLXllcy1idG46aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50LTEpO1xcbn1cXG5cXG5cXG5cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY29tcG9uZW50cy9kZWxDb25maXJtYXRpb24vZGVsQ29uZmlybWF0aW9uLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLFlBQVk7RUFDWixhQUFhO0VBQ2IsU0FBUztFQUNULHVCQUF1QjtFQUN2QixrQkFBa0I7RUFDbEIsK0JBQStCO0VBQy9CLGtCQUFrQjtFQUNsQiw2Q0FBNkM7RUFDN0MsZUFBZTtFQUNmLFFBQVE7RUFDUixTQUFTO0VBQ1QsZ0NBQWdDO0VBQ2hDLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFNBQVM7QUFDWDs7QUFFQTs7RUFFRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIscUNBQXFDO0VBQ3JDLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGVBQWU7RUFDZix1QkFBdUI7RUFDdkIsZUFBZTtBQUNqQjs7QUFFQTs7RUFFRSxZQUFZO0VBQ1osMkJBQTJCO0VBQzNCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGlDQUFpQztFQUNqQyxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0UsaUNBQWlDO0FBQ25DXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5kZWwtY29uZmlybWF0aW9uLWNvbnRhaW5lciB7XFxuICB3aWR0aDogMjU1cHg7XFxuICBoZWlnaHQ6IDE0MHB4O1xcbiAgZ2FwOiAzNXB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICBwYWRkaW5nOiAxMHB4IDE1cHg7XFxuICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgYm94LXNoYWRvdzogM3B4IDNweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgdG9wOiA1MCU7XFxuICBsZWZ0OiA1MCU7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXG4gIHotaW5kZXg6IDEwMDtcXG59XFxuXFxuLmRlbC1jb25maXJtYXRpb24tbXNnIHtcXG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcXG59XFxuXFxuLmRlbC1jb25maXJtYXRpb24tYnRucy1jb250YWluZXIge1xcbiAgZ2FwOiAxNXB4O1xcbn1cXG5cXG4uZGVsLWNvbmZpcm1hdGlvbi1uby1idG4sXFxuLmRlbC1jb25maXJtYXRpb24teWVzLWJ0biB7XFxuICB3aWR0aDogMTAwcHg7XFxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBsZXR0ZXItc3BhY2luZzogMXB4O1xcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcXG4gIGZvbnQtc2l6ZTogLjg1cmVtO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHRyYW5zaXRpb246IC41cztcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uZGVsLWNvbmZpcm1hdGlvbi1uby1idG46aG92ZXIsXFxuLmRlbC1jb25maXJtYXRpb24teWVzLWJ0bjpob3ZlciB7XFxuICBjb2xvcjogd2hpdGU7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG59XFxuXFxuLmRlbC1jb25maXJtYXRpb24tbm8tYnRuIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWFjY2VudC0zKTtcXG4gIGNvbG9yOiB2YXIoLS1hY2NlbnQtMyk7XFxufVxcblxcbi5kZWwtY29uZmlybWF0aW9uLXllcy1idG4ge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYWNjZW50LTEpO1xcbiAgY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG59XFxuXFxuLmRlbC1jb25maXJtYXRpb24tbm8tYnRuOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC0zKTtcXG59XFxuXFxuLmRlbC1jb25maXJtYXRpb24teWVzLWJ0bjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQtMSk7XFxufVxcblxcblxcblxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5ob2xkZXItYm94LWNvbnRhaW5lciB7XFxuICBncmlkLWFyZWE6IDIgLyAxIC8gMyAvIC0xO1xcbiAganVzdGlmeS1jb250ZW50OiBzdGFydDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBwYWRkaW5nOiAxNXB4IDEwcHg7XFxuICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xcbiAgZm9udC1zaXplOiAxLjE1cmVtO1xcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcXG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTsgIC8qIElFIGFuZCBFZGdlICovXFxuICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7ICAvKiBGaXJlZm94ICovXFxufVxcblxcbi8qIEhpZGUgc2Nyb2xsYmFyIGZvciBDaHJvbWUsIFNhZmFyaSBhbmQgT3BlcmEgKi9cXG4uaG9sZGVyLWJveC1jb250YWluZXI6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA2NTBweCkge1xcbiAgLmhvbGRlci1ib3gtY29udGFpbmVyIHtcXG4gICAgZ3JpZC1hcmVhOiAyIC8gMiAvIC0xIC8gLTE7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuICB9XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL2hvbGRlckJveC9ob2xkZXJCb3guY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UseUJBQXlCO0VBQ3pCLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLCtCQUErQjtFQUMvQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLHdCQUF3QixHQUFHLGdCQUFnQjtFQUMzQyxxQkFBcUIsR0FBRyxZQUFZO0FBQ3RDOztBQUVBLGdEQUFnRDtBQUNoRDtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFO0lBQ0UsMEJBQTBCO0lBQzFCLGFBQWE7RUFDZjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5ob2xkZXItYm94LWNvbnRhaW5lciB7XFxuICBncmlkLWFyZWE6IDIgLyAxIC8gMyAvIC0xO1xcbiAganVzdGlmeS1jb250ZW50OiBzdGFydDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBwYWRkaW5nOiAxNXB4IDEwcHg7XFxuICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xcbiAgZm9udC1zaXplOiAxLjE1cmVtO1xcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcXG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTsgIC8qIElFIGFuZCBFZGdlICovXFxuICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7ICAvKiBGaXJlZm94ICovXFxufVxcblxcbi8qIEhpZGUgc2Nyb2xsYmFyIGZvciBDaHJvbWUsIFNhZmFyaSBhbmQgT3BlcmEgKi9cXG4uaG9sZGVyLWJveC1jb250YWluZXI6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA2NTBweCkge1xcbiAgLmhvbGRlci1ib3gtY29udGFpbmVyIHtcXG4gICAgZ3JpZC1hcmVhOiAyIC8gMiAvIC0xIC8gLTE7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuICB9XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5uYXZiYXItY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiA2NXB4O1xcbiAgZ3JpZC1hcmVhOiAzIC8gMSAvIC0xIC8gLTE7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgcGFkZGluZzogMCAxNXB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50LTQpO1xcbiAgZm9udC1mYW1pbHk6ICdQcmVzcyBTdGFydCAyUCcsIGN1cnNpdmU7XFxufVxcblxcbi5uYXZiYXItYnRuIHtcXG4gIGhlaWdodDogNDBweDtcXG4gIHdpZHRoOiA0MHB4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZm9udC1zaXplOiAxLjNyZW07XFxuICBjb2xvcjogd2hpdGU7XFxuICB0cmFuc2l0aW9uOiAuNHM7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5uYXZiYXItYnRuOmhvdmVyLFxcbi5uYXZiYXItYnRuLXNlbGVjdGVkIHtcXG4gIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcXG4gIGNvbG9yOiB2YXIoLS1hY2NlbnQtMyk7XFxufVxcblxcbi5uYXZiYXItcGx1cy1idG4ge1xcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcXG4gIGZvbnQtc2l6ZTogMi41NXJlbTtcXG4gIG1hcmdpbi1ib3R0b206IDRweDtcXG4gIGNvbG9yOiB2YXIoLS1hY2NlbnQtMSlcXG59XFxuXFxuLm5hdmJhci1wbHVzLWJ0bjpob3ZlciB7XFxuICBjb2xvcjogdmFyKC0tYWNjZW50LTEpO1xcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogNDAwcHgpIHtcXG4gIC5uYXZiYXItY29udGFpbmVyIHtcXG4gICAgcGFkZGluZzogMCAzMHB4O1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogNTAwcHgpIHtcXG4gIC5uYXZiYXItY29udGFpbmVyIHtcXG4gICAgcGFkZGluZzogMCA2MHB4O1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogNjAwcHgpIHtcXG4gIC5uYXZiYXItY29udGFpbmVyIHtcXG4gICAgcGFkZGluZzogMCA4MHB4O1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogNjUwcHgpIHtcXG4gIC5uYXZiYXItY29udGFpbmVyIHtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBncmlkLWFyZWE6IDIgLyAxIC8gMyAvIDI7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBwYWRkaW5nOiAwIDAgMjBweCAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQtNSk7XFxuICAgIGJveC1zaGFkb3c6IDFweCAwIDRweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7XFxuICB9XFxuXFxuICAubmF2YmFyLWJ0biB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDYwcHg7XFxuICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHBhZGRpbmctbGVmdDogMjVweDtcXG4gICAgZm9udC1zaXplOiAxLjFyZW07XFxuICAgIGNvbG9yOiB2YXIoLS1hY2NlbnQtNCk7XFxuICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XFxuICAgIGJvcmRlci1yaWdodDogNnB4IHNvbGlkIHRyYW5zcGFyZW50O1xcbiAgICB0cmFuc2l0aW9uOiAuNjVzO1xcbiAgfVxcblxcbiAgLm5hdmJhci1idG46aG92ZXIsXFxuICAubmF2YmFyLWJ0bi1zZWxlY3RlZCAge1xcbiAgICB0cmFuc2Zvcm06IG5vbmU7XFxuICAgIGNvbG9yOiB2YXIoLS1hY2NlbnQtNCk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC02KTtcXG4gIH1cXG5cXG4gIC5uYXZiYXItYnRuLXNlbGVjdGVkIHtcXG4gICAgYm9yZGVyLXJpZ2h0OiA2cHggc29saWQgdmFyKC0tYWNjZW50LTEpO1xcbiAgfVxcblxcbiAgLm5hdmJhci1wbHVzLWJ0biB7XFxuICAgIHdpZHRoOiA4MHB4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgbWFyZ2luLXRvcDogYXV0bztcXG4gICAgcGFkZGluZy1sZWZ0OiAwcHg7XFxuICAgIGZvbnQtc2l6ZTogMi45NXJlbTtcXG4gICAgY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgfVxcblxcbiAgLm5hdmJhci1wbHVzLWJ0bjpob3ZlciB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4zKTtcXG4gICAgY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICB9XFxufVxcblxcblxcblxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL25hdmJhci9uYXZiYXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWiwwQkFBMEI7RUFDMUIsOEJBQThCO0VBQzlCLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YsaUNBQWlDO0VBQ2pDLHNDQUFzQztBQUN4Qzs7QUFFQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsWUFBWTtFQUNaLGVBQWU7RUFDZixlQUFlO0FBQ2pCOztBQUVBOztFQUVFLHFCQUFxQjtFQUNyQixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxxQ0FBcUM7RUFDckMsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQjtBQUNGOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0U7SUFDRSxlQUFlO0VBQ2pCO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLGVBQWU7RUFDakI7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxZQUFZO0lBQ1osd0JBQXdCO0lBQ3hCLHNCQUFzQjtJQUN0Qix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixpQ0FBaUM7SUFDakMsMkNBQTJDO0VBQzdDOztFQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsc0JBQXNCO0lBQ3RCLHFDQUFxQztJQUNyQyxtQ0FBbUM7SUFDbkMsZ0JBQWdCO0VBQ2xCOztFQUVBOztJQUVFLGVBQWU7SUFDZixzQkFBc0I7SUFDdEIsaUNBQWlDO0VBQ25DOztFQUVBO0lBQ0UsdUNBQXVDO0VBQ3pDOztFQUVBO0lBQ0UsV0FBVztJQUNYLHVCQUF1QjtJQUN2QixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsWUFBWTtFQUNkOztFQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0Qiw2QkFBNkI7RUFDL0I7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubmF2YmFyLWNvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogNjVweDtcXG4gIGdyaWQtYXJlYTogMyAvIDEgLyAtMSAvIC0xO1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHBhZGRpbmc6IDAgMTVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC00KTtcXG4gIGZvbnQtZmFtaWx5OiAnUHJlc3MgU3RhcnQgMlAnLCBjdXJzaXZlO1xcbn1cXG5cXG4ubmF2YmFyLWJ0biB7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICB3aWR0aDogNDBweDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgdHJhbnNpdGlvbjogLjRzO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ubmF2YmFyLWJ0bjpob3ZlcixcXG4ubmF2YmFyLWJ0bi1zZWxlY3RlZCB7XFxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XFxuICBjb2xvcjogdmFyKC0tYWNjZW50LTMpO1xcbn1cXG5cXG4ubmF2YmFyLXBsdXMtYnRuIHtcXG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XFxuICBmb250LXNpemU6IDIuNTVyZW07XFxuICBtYXJnaW4tYm90dG9tOiA0cHg7XFxuICBjb2xvcjogdmFyKC0tYWNjZW50LTEpXFxufVxcblxcbi5uYXZiYXItcGx1cy1idG46aG92ZXIge1xcbiAgY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDQwMHB4KSB7XFxuICAubmF2YmFyLWNvbnRhaW5lciB7XFxuICAgIHBhZGRpbmc6IDAgMzBweDtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDUwMHB4KSB7XFxuICAubmF2YmFyLWNvbnRhaW5lciB7XFxuICAgIHBhZGRpbmc6IDAgNjBweDtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XFxuICAubmF2YmFyLWNvbnRhaW5lciB7XFxuICAgIHBhZGRpbmc6IDAgODBweDtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDY1MHB4KSB7XFxuICAubmF2YmFyLWNvbnRhaW5lciB7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgZ3JpZC1hcmVhOiAyIC8gMSAvIDMgLyAyO1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgcGFkZGluZzogMCAwIDIwcHggMDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50LTUpO1xcbiAgICBib3gtc2hhZG93OiAxcHggMCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xcbiAgfVxcblxcbiAgLm5hdmJhci1idG4ge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiA2MHB4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDI1cHg7XFxuICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xcbiAgICBjb2xvcjogdmFyKC0tYWNjZW50LTQpO1xcbiAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xcbiAgICBib3JkZXItcmlnaHQ6IDZweCBzb2xpZCB0cmFuc3BhcmVudDtcXG4gICAgdHJhbnNpdGlvbjogLjY1cztcXG4gIH1cXG5cXG4gIC5uYXZiYXItYnRuOmhvdmVyLFxcbiAgLm5hdmJhci1idG4tc2VsZWN0ZWQgIHtcXG4gICAgdHJhbnNmb3JtOiBub25lO1xcbiAgICBjb2xvcjogdmFyKC0tYWNjZW50LTQpO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQtNik7XFxuICB9XFxuXFxuICAubmF2YmFyLWJ0bi1zZWxlY3RlZCB7XFxuICAgIGJvcmRlci1yaWdodDogNnB4IHNvbGlkIHZhcigtLWFjY2VudC0xKTtcXG4gIH1cXG5cXG4gIC5uYXZiYXItcGx1cy1idG4ge1xcbiAgICB3aWR0aDogODBweDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIG1hcmdpbi10b3A6IGF1dG87XFxuICAgIHBhZGRpbmctbGVmdDogMHB4O1xcbiAgICBmb250LXNpemU6IDIuOTVyZW07XFxuICAgIGNvbG9yOiB2YXIoLS1hY2NlbnQtMSk7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gIH1cXG5cXG4gIC5uYXZiYXItcGx1cy1idG46aG92ZXIge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMyk7XFxuICAgIGNvbG9yOiB2YXIoLS1hY2NlbnQtMSk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgfVxcbn1cXG5cXG5cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIucHJvamVjdC1jb250YWluZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBnYXA6IDE4cHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQtMik7XFxuICBwYWRkaW5nOiAxMnB4IDEwcHg7XFxuICBtYXJnaW4tYm90dG9tOiA3cHg7XFxuICB0cmFuc2l0aW9uOiAuMjVzO1xcbiAgZm9udC1mYW1pbHk6ICdMYXRvJywgc2Fucy1zZXJpZjtcXG59XFxuXFxuLnByb2plY3QtY29udGFpbmVyOmhvdmVyIHtcXG4gIGJveC1zaGFkb3c6IDJweCAycHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTtcXG59XFxuXFxuLnByb2plY3QtY29udGFpbmVyOmxhc3QtY2hpbGQge1xcbiAgbWFyZ2luLWJvdHRvbTogMDtcXG59XFxuXFxuLnByb2plY3QtdGl0bGUge1xcbiAgd2lkdGg6IDE4NXB4O1xcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbiAgb3ZlcmZsb3ctd3JhcDogYW55d2hlcmU7XFxufVxcblxcbi5wcm9qZWN0LWFkZC1pY29uIHtcXG4gIG1hcmdpbi1sZWZ0OiAycHg7XFxufVxcblxcbi5wcm9qZWN0LWFkZC1pY29uLFxcbi5wcm9qZWN0LWVkaXQtaWNvbixcXG4ucHJvamVjdC10cmFzaC1pY29uIHtcXG4gIHdpZHRoOiB2YXIoLS1pY29uLXdpZHRoLTEpO1xcbiAgaGVpZ2h0OiB2YXIoLS1pY29uLWhlaWdodC0xKTtcXG59XFxuXFxuLnByb2plY3QtYWRkLWljb246aG92ZXIsXFxuLnByb2plY3QtZWRpdC1pY29uOmhvdmVyLFxcbi5wcm9qZWN0LXRyYXNoLWljb246aG92ZXIge1xcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xcbn1cXG5cXG4ucHJvamVjdC1jb250YWluZXIsXFxuLnByb2plY3QtYWRkLWljb24sXFxuLnByb2plY3QtZWRpdC1pY29uLFxcbi5wcm9qZWN0LXRyYXNoLWljb24ge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogMzgwcHgpIHtcXG4gIC5wcm9qZWN0LXRpdGxlIHtcXG4gICAgd2lkdGg6IDIxNXB4O1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogNDUwcHgpIHtcXG4gIC5wcm9qZWN0LXRpdGxlIHtcXG4gICAgd2lkdGg6IDI1MHB4O1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogNTAwcHgpIHtcXG4gIC5wcm9qZWN0LXRpdGxlIHtcXG4gICAgd2lkdGg6IDI4NXB4O1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogNzUwcHgpIHtcXG4gIC5wcm9qZWN0LXRpdGxlIHtcXG4gICAgd2lkdGg6IDMyNXB4O1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogODUwcHgpIHtcXG4gIC5wcm9qZWN0LXRpdGxlIHtcXG4gICAgd2lkdGg6IDM3MHB4O1xcbiAgfVxcbn1cXG5cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY29tcG9uZW50cy9wcm9qZWN0L3Byb2plY3QuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsV0FBVztFQUNYLFNBQVM7RUFDVCxpQ0FBaUM7RUFDakMsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsK0JBQStCO0FBQ2pDOztBQUVBO0VBQ0UsNkNBQTZDO0VBQzdDLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTs7O0VBR0UsMEJBQTBCO0VBQzFCLDRCQUE0QjtBQUM5Qjs7QUFFQTs7O0VBR0UscUJBQXFCO0FBQ3ZCOztBQUVBOzs7O0VBSUUsZUFBZTtBQUNqQjs7QUFFQTtFQUNFO0lBQ0UsWUFBWTtFQUNkO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLFlBQVk7RUFDZDtBQUNGOztBQUVBO0VBQ0U7SUFDRSxZQUFZO0VBQ2Q7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsWUFBWTtFQUNkO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLFlBQVk7RUFDZDtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5wcm9qZWN0LWNvbnRhaW5lciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGdhcDogMThweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC0yKTtcXG4gIHBhZGRpbmc6IDEycHggMTBweDtcXG4gIG1hcmdpbi1ib3R0b206IDdweDtcXG4gIHRyYW5zaXRpb246IC4yNXM7XFxuICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xcbn1cXG5cXG4ucHJvamVjdC1jb250YWluZXI6aG92ZXIge1xcbiAgYm94LXNoYWRvdzogMnB4IDJweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xcHgpO1xcbn1cXG5cXG4ucHJvamVjdC1jb250YWluZXI6bGFzdC1jaGlsZCB7XFxuICBtYXJnaW4tYm90dG9tOiAwO1xcbn1cXG5cXG4ucHJvamVjdC10aXRsZSB7XFxuICB3aWR0aDogMTg1cHg7XFxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XFxuICBmb250LXNpemU6IDFyZW07XFxuICBvdmVyZmxvdy13cmFwOiBhbnl3aGVyZTtcXG59XFxuXFxuLnByb2plY3QtYWRkLWljb24ge1xcbiAgbWFyZ2luLWxlZnQ6IDJweDtcXG59XFxuXFxuLnByb2plY3QtYWRkLWljb24sXFxuLnByb2plY3QtZWRpdC1pY29uLFxcbi5wcm9qZWN0LXRyYXNoLWljb24ge1xcbiAgd2lkdGg6IHZhcigtLWljb24td2lkdGgtMSk7XFxuICBoZWlnaHQ6IHZhcigtLWljb24taGVpZ2h0LTEpO1xcbn1cXG5cXG4ucHJvamVjdC1hZGQtaWNvbjpob3ZlcixcXG4ucHJvamVjdC1lZGl0LWljb246aG92ZXIsXFxuLnByb2plY3QtdHJhc2gtaWNvbjpob3ZlciB7XFxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XFxufVxcblxcbi5wcm9qZWN0LWNvbnRhaW5lcixcXG4ucHJvamVjdC1hZGQtaWNvbixcXG4ucHJvamVjdC1lZGl0LWljb24sXFxuLnByb2plY3QtdHJhc2gtaWNvbiB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiAzODBweCkge1xcbiAgLnByb2plY3QtdGl0bGUge1xcbiAgICB3aWR0aDogMjE1cHg7XFxuICB9XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA0NTBweCkge1xcbiAgLnByb2plY3QtdGl0bGUge1xcbiAgICB3aWR0aDogMjUwcHg7XFxuICB9XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA1MDBweCkge1xcbiAgLnByb2plY3QtdGl0bGUge1xcbiAgICB3aWR0aDogMjg1cHg7XFxuICB9XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA3NTBweCkge1xcbiAgLnByb2plY3QtdGl0bGUge1xcbiAgICB3aWR0aDogMzI1cHg7XFxuICB9XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA4NTBweCkge1xcbiAgLnByb2plY3QtdGl0bGUge1xcbiAgICB3aWR0aDogMzcwcHg7XFxuICB9XFxufVxcblxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gPSBuZXcgVVJMKFwiLi9jaGVjay5wbmdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIucHJvamVjdC1zZWxlY3Rvci1jb250YWluZXIge1xcbiAgaGVpZ2h0OiA0MjVweDtcXG4gIHdpZHRoOiAzMzVweDtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDY1cHggMWZyIDk1cHg7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB0b3A6IDUwJTtcXG4gIGxlZnQ6IDUwJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgYm94LXNoYWRvdzogM3B4IDNweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xcbn1cXG5cXG4ucHJvamVjdC1zZWxlY3Rvci10aXRsZSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQtMyk7XFxuICBib3JkZXItcmFkaXVzOiA4cHggOHB4IDAgMDtcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcXG59XFxuXFxuLnByb2plY3Qtc2VsZWN0b3ItcHJvamVjdHMtYm94IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHBhZGRpbmc6IDE1cHg7XFxuICBvdmVyZmxvdzogc2Nyb2xsO1xcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyAgLyogSGlkZSBzY3JvbGxiYXIgZm9yIElFIGFuZCBFZGdlICovXFxuICBzY3JvbGxiYXItd2lkdGg6IG5vbmU7ICAvKiBIaWRlIHNjcm9sbGJhciBmb3IgRmlyZWZveCAqL1xcbn1cXG5cXG4vKiBIaWRlIHNjcm9sbGJhciBmb3IgQ2hyb21lLCBTYWZhcmkgYW5kIE9wZXJhICovXFxuLnByb2plY3Qtc2VsZWN0b3ItcHJvamVjdHMtYm94Ojotd2Via2l0LXNjcm9sbGJhciB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4ucHJvamVjdC1zZWxlY3Rvci1idG5zLWNvbnRhaW5lciB7XFxuICBnYXA6IDE1cHg7XFxuICBtYXJnaW46IDM1cHggMCAyNXB4IDA7XFxufVxcblxcbi5wcm9qZWN0LXNlbGVjdG9yLWNhbmNlbC1idG4sIFxcbi5wcm9qZWN0LXNlbGVjdG9yLW9rLWJ0biB7XFxuICB3aWR0aDogMTA1cHg7XFxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XFxuICBtYXJnaW4tYm90dG9tOiAxMHB4OyAvKiBTcGVjaWZpYyAqL1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcXG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XFxuICBmb250LXNpemU6IC44NXJlbTtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICB0cmFuc2l0aW9uOiAuNXM7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLnByb2plY3Qtc2VsZWN0b3ItY2FuY2VsLWJ0biB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1hY2NlbnQtMyk7XFxuICBjb2xvcjogdmFyKC0tYWNjZW50LTMpO1xcbn1cXG5cXG4ucHJvamVjdC1zZWxlY3Rvci1vay1idG4ge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYWNjZW50LTEpO1xcbiAgY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG59XFxuXFxuLnByb2plY3Qtc2VsZWN0b3ItY2FuY2VsLWJ0bjpob3ZlciwgXFxuLnByb2plY3Qtc2VsZWN0b3Itb2stYnRuOmhvdmVyIHtcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNXB4KTtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG5cXG4ucHJvamVjdC1zZWxlY3Rvci1jYW5jZWwtYnRuOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC0zKTtcXG59XFxuXFxuLnByb2plY3Qtc2VsZWN0b3Itb2stYnRuOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG59XFxuXFxuLnByb2plY3Qtb3B0aW9uIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiBhdXRvO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50LTIpO1xcbiAgcGFkZGluZzogMTNweCAxMHB4O1xcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xcbiAgdHJhbnNpdGlvbjogLjI1cztcXG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5wcm9qZWN0LW9wdGlvbjpob3ZlciB7XFxuICBib3gtc2hhZG93OiAycHggMnB4IDRweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFweCk7XFxufVxcblxcbi5wcm9qZWN0LW9wdGlvbjpsYXN0LWNoaWxkIHtcXG4gIG1hcmdpbi1ib3R0b206IDA7XFxufVxcblxcbi5wcm9qZWN0LW9wdGlvbi10aXRsZSB7XFxuICB3aWR0aDogMjA1cHg7IFxcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xcbiAgb3ZlcmZsb3ctd3JhcDogYW55d2hlcmU7XFxufVxcblxcbi5wcm9qZWN0LW9wdGlvbi1jaGVja2JveCB7XFxuICBoZWlnaHQ6IDIwcHg7XFxuICB3aWR0aDogMjBweDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogNTAlO1xcbiAgcmlnaHQ6IDE1cHg7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWFjY2VudC0xKTtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuLnNlbGVjdGVkIC5wcm9qZWN0LW9wdGlvbi1jaGVja2JveCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQtMSk7XFxufVxcblxcbi5zZWxlY3RlZCAucHJvamVjdC1vcHRpb24tY2hlY2tib3g6OmJlZm9yZSB7XFxuICBoZWlnaHQ6IDEycHg7XFxuICB3aWR0aDogMTJweDtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiA1MCU7XFxuICBsZWZ0OiA1MCU7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gKyBcIik7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDk1MHB4KSB7XFxuICAucHJvamVjdC1zZWxlY3Rvci1jb250YWluZXIge1xcbiAgICBoZWlnaHQ6IDQ3NXB4O1xcbiAgICB3aWR0aDogNDAwcHg7XFxuICB9XFxuXFxuICAucHJvamVjdC1zZWxlY3Rvci10aXRsZSB7XFxuICAgIGZvbnQtc2l6ZTogMS4zNXJlbTtcXG4gIH1cXG5cXG4gIC5wcm9qZWN0LW9wdGlvbi10aXRsZSB7XFxuICAgIHdpZHRoOiAyNjVweDsgXFxuICB9XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL3Byb2plY3RTZWxlY3Rvci9wcm9qZWN0U2VsZWN0b3IuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsYUFBYTtFQUNiLFlBQVk7RUFDWixhQUFhO0VBQ2IsaUNBQWlDO0VBQ2pDLGVBQWU7RUFDZixRQUFRO0VBQ1IsU0FBUztFQUNULGdDQUFnQztFQUNoQyx1QkFBdUI7RUFDdkIsK0JBQStCO0VBQy9CLGtCQUFrQjtFQUNsQiw2Q0FBNkM7QUFDL0M7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsMEJBQTBCO0VBQzFCLFlBQVk7RUFDWixpQkFBaUI7RUFDakIscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0UsV0FBVztFQUNYLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLHdCQUF3QixHQUFHLG1DQUFtQztFQUM5RCxxQkFBcUIsR0FBRywrQkFBK0I7QUFDekQ7O0FBRUEsZ0RBQWdEO0FBQ2hEO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsU0FBUztFQUNULHFCQUFxQjtBQUN2Qjs7QUFFQTs7RUFFRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLG1CQUFtQixFQUFFLGFBQWE7RUFDbEMsa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQixxQ0FBcUM7RUFDckMsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsZUFBZTtFQUNmLHVCQUF1QjtFQUN2QixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsaUNBQWlDO0VBQ2pDLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGlDQUFpQztFQUNqQyxzQkFBc0I7QUFDeEI7O0FBRUE7O0VBRUUsWUFBWTtFQUNaLDJCQUEyQjtFQUMzQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSxpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGlDQUFpQztFQUNqQyxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQiwrQkFBK0I7RUFDL0Isa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSw2Q0FBNkM7RUFDN0MsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osV0FBVztFQUNYLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsV0FBVztFQUNYLDJCQUEyQjtFQUMzQix1QkFBdUI7RUFDdkIsaUNBQWlDO0VBQ2pDLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztFQUNULGdDQUFnQztFQUNoQyx5REFBb0M7RUFDcEMsc0JBQXNCO0VBQ3RCLDRCQUE0QjtBQUM5Qjs7QUFFQTtFQUNFO0lBQ0UsYUFBYTtJQUNiLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLFlBQVk7RUFDZDtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5wcm9qZWN0LXNlbGVjdG9yLWNvbnRhaW5lciB7XFxuICBoZWlnaHQ6IDQyNXB4O1xcbiAgd2lkdGg6IDMzNXB4O1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogNjVweCAxZnIgOTVweDtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHRvcDogNTAlO1xcbiAgbGVmdDogNTAlO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBib3gtc2hhZG93OiAzcHggM3B4IDRweCAwIHJnYmEoMCwgMCwgMCwgMC4yNSk7XFxufVxcblxcbi5wcm9qZWN0LXNlbGVjdG9yLXRpdGxlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC0zKTtcXG4gIGJvcmRlci1yYWRpdXM6IDhweCA4cHggMCAwO1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgZm9udC1zaXplOiAxLjJyZW07XFxuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xcbn1cXG5cXG4ucHJvamVjdC1zZWxlY3Rvci1wcm9qZWN0cy1ib3gge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgcGFkZGluZzogMTVweDtcXG4gIG92ZXJmbG93OiBzY3JvbGw7XFxuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7ICAvKiBIaWRlIHNjcm9sbGJhciBmb3IgSUUgYW5kIEVkZ2UgKi9cXG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTsgIC8qIEhpZGUgc2Nyb2xsYmFyIGZvciBGaXJlZm94ICovXFxufVxcblxcbi8qIEhpZGUgc2Nyb2xsYmFyIGZvciBDaHJvbWUsIFNhZmFyaSBhbmQgT3BlcmEgKi9cXG4ucHJvamVjdC1zZWxlY3Rvci1wcm9qZWN0cy1ib3g6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5wcm9qZWN0LXNlbGVjdG9yLWJ0bnMtY29udGFpbmVyIHtcXG4gIGdhcDogMTVweDtcXG4gIG1hcmdpbjogMzVweCAwIDI1cHggMDtcXG59XFxuXFxuLnByb2plY3Qtc2VsZWN0b3ItY2FuY2VsLWJ0biwgXFxuLnByb2plY3Qtc2VsZWN0b3Itb2stYnRuIHtcXG4gIHdpZHRoOiAxMDVweDtcXG4gIHBhZGRpbmc6IDEwcHggMjBweDtcXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7IC8qIFNwZWNpZmljICovXFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBsZXR0ZXItc3BhY2luZzogMXB4O1xcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcXG4gIGZvbnQtc2l6ZTogLjg1cmVtO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHRyYW5zaXRpb246IC41cztcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ucHJvamVjdC1zZWxlY3Rvci1jYW5jZWwtYnRuIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWFjY2VudC0zKTtcXG4gIGNvbG9yOiB2YXIoLS1hY2NlbnQtMyk7XFxufVxcblxcbi5wcm9qZWN0LXNlbGVjdG9yLW9rLWJ0biB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1hY2NlbnQtMSk7XFxuICBjb2xvcjogdmFyKC0tYWNjZW50LTEpO1xcbn1cXG5cXG4ucHJvamVjdC1zZWxlY3Rvci1jYW5jZWwtYnRuOmhvdmVyLCBcXG4ucHJvamVjdC1zZWxlY3Rvci1vay1idG46aG92ZXIge1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01cHgpO1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVxcblxcbi5wcm9qZWN0LXNlbGVjdG9yLWNhbmNlbC1idG46aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50LTMpO1xcbn1cXG5cXG4ucHJvamVjdC1zZWxlY3Rvci1vay1idG46aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50LTEpO1xcbn1cXG5cXG4ucHJvamVjdC1vcHRpb24ge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IGF1dG87XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQtMik7XFxuICBwYWRkaW5nOiAxM3B4IDEwcHg7XFxuICBtYXJnaW4tYm90dG9tOiA4cHg7XFxuICB0cmFuc2l0aW9uOiAuMjVzO1xcbiAgZm9udC1mYW1pbHk6ICdMYXRvJywgc2Fucy1zZXJpZjtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLnByb2plY3Qtb3B0aW9uOmhvdmVyIHtcXG4gIGJveC1zaGFkb3c6IDJweCAycHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTtcXG59XFxuXFxuLnByb2plY3Qtb3B0aW9uOmxhc3QtY2hpbGQge1xcbiAgbWFyZ2luLWJvdHRvbTogMDtcXG59XFxuXFxuLnByb2plY3Qtb3B0aW9uLXRpdGxlIHtcXG4gIHdpZHRoOiAyMDVweDsgXFxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XFxuICBvdmVyZmxvdy13cmFwOiBhbnl3aGVyZTtcXG59XFxuXFxuLnByb2plY3Qtb3B0aW9uLWNoZWNrYm94IHtcXG4gIGhlaWdodDogMjBweDtcXG4gIHdpZHRoOiAyMHB4O1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiA1MCU7XFxuICByaWdodDogMTVweDtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tYWNjZW50LTEpO1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbn1cXG5cXG4uc2VsZWN0ZWQgLnByb2plY3Qtb3B0aW9uLWNoZWNrYm94IHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG59XFxuXFxuLnNlbGVjdGVkIC5wcm9qZWN0LW9wdGlvbi1jaGVja2JveDo6YmVmb3JlIHtcXG4gIGhlaWdodDogMTJweDtcXG4gIHdpZHRoOiAxMnB4O1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDUwJTtcXG4gIGxlZnQ6IDUwJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCIuL2NoZWNrLnBuZ1xcXCIpO1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA5NTBweCkge1xcbiAgLnByb2plY3Qtc2VsZWN0b3ItY29udGFpbmVyIHtcXG4gICAgaGVpZ2h0OiA0NzVweDtcXG4gICAgd2lkdGg6IDQwMHB4O1xcbiAgfVxcblxcbiAgLnByb2plY3Qtc2VsZWN0b3ItdGl0bGUge1xcbiAgICBmb250LXNpemU6IDEuMzVyZW07XFxuICB9XFxuXFxuICAucHJvamVjdC1vcHRpb24tdGl0bGUge1xcbiAgICB3aWR0aDogMjY1cHg7IFxcbiAgfVxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuZGV0YWlscy1jb250YWluZXIge1xcbiAgd2lkdGg6IDMxNXB4O1xcbiAgaGVpZ2h0OiA0OTVweDtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDQwcHggMWZyO1xcbiAgZ2FwOiAyMHB4O1xcbiAgcGFkZGluZzogMTBweCAxNXB4O1xcbiAgZm9udC1mYW1pbHk6ICdMYXRvJywgc2Fucy1zZXJpZjtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgYm94LXNoYWRvdzogM3B4IDNweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgdG9wOiA1MCU7XFxuICBsZWZ0OiA1MCU7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXG59XFxuXFxuLmRldGFpbHMtdG9wLWNvbnRhaW5lciB7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uZGV0YWlscy1ib3R0b20tY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBnYXA6IDE1cHg7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDkwcHggMjI1cHggNzVweDtcXG4gIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBwYWRkaW5nOiAwIDE1cHg7XFxufVxcblxcbi5kZXRhaWxzLXByaW9yaXR5IHtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIHBhZGRpbmc6IDFweCAxMHB4IDNweCAxMHB4O1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVxcblxcbi5kZXRhaWxzLXByaW9yaXR5LWwge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tbG93LXByaW8pO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbG93LXByaW8pO1xcbn1cXG5cXG4uZGV0YWlscy1wcmlvcml0eS1tIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLW1lZGl1bS1wcmlvKTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1lZGl1bS1wcmlvKTtcXG59XFxuXFxuLmRldGFpbHMtcHJpb3JpdHktaCB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1oaWdoLXByaW8pO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taGlnaC1wcmlvKTtcXG59XFxuXFxuLmRldGFpbHMtdGl0bGUsXFxuLmRldGFpbHMtbm90ZXMge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBvdmVyZmxvdy13cmFwOiBhbnl3aGVyZTtcXG4gIG92ZXJmbG93OiBzY3JvbGw7XFxuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7ICAvKiBJRSBhbmQgRWRnZSAqL1xcbiAgc2Nyb2xsYmFyLXdpZHRoOiBub25lOyAgLyogRmlyZWZveCAqL1xcbn1cXG5cXG4vKiBIaWRlIHNjcm9sbGJhciBmb3IgQ2hyb21lLCBTYWZhcmkgYW5kIE9wZXJhICovXFxuLmRldGFpbHMtdGl0bGU6Oi13ZWJraXQtc2Nyb2xsYmFyLFxcbi5kZXRhaWxzLW5vdGVzOjotd2Via2l0LXNjcm9sbGJhciB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4uZGV0YWlscy10aXRsZSB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBmb250LXNpemU6IDEuMXJlbTtcXG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XFxufVxcblxcbi5kZXRhaWxzLW5vdGVzIHtcXG4gIHRleHQtYWxpZ246IGxlZnQ7XFxufVxcblxcbi5kZXRhaWxzLWNsb3NlLWJ0biB7XFxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1hY2NlbnQtMSk7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBjb2xvcjogdmFyKC0tYWNjZW50LTEpO1xcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcXG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XFxuICBmb250LXNpemU6IC44NXJlbTtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICB0cmFuc2l0aW9uOiAuNXM7XFxufVxcblxcbi5kZXRhaWxzLWNsb3NlLWJ0bjpob3ZlciB7XFxuICBjb2xvcjogd2hpdGU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQtMSk7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvdG9kb0RldGFpbHMvdG9kb0RldGFpbHMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixhQUFhO0VBQ2IsNEJBQTRCO0VBQzVCLFNBQVM7RUFDVCxrQkFBa0I7RUFDbEIsK0JBQStCO0VBQy9CLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIsNkNBQTZDO0VBQzdDLGVBQWU7RUFDZixRQUFRO0VBQ1IsU0FBUztFQUNULGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLDhCQUE4QjtFQUM5QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsU0FBUztFQUNULG1DQUFtQztFQUNuQyxxQkFBcUI7RUFDckIsbUJBQW1CO0VBQ25CLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsMEJBQTBCO0VBQzFCLFlBQVk7RUFDWixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0Usb0NBQW9DO0VBQ3BDLG9DQUFvQztBQUN0Qzs7QUFFQTtFQUNFLGtDQUFrQztFQUNsQyxrQ0FBa0M7QUFDcEM7O0FBRUE7O0VBRUUsV0FBVztFQUNYLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsZ0JBQWdCO0VBQ2hCLHdCQUF3QixHQUFHLGdCQUFnQjtFQUMzQyxxQkFBcUIsR0FBRyxZQUFZO0FBQ3RDOztBQUVBLGdEQUFnRDtBQUNoRDs7RUFFRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLHFDQUFxQztBQUN2Qzs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixpQ0FBaUM7RUFDakMsa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIscUNBQXFDO0VBQ3JDLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osaUNBQWlDO0VBQ2pDLDJCQUEyQjtFQUMzQixpQkFBaUI7QUFDbkJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmRldGFpbHMtY29udGFpbmVyIHtcXG4gIHdpZHRoOiAzMTVweDtcXG4gIGhlaWdodDogNDk1cHg7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA0MHB4IDFmcjtcXG4gIGdhcDogMjBweDtcXG4gIHBhZGRpbmc6IDEwcHggMTVweDtcXG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGJveC1zaGFkb3c6IDNweCAzcHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHRvcDogNTAlO1xcbiAgbGVmdDogNTAlO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxufVxcblxcbi5kZXRhaWxzLXRvcC1jb250YWluZXIge1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmRldGFpbHMtYm90dG9tLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ2FwOiAxNXB4O1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA5MHB4IDIyNXB4IDc1cHg7XFxuICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgcGFkZGluZzogMCAxNXB4O1xcbn1cXG5cXG4uZGV0YWlscy1wcmlvcml0eSB7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICBwYWRkaW5nOiAxcHggMTBweCAzcHggMTBweDtcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG5cXG4uZGV0YWlscy1wcmlvcml0eS1sIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWxvdy1wcmlvKTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWxvdy1wcmlvKTtcXG59XFxuXFxuLmRldGFpbHMtcHJpb3JpdHktbSB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1tZWRpdW0tcHJpbyk7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tZWRpdW0tcHJpbyk7XFxufVxcblxcbi5kZXRhaWxzLXByaW9yaXR5LWgge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taGlnaC1wcmlvKTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWhpZ2gtcHJpbyk7XFxufVxcblxcbi5kZXRhaWxzLXRpdGxlLFxcbi5kZXRhaWxzLW5vdGVzIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgb3ZlcmZsb3ctd3JhcDogYW55d2hlcmU7XFxuICBvdmVyZmxvdzogc2Nyb2xsO1xcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyAgLyogSUUgYW5kIEVkZ2UgKi9cXG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTsgIC8qIEZpcmVmb3ggKi9cXG59XFxuXFxuLyogSGlkZSBzY3JvbGxiYXIgZm9yIENocm9tZSwgU2FmYXJpIGFuZCBPcGVyYSAqL1xcbi5kZXRhaWxzLXRpdGxlOjotd2Via2l0LXNjcm9sbGJhcixcXG4uZGV0YWlscy1ub3Rlczo6LXdlYmtpdC1zY3JvbGxiYXIge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmRldGFpbHMtdGl0bGUge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgZm9udC1zaXplOiAxLjFyZW07XFxuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xcbn1cXG5cXG4uZGV0YWlscy1ub3RlcyB7XFxuICB0ZXh0LWFsaWduOiBsZWZ0O1xcbn1cXG5cXG4uZGV0YWlscy1jbG9zZS1idG4ge1xcbiAgcGFkZGluZzogMTBweCAyMHB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYWNjZW50LTEpO1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XFxuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xcbiAgZm9udC1zaXplOiAuODVyZW07XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgdHJhbnNpdGlvbjogLjVzO1xcbn1cXG5cXG4uZGV0YWlscy1jbG9zZS1idG46aG92ZXIge1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50LTEpO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01cHgpO1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5ib3gge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB0b3A6IDA7XFxuICBib3R0b206IDA7XFxuICBsZWZ0OiAwO1xcbiAgcmlnaHQ6IDA7XFxufVxcblxcbi5mb3JtLWNvbnRhaW5lciB7XFxuICB3aWR0aDogMzI1cHg7XFxuICBoZWlnaHQ6IG1pbig1ODVweCwgODUlKTtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDY1cHggMWZyO1xcbiAgZ2FwOiA1cHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGJveC1zaGFkb3c6IDNweCAzcHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTtcXG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBvdmVyZmxvdzogc2Nyb2xsO1xcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyAgLyogSUUgYW5kIEVkZ2UgKi9cXG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTsgIC8qIEZpcmVmb3ggKi9cXG59XFxuXFxuLyogSGlkZSBzY3JvbGxiYXIgZm9yIENocm9tZSwgU2FmYXJpIGFuZCBPcGVyYSAqL1xcbi5mb3JtLWNvbnRhaW5lcjo6LXdlYmtpdC1zY3JvbGxiYXIge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLnByb2plY3QtZmllbGRzLWhlaWdodCB7XFxuICBoZWlnaHQ6IG1pbigyNDVweCwgODUlKTtcXG59XFxuXFxuLmZvcm0tdG9wLWNvbnRhaW5lciB7XFxuICBncmlkLXJvdzogMSAvIDI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQtMyk7XFxuICBib3JkZXItcmFkaXVzOiA4cHggOHB4IDAgMDtcXG59XFxuXFxuLmZvcm0tdG9kby1idG4sXFxuLmZvcm0tcHJvamVjdC1idG4ge1xcbiAgd2lkdGg6IGNsYW1wKDUwJSwgMTAwJSwgMTAwJSk7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBjb2xvcjogd2hpdGU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1ib3R0b206IDRweCBzb2xpZCB3aGl0ZTtcXG4gIG91dGxpbmU6IG5vbmU7XFxuICBmb250LXNpemU6IDEuMnJlbTtcXG4gIHRyYW5zaXRpb246IC41cztcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XFxufVxcblxcbi5mb3JtLWZpZWxkcy1jb250YWluZXIge1xcbiAgZ3JpZC1yb3c6IDIgLyAzO1xcbn1cXG5cXG4uZm9ybS1taWRkbGUtY29udGFpbmVyIHtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xcbiAgcGFkZGluZzogMHB4IDE1cHg7XFxufVxcblxcbi5mb3JtLXRpdGxlLWlucHV0LFxcbi5mb3JtLW5vdGVzLWlucHV0IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wNSk7XFxuICBvdXRsaW5lOiBub25lO1xcbiAgcmVzaXplOiBub25lO1xcbiAgcGFkZGluZzogMTVweCAxMHB4IDEwcHg7XFxuICBvdmVyZmxvdzogc2Nyb2xsO1xcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyAgLyogSUUgYW5kIEVkZ2UgKi9cXG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTsgIC8qIEZpcmVmb3ggKi9cXG59XFxuXFxuLyogSGlkZSBzY3JvbGxiYXIgZm9yIENocm9tZSwgU2FmYXJpIGFuZCBPcGVyYSAqL1xcbi5mb3JtLXRpdGxlLWlucHV0Ojotd2Via2l0LXNjcm9sbGJhcixcXG4uZm9ybS1ub3Rlcy1pbnB1dDo6LXdlYmtpdC1zY3JvbGxiYXIge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZvcm0tdGl0bGUtaW5wdXQge1xcbiAgaGVpZ2h0OiA3NXB4O1xcbn1cXG5cXG4uZm9ybS1ub3Rlcy1pbnB1dCB7XFxuICBoZWlnaHQ6IDE2NXB4O1xcbn1cXG5cXG4uZm9ybS1kdWUtZGF0ZS1jb250YWluZXIsXFxuLmZvcm0tcHJpb3JpdHktY29udGFpbmVyIHtcXG4gIGdhcDogMTNweDtcXG4gIG1hcmdpbi10b3A6IDI0cHg7XFxufVxcblxcbi5mb3JtLWR1ZS1kYXRlLWxhYmVsIHtcXG4gIGZvbnQtc2l6ZTogMS4wNXJlbTtcXG59XFxuXFxuLmZvcm0tZHVlLWRhdGUtaW5wdXQge1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgYm9yZGVyOiAycHggc29saWQgcmdiYSgyNiwgMTY3LCAxMjUsIDAuNSk7XFxuICBvdXRsaW5lOiBub25lO1xcbiAgcGFkZGluZzogNXB4IDEwcHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBjb2xvcjogYmxhY2s7XFxufVxcblxcbi5mb3JtLXByaW9yaXR5LXRpdGxlIHtcXG4gIGZvbnQtc2l6ZTogMS4xNXJlbTtcXG59XFxuXFxuLmZvcm0tcHJpb3JpdHktb3B0aW9ucy1jb250YWluZXIge1xcbiAgZ2FwOiA0cHg7XFxufVxcblxcbi5mb3JtLXByaW9yaXR5LWxhYmVsIHtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIHBhZGRpbmc6IDFweCA3cHggM3B4IDdweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHRyYW5zaXRpb246IC4yNXM7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG59XFxuXFxuLmwtcHJpby1sYWJlbCB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1sb3ctcHJpbyk7XFxuICBjb2xvcjogdmFyKC0tbG93LXByaW8pO1xcbn1cXG5cXG4ubS1wcmlvLWxhYmVsIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLW1lZGl1bS1wcmlvKTtcXG4gIGNvbG9yOiB2YXIoLS1tZWRpdW0tcHJpbyk7XFxufVxcblxcbi5oLXByaW8tbGFiZWwge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taGlnaC1wcmlvKTtcXG4gIGNvbG9yOiB2YXIoLS1oaWdoLXByaW8pO1xcbiAgbWFyZ2luLXJpZ2h0OiAxOHB4O1xcbn1cXG5cXG4uZm9ybS1wcmlvcml0eS1yYWRpbzpjaGVja2VkICsgLmwtcHJpby1sYWJlbCB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1sb3ctcHJpbyk7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1sb3ctcHJpbyk7XFxufVxcblxcbi5mb3JtLXByaW9yaXR5LXJhZGlvOmNoZWNrZWQgKyAubS1wcmlvLWxhYmVsIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLW1lZGl1bS1wcmlvKTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1lZGl1bS1wcmlvKTtcXG59XFxuXFxuLmZvcm0tcHJpb3JpdHktcmFkaW86Y2hlY2tlZCArIC5oLXByaW8tbGFiZWwge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taGlnaC1wcmlvKTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWhpZ2gtcHJpbyk7XFxufVxcblxcbi5mb3JtLXByaW9yaXR5LXJhZGlvOmNoZWNrZWQgKyAuZm9ybS1wcmlvcml0eS1sYWJlbCB7XFxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XFxuICBjb2xvcjogd2hpdGU7XFxufVxcblxcbi5mb3JtLWJvdHRvbS1jb250YWluZXIge1xcbiAgZ2FwOiAxNXB4O1xcbiAgbWFyZ2luOiAzNXB4IDAgMjVweCAwO1xcbn1cXG5cXG4uZm9ybS1vay1idG4sXFxuLmZvcm0tY2FuY2VsLWJ0biB7XFxuICB3aWR0aDogMTA1cHg7XFxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBsZXR0ZXItc3BhY2luZzogMXB4O1xcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcXG4gIGZvbnQtc2l6ZTogLjg1cmVtO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHRyYW5zaXRpb246IC41cztcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uZm9ybS1vay1idG4ge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYWNjZW50LTEpO1xcbiAgY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG59XFxuXFxuLmZvcm0tY2FuY2VsLWJ0biB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1hY2NlbnQtMyk7XFxuICBjb2xvcjogdmFyKC0tYWNjZW50LTMpO1xcbn1cXG5cXG4uZm9ybS1vay1idG46aG92ZXIsXFxuLmZvcm0tY2FuY2VsLWJ0bjpob3ZlciB7XFxuICBjb2xvcjogd2hpdGU7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG59XFxuXFxuLmZvcm0tb2stYnRuOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG59XFxuXFxuLmZvcm0tY2FuY2VsLWJ0bjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQtMyk7XFxufVxcblxcbi5ib3JkZXItYnRtLWIge1xcbiAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkIGJsYWNrO1xcbn1cXG5cXG4uYm9yZGVyLWJ0bS13IHtcXG4gIGJvcmRlci1ib3R0b206IDRweCBzb2xpZCB3aGl0ZTtcXG59XFxuXFxuLm5vLXBvaW50ZXItZXZlbnRzIHtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY29tcG9uZW50cy90b2RvRm9ybS90b2RvRm9ybS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGVBQWU7RUFDZixNQUFNO0VBQ04sU0FBUztFQUNULE9BQU87RUFDUCxRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxZQUFZO0VBQ1osdUJBQXVCO0VBQ3ZCLGFBQWE7RUFDYiw0QkFBNEI7RUFDNUIsUUFBUTtFQUNSLHVCQUF1QjtFQUN2Qiw2Q0FBNkM7RUFDN0MsK0JBQStCO0VBQy9CLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsd0JBQXdCLEdBQUcsZ0JBQWdCO0VBQzNDLHFCQUFxQixHQUFHLFlBQVk7QUFDdEM7O0FBRUEsZ0RBQWdEO0FBQ2hEO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGlDQUFpQztFQUNqQywwQkFBMEI7QUFDNUI7O0FBRUE7O0VBRUUsNkJBQTZCO0VBQzdCLFlBQVk7RUFDWixZQUFZO0VBQ1osNkJBQTZCO0VBQzdCLFlBQVk7RUFDWiw4QkFBOEI7RUFDOUIsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsZUFBZTtFQUNmLHFDQUFxQztBQUN2Qzs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsc0JBQXNCO0VBQ3RCLGlCQUFpQjtBQUNuQjs7QUFFQTs7RUFFRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLDRDQUE0QztFQUM1QyxhQUFhO0VBQ2IsWUFBWTtFQUNaLHVCQUF1QjtFQUN2QixnQkFBZ0I7RUFDaEIsd0JBQXdCLEdBQUcsZ0JBQWdCO0VBQzNDLHFCQUFxQixHQUFHLFlBQVk7QUFDdEM7O0FBRUEsZ0RBQWdEO0FBQ2hEOztFQUVFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTs7RUFFRSxTQUFTO0VBQ1QsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHlDQUF5QztFQUN6QyxhQUFhO0VBQ2IsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsd0JBQXdCO0VBQ3hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGlDQUFpQztFQUNqQyxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxvQ0FBb0M7RUFDcEMseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0Usa0NBQWtDO0VBQ2xDLHVCQUF1QjtFQUN2QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0Usb0NBQW9DO0VBQ3BDLG9DQUFvQztBQUN0Qzs7QUFFQTtFQUNFLGtDQUFrQztFQUNsQyxrQ0FBa0M7QUFDcEM7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsU0FBUztFQUNULHFCQUFxQjtBQUN2Qjs7QUFFQTs7RUFFRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIscUNBQXFDO0VBQ3JDLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGVBQWU7RUFDZix1QkFBdUI7RUFDdkIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGlDQUFpQztFQUNqQyxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsc0JBQXNCO0FBQ3hCOztBQUVBOztFQUVFLFlBQVk7RUFDWiwyQkFBMkI7RUFDM0IsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0UsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0UsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0UsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0Usb0JBQW9CO0FBQ3RCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5ib3gge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB0b3A6IDA7XFxuICBib3R0b206IDA7XFxuICBsZWZ0OiAwO1xcbiAgcmlnaHQ6IDA7XFxufVxcblxcbi5mb3JtLWNvbnRhaW5lciB7XFxuICB3aWR0aDogMzI1cHg7XFxuICBoZWlnaHQ6IG1pbig1ODVweCwgODUlKTtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDY1cHggMWZyO1xcbiAgZ2FwOiA1cHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGJveC1zaGFkb3c6IDNweCAzcHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjI1KTtcXG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBvdmVyZmxvdzogc2Nyb2xsO1xcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyAgLyogSUUgYW5kIEVkZ2UgKi9cXG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTsgIC8qIEZpcmVmb3ggKi9cXG59XFxuXFxuLyogSGlkZSBzY3JvbGxiYXIgZm9yIENocm9tZSwgU2FmYXJpIGFuZCBPcGVyYSAqL1xcbi5mb3JtLWNvbnRhaW5lcjo6LXdlYmtpdC1zY3JvbGxiYXIge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLnByb2plY3QtZmllbGRzLWhlaWdodCB7XFxuICBoZWlnaHQ6IG1pbigyNDVweCwgODUlKTtcXG59XFxuXFxuLmZvcm0tdG9wLWNvbnRhaW5lciB7XFxuICBncmlkLXJvdzogMSAvIDI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQtMyk7XFxuICBib3JkZXItcmFkaXVzOiA4cHggOHB4IDAgMDtcXG59XFxuXFxuLmZvcm0tdG9kby1idG4sXFxuLmZvcm0tcHJvamVjdC1idG4ge1xcbiAgd2lkdGg6IGNsYW1wKDUwJSwgMTAwJSwgMTAwJSk7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBjb2xvcjogd2hpdGU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1ib3R0b206IDRweCBzb2xpZCB3aGl0ZTtcXG4gIG91dGxpbmU6IG5vbmU7XFxuICBmb250LXNpemU6IDEuMnJlbTtcXG4gIHRyYW5zaXRpb246IC41cztcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XFxufVxcblxcbi5mb3JtLWZpZWxkcy1jb250YWluZXIge1xcbiAgZ3JpZC1yb3c6IDIgLyAzO1xcbn1cXG5cXG4uZm9ybS1taWRkbGUtY29udGFpbmVyIHtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xcbiAgcGFkZGluZzogMHB4IDE1cHg7XFxufVxcblxcbi5mb3JtLXRpdGxlLWlucHV0LFxcbi5mb3JtLW5vdGVzLWlucHV0IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4wNSk7XFxuICBvdXRsaW5lOiBub25lO1xcbiAgcmVzaXplOiBub25lO1xcbiAgcGFkZGluZzogMTVweCAxMHB4IDEwcHg7XFxuICBvdmVyZmxvdzogc2Nyb2xsO1xcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyAgLyogSUUgYW5kIEVkZ2UgKi9cXG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTsgIC8qIEZpcmVmb3ggKi9cXG59XFxuXFxuLyogSGlkZSBzY3JvbGxiYXIgZm9yIENocm9tZSwgU2FmYXJpIGFuZCBPcGVyYSAqL1xcbi5mb3JtLXRpdGxlLWlucHV0Ojotd2Via2l0LXNjcm9sbGJhcixcXG4uZm9ybS1ub3Rlcy1pbnB1dDo6LXdlYmtpdC1zY3JvbGxiYXIge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmZvcm0tdGl0bGUtaW5wdXQge1xcbiAgaGVpZ2h0OiA3NXB4O1xcbn1cXG5cXG4uZm9ybS1ub3Rlcy1pbnB1dCB7XFxuICBoZWlnaHQ6IDE2NXB4O1xcbn1cXG5cXG4uZm9ybS1kdWUtZGF0ZS1jb250YWluZXIsXFxuLmZvcm0tcHJpb3JpdHktY29udGFpbmVyIHtcXG4gIGdhcDogMTNweDtcXG4gIG1hcmdpbi10b3A6IDI0cHg7XFxufVxcblxcbi5mb3JtLWR1ZS1kYXRlLWxhYmVsIHtcXG4gIGZvbnQtc2l6ZTogMS4wNXJlbTtcXG59XFxuXFxuLmZvcm0tZHVlLWRhdGUtaW5wdXQge1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgYm9yZGVyOiAycHggc29saWQgcmdiYSgyNiwgMTY3LCAxMjUsIDAuNSk7XFxuICBvdXRsaW5lOiBub25lO1xcbiAgcGFkZGluZzogNXB4IDEwcHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBjb2xvcjogYmxhY2s7XFxufVxcblxcbi5mb3JtLXByaW9yaXR5LXRpdGxlIHtcXG4gIGZvbnQtc2l6ZTogMS4xNXJlbTtcXG59XFxuXFxuLmZvcm0tcHJpb3JpdHktb3B0aW9ucy1jb250YWluZXIge1xcbiAgZ2FwOiA0cHg7XFxufVxcblxcbi5mb3JtLXByaW9yaXR5LWxhYmVsIHtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIHBhZGRpbmc6IDFweCA3cHggM3B4IDdweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHRyYW5zaXRpb246IC4yNXM7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG59XFxuXFxuLmwtcHJpby1sYWJlbCB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1sb3ctcHJpbyk7XFxuICBjb2xvcjogdmFyKC0tbG93LXByaW8pO1xcbn1cXG5cXG4ubS1wcmlvLWxhYmVsIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLW1lZGl1bS1wcmlvKTtcXG4gIGNvbG9yOiB2YXIoLS1tZWRpdW0tcHJpbyk7XFxufVxcblxcbi5oLXByaW8tbGFiZWwge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taGlnaC1wcmlvKTtcXG4gIGNvbG9yOiB2YXIoLS1oaWdoLXByaW8pO1xcbiAgbWFyZ2luLXJpZ2h0OiAxOHB4O1xcbn1cXG5cXG4uZm9ybS1wcmlvcml0eS1yYWRpbzpjaGVja2VkICsgLmwtcHJpby1sYWJlbCB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1sb3ctcHJpbyk7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1sb3ctcHJpbyk7XFxufVxcblxcbi5mb3JtLXByaW9yaXR5LXJhZGlvOmNoZWNrZWQgKyAubS1wcmlvLWxhYmVsIHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLW1lZGl1bS1wcmlvKTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1lZGl1bS1wcmlvKTtcXG59XFxuXFxuLmZvcm0tcHJpb3JpdHktcmFkaW86Y2hlY2tlZCArIC5oLXByaW8tbGFiZWwge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taGlnaC1wcmlvKTtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWhpZ2gtcHJpbyk7XFxufVxcblxcbi5mb3JtLXByaW9yaXR5LXJhZGlvOmNoZWNrZWQgKyAuZm9ybS1wcmlvcml0eS1sYWJlbCB7XFxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XFxuICBjb2xvcjogd2hpdGU7XFxufVxcblxcbi5mb3JtLWJvdHRvbS1jb250YWluZXIge1xcbiAgZ2FwOiAxNXB4O1xcbiAgbWFyZ2luOiAzNXB4IDAgMjVweCAwO1xcbn1cXG5cXG4uZm9ybS1vay1idG4sXFxuLmZvcm0tY2FuY2VsLWJ0biB7XFxuICB3aWR0aDogMTA1cHg7XFxuICBwYWRkaW5nOiAxMHB4IDIwcHg7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBsZXR0ZXItc3BhY2luZzogMXB4O1xcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcXG4gIGZvbnQtc2l6ZTogLjg1cmVtO1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHRyYW5zaXRpb246IC41cztcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uZm9ybS1vay1idG4ge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYWNjZW50LTEpO1xcbiAgY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG59XFxuXFxuLmZvcm0tY2FuY2VsLWJ0biB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1hY2NlbnQtMyk7XFxuICBjb2xvcjogdmFyKC0tYWNjZW50LTMpO1xcbn1cXG5cXG4uZm9ybS1vay1idG46aG92ZXIsXFxuLmZvcm0tY2FuY2VsLWJ0bjpob3ZlciB7XFxuICBjb2xvcjogd2hpdGU7XFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG59XFxuXFxuLmZvcm0tb2stYnRuOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG59XFxuXFxuLmZvcm0tY2FuY2VsLWJ0bjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQtMyk7XFxufVxcblxcbi5ib3JkZXItYnRtLWIge1xcbiAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkIGJsYWNrO1xcbn1cXG5cXG4uYm9yZGVyLWJ0bS13IHtcXG4gIGJvcmRlci1ib3R0b206IDRweCBzb2xpZCB3aGl0ZTtcXG59XFxuXFxuLm5vLXBvaW50ZXItZXZlbnRzIHtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIi4vY2hlY2sucG5nXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLml0ZW0tY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGdhcDogMTVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC0yKTtcXG4gIHBhZGRpbmc6IDE0cHggMTBweDtcXG4gIG1hcmdpbi1ib3R0b206IDhweDtcXG4gIHRyYW5zaXRpb246IC4yNXM7XFxuICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4uaXRlbS1jb250YWluZXI6aG92ZXIge1xcbiAgYm94LXNoYWRvdzogMnB4IDJweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xcHgpO1xcbn1cXG5cXG4uaXRlbS1jb250YWluZXI6bGFzdC1jaGlsZCB7XFxuICBtYXJnaW4tYm90dG9tOiAwO1xcbn1cXG5cXG4uaXRlbS1jb250YWluZXI6aGFzKC5pdGVtLWNoZWNrYm94LmNoZWNrZWQpOjpiZWZvcmUge1xcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDM0cHggLSAzNHB4KTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgbGVmdDogMzRweDtcXG4gIHJpZ2h0OiAzNHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNDAsIDI0MCwgMjQwLCAwLjgpO1xcbiAgZmlsdGVyOiBibHVyKDFweCk7XFxufVxcblxcbi5pdGVtLWxlZnQtY29udGFpbmVyIHtcXG4gIGdhcDogMTJweDtcXG59XFxuXFxuLml0ZW0tcmlnaHQtY29udGFpbmVyIHtcXG4gIGdhcDogMTRweDtcXG59XFxuXFxuLml0ZW0tY2hlY2tib3gge1xcbiAgd2lkdGg6IDE5cHg7XFxuICBoZWlnaHQ6IDE5cHg7XFxuICBwb3NpdGlvbjpyZWxhdGl2ZTtcXG4gIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWFjY2VudC0xKTtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgZm9udC1zaXplOiAxLjJyZW07XFxufVxcblxcbi5jaGVja2VkIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG59XFxuXFxuLmNoZWNrZWQuaXRlbS1jaGVja2JveDo6YmVmb3JlIHtcXG4gIHdpZHRoOiAxMXB4O1xcbiAgaGVpZ2h0OiAxMXB4O1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDUwJTtcXG4gIGxlZnQ6IDUwJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKTtcXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcbn1cXG5cXG4ubm8tcG9pbnRlci1ldmVudHMge1xcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxuICBjdXJzb3I6IGF1dG87XFxufVxcblxcbi5pdGVtLWNvbnRhaW5lci5uby1wb2ludGVyLWV2ZW50cyAuaXRlbS1jaGVja2JveCxcXG4uaXRlbS1jb250YWluZXIubm8tcG9pbnRlci1ldmVudHMgLml0ZW0tdHJhc2gtaWNvbiB7XFxuICBwb2ludGVyLWV2ZW50czogYWxsO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uaXRlbS10aXRsZSB7XFxuICB3aWR0aDogMTAwcHg7XFxuICBmb250LXNpemU6IDFyZW07XFxuICBvdmVyZmxvdy13cmFwOiBhbnl3aGVyZTtcXG59XFxuXFxuLml0ZW0tZHVlLWRhdGUge1xcbiAgZm9udC1zaXplOiAuOXJlbTtcXG59XFxuXFxuLml0ZW0tZWRpdC1pY29uIHtcXG4gIG1hcmdpbi1sZWZ0OiAycHg7XFxufVxcblxcbi5pdGVtLWVkaXQtaWNvbixcXG4uaXRlbS1tb3ZlLWljb24sXFxuLml0ZW0tdHJhc2gtaWNvbiAge1xcbiAgd2lkdGg6IHZhcigtLWljb24td2lkdGgtMSk7XFxuICBoZWlnaHQ6IHZhcigtLWljb24taGVpZ2h0LTEpO1xcbiAgdHJhbnNpdGlvbjogLjM1cztcXG59XFxuXFxuLml0ZW0tZWRpdC1pY29uOmhvdmVyLFxcbi5pdGVtLW1vdmUtaWNvbjpob3ZlcixcXG4uaXRlbS10cmFzaC1pY29uOmhvdmVyIHtcXG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcXG59XFxuXFxuLml0ZW0tY29udGFpbmVyLFxcbi5pdGVtLWNoZWNrYm94LFxcbi5pdGVtLWVkaXQtaWNvbixcXG4uaXRlbS1tb3ZlLWljb24sXFxuLml0ZW0tdHJhc2gtaWNvbiB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiAzODBweCkge1xcbiAgLml0ZW0tdGl0bGUge1xcbiAgICB3aWR0aDogMTI1cHg7XFxuICB9XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA0MDBweCkge1xcbiAgLml0ZW0tdGl0bGUge1xcbiAgICB3aWR0aDogMTQ1cHg7XFxuICB9XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA0NTBweCkge1xcbiAgLml0ZW0tdGl0bGUge1xcbiAgICB3aWR0aDogMTg1cHg7XFxuICB9XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA1MDBweCkge1xcbiAgLml0ZW0tdGl0bGUge1xcbiAgICB3aWR0aDogMjQwcHg7XFxuICB9XFxufVxcblxcbkBtZWRpYSAobWluLXdpZHRoOiA2NTBweCkge1xcbiAgLml0ZW0tdGl0bGUge1xcbiAgICB3aWR0aDogMjAwcHg7XFxuICB9XFxuICBcXG4gIC5pdGVtLXJpZ2h0LWNvbnRhaW5lciB7XFxuICAgIGdhcDogMThweDtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDc1MHB4KSB7XFxuICAuaXRlbS10aXRsZSB7XFxuICAgIHdpZHRoOiAyNzBweDtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDg1MHB4KSB7XFxuICAuaXRlbS10aXRsZSB7XFxuICAgIHdpZHRoOiAzMzVweDtcXG4gIH1cXG59XFxuXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvdG9kb0l0ZW0vdG9kb0l0ZW0uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsV0FBVztFQUNYLDhCQUE4QjtFQUM5QixtQkFBbUI7RUFDbkIsU0FBUztFQUNULGlDQUFpQztFQUNqQyxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQiwrQkFBK0I7RUFDL0Isa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsNkNBQTZDO0VBQzdDLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLCtCQUErQjtFQUMvQixZQUFZO0VBQ1osV0FBVztFQUNYLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsV0FBVztFQUNYLDBDQUEwQztFQUMxQyxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxTQUFTO0FBQ1g7O0FBRUE7RUFDRSxTQUFTO0FBQ1g7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixpQ0FBaUM7RUFDakMsa0JBQWtCO0VBQ2xCLHVCQUF1QjtFQUN2QixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7RUFDVCxnQ0FBZ0M7RUFDaEMseURBQW9DO0VBQ3BDLHNCQUFzQjtFQUN0Qiw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSxvQkFBb0I7RUFDcEIsWUFBWTtBQUNkOztBQUVBOztFQUVFLG1CQUFtQjtFQUNuQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGVBQWU7RUFDZix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7OztFQUdFLDBCQUEwQjtFQUMxQiw0QkFBNEI7RUFDNUIsZ0JBQWdCO0FBQ2xCOztBQUVBOzs7RUFHRSxxQkFBcUI7QUFDdkI7O0FBRUE7Ozs7O0VBS0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFO0lBQ0UsWUFBWTtFQUNkO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLFlBQVk7RUFDZDtBQUNGOztBQUVBO0VBQ0U7SUFDRSxZQUFZO0VBQ2Q7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsWUFBWTtFQUNkO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLFlBQVk7RUFDZDs7RUFFQTtJQUNFLFNBQVM7RUFDWDtBQUNGOztBQUVBO0VBQ0U7SUFDRSxZQUFZO0VBQ2Q7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsWUFBWTtFQUNkO0FBQ0ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLml0ZW0tY29udGFpbmVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGdhcDogMTVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC0yKTtcXG4gIHBhZGRpbmc6IDE0cHggMTBweDtcXG4gIG1hcmdpbi1ib3R0b206IDhweDtcXG4gIHRyYW5zaXRpb246IC4yNXM7XFxuICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4uaXRlbS1jb250YWluZXI6aG92ZXIge1xcbiAgYm94LXNoYWRvdzogMnB4IDJweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xcHgpO1xcbn1cXG5cXG4uaXRlbS1jb250YWluZXI6bGFzdC1jaGlsZCB7XFxuICBtYXJnaW4tYm90dG9tOiAwO1xcbn1cXG5cXG4uaXRlbS1jb250YWluZXI6aGFzKC5pdGVtLWNoZWNrYm94LmNoZWNrZWQpOjpiZWZvcmUge1xcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDM0cHggLSAzNHB4KTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgbGVmdDogMzRweDtcXG4gIHJpZ2h0OiAzNHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNDAsIDI0MCwgMjQwLCAwLjgpO1xcbiAgZmlsdGVyOiBibHVyKDFweCk7XFxufVxcblxcbi5pdGVtLWxlZnQtY29udGFpbmVyIHtcXG4gIGdhcDogMTJweDtcXG59XFxuXFxuLml0ZW0tcmlnaHQtY29udGFpbmVyIHtcXG4gIGdhcDogMTRweDtcXG59XFxuXFxuLml0ZW0tY2hlY2tib3gge1xcbiAgd2lkdGg6IDE5cHg7XFxuICBoZWlnaHQ6IDE5cHg7XFxuICBwb3NpdGlvbjpyZWxhdGl2ZTtcXG4gIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWFjY2VudC0xKTtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgZm9udC1zaXplOiAxLjJyZW07XFxufVxcblxcbi5jaGVja2VkIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC0xKTtcXG59XFxuXFxuLmNoZWNrZWQuaXRlbS1jaGVja2JveDo6YmVmb3JlIHtcXG4gIHdpZHRoOiAxMXB4O1xcbiAgaGVpZ2h0OiAxMXB4O1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDUwJTtcXG4gIGxlZnQ6IDUwJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCIuL2NoZWNrLnBuZ1xcXCIpO1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxufVxcblxcbi5uby1wb2ludGVyLWV2ZW50cyB7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gIGN1cnNvcjogYXV0bztcXG59XFxuXFxuLml0ZW0tY29udGFpbmVyLm5vLXBvaW50ZXItZXZlbnRzIC5pdGVtLWNoZWNrYm94LFxcbi5pdGVtLWNvbnRhaW5lci5uby1wb2ludGVyLWV2ZW50cyAuaXRlbS10cmFzaC1pY29uIHtcXG4gIHBvaW50ZXItZXZlbnRzOiBhbGw7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5pdGVtLXRpdGxlIHtcXG4gIHdpZHRoOiAxMDBweDtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG4gIG92ZXJmbG93LXdyYXA6IGFueXdoZXJlO1xcbn1cXG5cXG4uaXRlbS1kdWUtZGF0ZSB7XFxuICBmb250LXNpemU6IC45cmVtO1xcbn1cXG5cXG4uaXRlbS1lZGl0LWljb24ge1xcbiAgbWFyZ2luLWxlZnQ6IDJweDtcXG59XFxuXFxuLml0ZW0tZWRpdC1pY29uLFxcbi5pdGVtLW1vdmUtaWNvbixcXG4uaXRlbS10cmFzaC1pY29uICB7XFxuICB3aWR0aDogdmFyKC0taWNvbi13aWR0aC0xKTtcXG4gIGhlaWdodDogdmFyKC0taWNvbi1oZWlnaHQtMSk7XFxuICB0cmFuc2l0aW9uOiAuMzVzO1xcbn1cXG5cXG4uaXRlbS1lZGl0LWljb246aG92ZXIsXFxuLml0ZW0tbW92ZS1pY29uOmhvdmVyLFxcbi5pdGVtLXRyYXNoLWljb246aG92ZXIge1xcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xcbn1cXG5cXG4uaXRlbS1jb250YWluZXIsXFxuLml0ZW0tY2hlY2tib3gsXFxuLml0ZW0tZWRpdC1pY29uLFxcbi5pdGVtLW1vdmUtaWNvbixcXG4uaXRlbS10cmFzaC1pY29uIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDM4MHB4KSB7XFxuICAuaXRlbS10aXRsZSB7XFxuICAgIHdpZHRoOiAxMjVweDtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDQwMHB4KSB7XFxuICAuaXRlbS10aXRsZSB7XFxuICAgIHdpZHRoOiAxNDVweDtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDQ1MHB4KSB7XFxuICAuaXRlbS10aXRsZSB7XFxuICAgIHdpZHRoOiAxODVweDtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDUwMHB4KSB7XFxuICAuaXRlbS10aXRsZSB7XFxuICAgIHdpZHRoOiAyNDBweDtcXG4gIH1cXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6IDY1MHB4KSB7XFxuICAuaXRlbS10aXRsZSB7XFxuICAgIHdpZHRoOiAyMDBweDtcXG4gIH1cXG4gIFxcbiAgLml0ZW0tcmlnaHQtY29udGFpbmVyIHtcXG4gICAgZ2FwOiAxOHB4O1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogNzUwcHgpIHtcXG4gIC5pdGVtLXRpdGxlIHtcXG4gICAgd2lkdGg6IDI3MHB4O1xcbiAgfVxcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDogODUwcHgpIHtcXG4gIC5pdGVtLXRpdGxlIHtcXG4gICAgd2lkdGg6IDMzNXB4O1xcbiAgfVxcbn1cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIi4vYmctd2FsbHBhcGVyLmpwZ1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9QWxhdHNpJmZhbWlseT1KZXRCcmFpbnMrTW9ubzp3Z2h0QDIwMCZmYW1pbHk9TGF0bzp3Z2h0QDEwMDszMDAmZmFtaWx5PUxvYnN0ZXImZmFtaWx5PU1vbnRzZXJyYXQrQWx0ZXJuYXRlczp3Z2h0QDMwMDs0MDAmZmFtaWx5PU1vbnRzZXJyYXQ6d2dodEAyMDA7MzAwOzQwMCZmYW1pbHk9UFQrTW9ubyZmYW1pbHk9UHJlc3MrU3RhcnQrMlAmZGlzcGxheT1zd2FwKTtcIl0pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIjpyb290IHtcXG4gIC0tYWNjZW50LTE6IHJnYigyNiwgMTY3LCAxMjUpO1xcbiAgLS1hY2NlbnQtMjogcmdiKDI0MCwgMjQwLCAyNDApO1xcbiAgLyogLS1hY2NlbnQtMzogcmdiKDI1NSwgNjIsIDEwMSk7ICovXFxuICAtLWFjY2VudC0zOiAjY2M3ZTk3O1xcbiAgLS1hY2NlbnQtNDogcmdiKDQ1LCA0NSwgNDUpO1xcbiAgLS1hY2NlbnQtNTogcmdiYSgyMjAsIDIyMCwgMjIwLCAwLjUpO1xcbiAgLS1hY2NlbnQtNjogcmdiYSgyMDUsIDIwNSwgMjA1LCAwLjY1KTtcXG4gIC0tbG93LXByaW86IHJnYig0MCwgMjA3LCA0MCk7XFxuICAtLW1lZGl1bS1wcmlvOiByZ2IoMjU1LCAxODcsIDYwKTtcXG4gIC0taGlnaC1wcmlvOiByZ2IoMjU1LCA3MCwgNzApO1xcbiAgLS1pY29uLXdpZHRoLTE6IDIwcHg7XFxuICAtLWljb24taGVpZ2h0LTE6IDIwcHg7XFxufVxcblxcbi5hcHAtY29udGFpbmVyIHtcXG4gIGhlaWdodDogMTAwdmg7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fICsgXCIpO1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb250YWluZXIvYXBwLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQTtFQUNFLDZCQUE2QjtFQUM3Qiw4QkFBOEI7RUFDOUIsbUNBQW1DO0VBQ25DLG1CQUFtQjtFQUNuQiwyQkFBMkI7RUFDM0Isb0NBQW9DO0VBQ3BDLHFDQUFxQztFQUNyQyw0QkFBNEI7RUFDNUIsZ0NBQWdDO0VBQ2hDLDZCQUE2QjtFQUM3QixvQkFBb0I7RUFDcEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHlEQUEyQztFQUMzQyxzQkFBc0I7RUFDdEIsNEJBQTRCO0VBQzVCLDJCQUEyQjtBQUM3QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1BbGF0c2kmZmFtaWx5PUpldEJyYWlucytNb25vOndnaHRAMjAwJmZhbWlseT1MYXRvOndnaHRAMTAwOzMwMCZmYW1pbHk9TG9ic3RlciZmYW1pbHk9TW9udHNlcnJhdCtBbHRlcm5hdGVzOndnaHRAMzAwOzQwMCZmYW1pbHk9TW9udHNlcnJhdDp3Z2h0QDIwMDszMDA7NDAwJmZhbWlseT1QVCtNb25vJmZhbWlseT1QcmVzcytTdGFydCsyUCZkaXNwbGF5PXN3YXAnKTtcXG5cXG46cm9vdCB7XFxuICAtLWFjY2VudC0xOiByZ2IoMjYsIDE2NywgMTI1KTtcXG4gIC0tYWNjZW50LTI6IHJnYigyNDAsIDI0MCwgMjQwKTtcXG4gIC8qIC0tYWNjZW50LTM6IHJnYigyNTUsIDYyLCAxMDEpOyAqL1xcbiAgLS1hY2NlbnQtMzogI2NjN2U5NztcXG4gIC0tYWNjZW50LTQ6IHJnYig0NSwgNDUsIDQ1KTtcXG4gIC0tYWNjZW50LTU6IHJnYmEoMjIwLCAyMjAsIDIyMCwgMC41KTtcXG4gIC0tYWNjZW50LTY6IHJnYmEoMjA1LCAyMDUsIDIwNSwgMC42NSk7XFxuICAtLWxvdy1wcmlvOiByZ2IoNDAsIDIwNywgNDApO1xcbiAgLS1tZWRpdW0tcHJpbzogcmdiKDI1NSwgMTg3LCA2MCk7XFxuICAtLWhpZ2gtcHJpbzogcmdiKDI1NSwgNzAsIDcwKTtcXG4gIC0taWNvbi13aWR0aC0xOiAyMHB4O1xcbiAgLS1pY29uLWhlaWdodC0xOiAyMHB4O1xcbn1cXG5cXG4uYXBwLWNvbnRhaW5lciB7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCIuL2JnLXdhbGxwYXBlci5qcGdcXFwiKTtcXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIqLFxcbio6OmJlZm9yZSxcXG4qOjphZnRlciB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuLyogVXRpbGl0aWVzICovXFxuLmZsZXgge1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLmZsZXgtY29sdW1uIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uY2VudGVyIHtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmhpZGRlbiB7XFxuICBvcGFjaXR5OiAwO1xcbn1cXG5cXG4uZGlzYWJsZWQge1xcbiAgZmlsdGVyOiBibHVyKDFweCkgZ3JheXNjYWxlKDUwJSkgYnJpZ2h0bmVzcyg1MCUpO1xcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9pbmRleC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7OztFQUdFLFNBQVM7RUFDVCxVQUFVO0VBQ1Ysc0JBQXNCO0FBQ3hCOztBQUVBLGNBQWM7QUFDZDtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsZ0RBQWdEO0VBQ2hELG9CQUFvQjtBQUN0QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqLFxcbio6OmJlZm9yZSxcXG4qOjphZnRlciB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuLyogVXRpbGl0aWVzICovXFxuLmZsZXgge1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLmZsZXgtY29sdW1uIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uY2VudGVyIHtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmhpZGRlbiB7XFxuICBvcGFjaXR5OiAwO1xcbn1cXG5cXG4uZGlzYWJsZWQge1xcbiAgZmlsdGVyOiBibHVyKDFweCkgZ3JheXNjYWxlKDUwJSkgYnJpZ2h0bmVzcyg1MCUpO1xcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7IC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfSAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG5cblxuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hcHAuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hcHAuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NvbnRlbnRCb3guY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jb250ZW50Qm94LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9uYXZiYXIuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9uYXZiYXIuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3RvZG9Gb3JtLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdG9kb0Zvcm0uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiY29uc3Qgc2V0QXR0cmlidXRlcyA9IChlbCwgYXR0cnMpID0+IHtcbiAgZm9yIChsZXQga2V5IGluIGF0dHJzKSB7XG4gICAgZWxba2V5XSA9IGF0dHJzW2tleV07XG4gIH1cbn1cblxuY29uc3QgZ2V0UmFuZG9tTnVtSW5jbHVzaXZlID0gKG1pbiwgbWF4KSA9PiB7XG4gIG1pbiA9IE1hdGguY2VpbChtaW4pO1xuICBtYXggPSBNYXRoLmZsb29yKG1heCk7XG5cbiAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyAxKSArIG1pbik7XG59XG5cbmNvbnN0IGdlbmVyYXRlUmFuZG9tSUQgPSAodGl0bGUpID0+IHtcbiAgcmV0dXJuIGAke3RpdGxlfS0ke2dldFJhbmRvbU51bUluY2x1c2l2ZSgxLCAxMDAwMDAwKX1gO1xufVxuXG5jb25zdCBhZGRFdmVudExpc3RlbmVyVG9FbGVtcyA9IChlbGVtc0FyciwgZXZlbnQsIGZuKSA9PiB7XG4gIGVsZW1zQXJyLmZvckVhY2goZSA9PiB7XG4gICAgZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBmbik7XG4gIH0pXG59XG5cbmNvbnN0IGdldFRvZGF5SW5ZWVlZTU1ERCA9ICgpID0+IHtcbiAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gIGNvbnN0IHllYXIgPSBTdHJpbmcoZGF0ZS5nZXRGdWxsWWVhcigpKTtcbiAgY29uc3QgbW9udGggPSBTdHJpbmcoZGF0ZS5nZXRNb250aCgpICsgMSk7XG4gIGNvbnN0IGRheSA9IFN0cmluZyhkYXRlLmdldERhdGUoKSk7XG4gIFxuICByZXR1cm4gYCR7eWVhcn0tJHttb250aC5wYWRTdGFydCgyLCBcIjBcIil9LSR7ZGF5LnBhZFN0YXJ0KDIsIFwiMFwiKX1gO1xufVxuXG5jb25zdCB0cmFuc2Zvcm1Ub1RvZG9zRGF0YSA9ICh0b2Rvc0FycikgPT4ge1xuICBsZXQgdG9kb3NEYXRhID0gdG9kb3NBcnIubWFwKHRvZG8gPT4gKHtcbiAgICBpZDogdG9kby5nZXRJZCgpLFxuICAgIGNoZWNrZWQ6IHRvZG8uZ2V0Q2hlY2tlZCgpLFxuICAgIHRpdGxlOiB0b2RvLmdldFRpdGxlKCksXG4gICAgbm90ZXM6IHRvZG8uZ2V0Tm90ZXMoKSxcbiAgICBkdWVEYXRlOiB0b2RvLmdldER1ZURhdGUoKSxcbiAgICBwcmlvcml0eTogdG9kby5nZXRQcmlvcml0eSgpXG4gIH0pKTtcblxuICByZXR1cm4gdG9kb3NEYXRhO1xufVxuXG5jb25zdCB0cmFuc2Zvcm1Ub1Byb2plY3RzRGF0YSA9IChwcm9qZWN0c0FycikgPT4ge1xuICBsZXQgcHJvamVjdHNEYXRhID0gcHJvamVjdHNBcnIubWFwKHByb2plY3QgPT4gKHtcbiAgICBpZDogcHJvamVjdC5nZXRJZCgpLFxuICAgIHRvZG9zRGF0YTogdHJhbnNmb3JtVG9Ub2Rvc0RhdGEocHJvamVjdC5nZXRUb2Rvc0FycigpKSxcbiAgICB0aXRsZTogcHJvamVjdC5nZXRUaXRsZSgpXG4gIH0pKTtcblxuICByZXR1cm4gcHJvamVjdHNEYXRhO1xufVxuXG5jb25zdCB1cGRhdGVMb2NhbFN0b3JhZ2UgPSAoYXBwKSA9PiB7XG4gIGxvY2FsU3RvcmFnZS50b2Rvc0RhdGEgPSBKU09OLnN0cmluZ2lmeSh0cmFuc2Zvcm1Ub1RvZG9zRGF0YShhcHAuZ2V0VG9kb3NBcnIoKSkpO1xuICBsb2NhbFN0b3JhZ2UucHJvamVjdHNEYXRhID0gSlNPTi5zdHJpbmdpZnkodHJhbnNmb3JtVG9Qcm9qZWN0c0RhdGEoYXBwLmdldFByb2plY3RzQXJyKCkpKTtcbn1cblxuZXhwb3J0IHsgc2V0QXR0cmlidXRlcywgZ2V0UmFuZG9tTnVtSW5jbHVzaXZlLCBnZW5lcmF0ZVJhbmRvbUlELCBhZGRFdmVudExpc3RlbmVyVG9FbGVtcywgZ2V0VG9kYXlJbllZWVlNTURELCB1cGRhdGVMb2NhbFN0b3JhZ2UgfTtcbiIsImNvbnN0IGdldEFwcENvbnRhaW5lciA9ICgpID0+IHtcbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYXBwLWNvbnRhaW5lclwiKTtcbn1cblxuY29uc3QgZ2V0SG9sZGVyQm94ID0gKCkgPT4ge1xuICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5ob2xkZXItYm94LWNvbnRhaW5lclwiKTtcbn1cblxuY29uc3QgZ2V0Q29udGVudEJveCA9ICgpID0+IHtcbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29udGVudC1ib3gtY29udGFpbmVyXCIpO1xufVxuXG5jb25zdCBhcHBlbmRUb1Jvb3QgPSAoZWxlbSkgPT4ge1xuICBjb25zdCByb290ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNyb290XCIpO1xuXG4gIHJvb3QuYXBwZW5kKGVsZW0pO1xufVxuXG5jb25zdCBhcHBlbmRUb0hvbGRlckJveCA9IChlbGVtKSA9PiB7XG4gIGNvbnN0IGhvbGRlckJveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaG9sZGVyLWJveC1jb250YWluZXJcIik7XG5cbiAgaG9sZGVyQm94LmFwcGVuZChlbGVtKTtcbn1cblxuXG5cbmV4cG9ydCB7IGdldEFwcENvbnRhaW5lciwgYXBwZW5kVG9Sb290LCBhcHBlbmRUb0hvbGRlckJveCwgZ2V0Q29udGVudEJveCB9OyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi90b2RvSXRlbS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3RvZG9JdGVtLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi90b2RvRGV0YWlscy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3RvZG9EZXRhaWxzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9kZWxDb25maXJtYXRpb24uY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9kZWxDb25maXJtYXRpb24uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFwiLi9kZWxDb25maXJtYXRpb24uY3NzXCI7XG5pbXBvcnQgKiBhcyBkb21Db250cm9sbGVyIGZyb20gXCIuLi8uLi9kb21Db250cm9sbGVyL2RvbUNvbnRyb2xsZXJcIjtcbmltcG9ydCB7IHVwZGF0ZUxvY2FsU3RvcmFnZSB9IGZyb20gXCIuLi8uLi91dGlsaXR5RnVuY3Rpb25zL3V0aWxpdHlGdW5jdGlvbnNcIjtcblxuY29uc3QgY3JlYXRlRGVsQ29uZmlybWF0aW9uVUkgPSAoYXBwLCB0eXBlLCBvYmosIG9ialVJKSA9PiB7XG4gIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IGNvbmZpcm1hdGlvbk1zZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICBjb25zdCBidG5zQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgY29uc3Qgbm9CdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBjb25zdCB5ZXNCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuXG4gIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiZGVsLWNvbmZpcm1hdGlvbi1jb250YWluZXJcIiwgXCJmbGV4LWNvbHVtblwiLCBcImNlbnRlclwiKTtcblxuICBjb25maXJtYXRpb25Nc2cuY2xhc3NMaXN0LmFkZChcImRlbC1jb25maXJtYXRpb24tbXNnXCIpO1xuICBjb25maXJtYXRpb25Nc2cuaW5uZXJUZXh0ID0gXCJDb25maXJtIERlbGV0ZT9cIjtcblxuICBidG5zQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJkZWwtY29uZmlybWF0aW9uLWJ0bnMtY29udGFpbmVyXCIsIFwiZmxleFwiLCBcImNlbnRlclwiKTtcblxuICBub0J0bi5jbGFzc0xpc3QuYWRkKFwiZGVsLWNvbmZpcm1hdGlvbi1uby1idG5cIik7XG4gIG5vQnRuLmlubmVyVGV4dCA9IFwiTk9cIjtcbiAgbm9CdG4uYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCAoKSA9PiB7XG4gICAgcmVtb3ZlQ29udGFpbmVyKCk7XG4gIH0pXG5cbiAgeWVzQnRuLmNsYXNzTGlzdC5hZGQoXCJkZWwtY29uZmlybWF0aW9uLXllcy1idG5cIik7XG4gIHllc0J0bi5pbm5lclRleHQgPSBcIllFU1wiO1xuICB5ZXNCdG4uYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCAoKSA9PiB7XG4gICAgaWYgKHR5cGUgPT09IFwidG9kb1wiKSB7XG4gICAgICBhcHAucmVtb3ZlRnJvbVRvZG9zQXJyKG9iai5nZXRJZCgpKTtcbiAgICAgIGNvbnNvbGUubG9nKGFwcC5nZXRUb2Rvc0FycigpKTtcblxuICAgICAgYXBwLmdldFByb2plY3RzQXJyKCkuZm9yRWFjaChwcm9qZWN0ID0+IHtcbiAgICAgICAgcHJvamVjdC5yZW1vdmVGcm9tVG9kb3NBcnIob2JqLmdldElkKCkpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICh0eXBlID09PSBcInByb2plY3RcIikge1xuICAgICAgYXBwLnJlbW92ZUZyb21Qcm9qZWN0c0FycihvYmouZ2V0SWQoKSk7XG4gICAgICBjb25zb2xlLmxvZyhhcHAuZ2V0UHJvamVjdHNBcnIoKSk7XG4gICAgfVxuICAgIHVwZGF0ZUxvY2FsU3RvcmFnZShhcHApO1xuICAgIG9ialVJLnJlbW92ZSgpO1xuICAgIHJlbW92ZUNvbnRhaW5lcigpO1xuICB9KVxuXG4gIGZ1bmN0aW9uIHJlbW92ZUNvbnRhaW5lcigpIHtcbiAgICBjb250YWluZXIucmVtb3ZlKCk7XG4gICAgZG9tQ29udHJvbGxlci5nZXRBcHBDb250YWluZXIoKS5jbGFzc0xpc3QucmVtb3ZlKFwiZGlzYWJsZWRcIik7XG4gIH1cblxuICBidG5zQ29udGFpbmVyLmFwcGVuZChub0J0biwgeWVzQnRuKTtcbiAgY29udGFpbmVyLmFwcGVuZChjb25maXJtYXRpb25Nc2csIGJ0bnNDb250YWluZXIpO1xuXG4gIHJldHVybiBjb250YWluZXI7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZURlbENvbmZpcm1hdGlvblVJIH07IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Byb2plY3RTZWxlY3Rvci5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Byb2plY3RTZWxlY3Rvci5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXF1aXJlZEFyZ3MocmVxdWlyZWQsIGFyZ3MpIHtcbiAgaWYgKGFyZ3MubGVuZ3RoIDwgcmVxdWlyZWQpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHJlcXVpcmVkICsgJyBhcmd1bWVudCcgKyAocmVxdWlyZWQgPiAxID8gJ3MnIDogJycpICsgJyByZXF1aXJlZCwgYnV0IG9ubHkgJyArIGFyZ3MubGVuZ3RoICsgJyBwcmVzZW50Jyk7XG4gIH1cbn0iLCJmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9XG5cbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG4vKipcbiAqIEBuYW1lIGlzRGF0ZVxuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXG4gKiBAc3VtbWFyeSBJcyB0aGUgZ2l2ZW4gdmFsdWUgYSBkYXRlP1xuICpcbiAqIEBkZXNjcmlwdGlvblxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiB2YWx1ZSBpcyBhbiBpbnN0YW5jZSBvZiBEYXRlLiBUaGUgZnVuY3Rpb24gd29ya3MgZm9yIGRhdGVzIHRyYW5zZmVycmVkIGFjcm9zcyBpZnJhbWVzLlxuICpcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgLSB0aGUgdmFsdWUgdG8gY2hlY2tcbiAqIEByZXR1cm5zIHtib29sZWFufSB0cnVlIGlmIHRoZSBnaXZlbiB2YWx1ZSBpcyBhIGRhdGVcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMSBhcmd1bWVudHMgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gRm9yIGEgdmFsaWQgZGF0ZTpcbiAqIGNvbnN0IHJlc3VsdCA9IGlzRGF0ZShuZXcgRGF0ZSgpKVxuICogLy89PiB0cnVlXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEZvciBhbiBpbnZhbGlkIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSBpc0RhdGUobmV3IERhdGUoTmFOKSlcbiAqIC8vPT4gdHJ1ZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBGb3Igc29tZSB2YWx1ZTpcbiAqIGNvbnN0IHJlc3VsdCA9IGlzRGF0ZSgnMjAxNC0wMi0zMScpXG4gKiAvLz0+IGZhbHNlXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEZvciBhbiBvYmplY3Q6XG4gKiBjb25zdCByZXN1bHQgPSBpc0RhdGUoe30pXG4gKiAvLz0+IGZhbHNlXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNEYXRlKHZhbHVlKSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBEYXRlIHx8IF90eXBlb2YodmFsdWUpID09PSAnb2JqZWN0JyAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpID09PSAnW29iamVjdCBEYXRlXSc7XG59IiwiZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxuXG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSB0b0RhdGVcbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgQ29udmVydCB0aGUgZ2l2ZW4gYXJndW1lbnQgdG8gYW4gaW5zdGFuY2Ugb2YgRGF0ZS5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbnZlcnQgdGhlIGdpdmVuIGFyZ3VtZW50IHRvIGFuIGluc3RhbmNlIG9mIERhdGUuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzIGFuIGluc3RhbmNlIG9mIERhdGUsIHRoZSBmdW5jdGlvbiByZXR1cm5zIGl0cyBjbG9uZS5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgYSBudW1iZXIsIGl0IGlzIHRyZWF0ZWQgYXMgYSB0aW1lc3RhbXAuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzIG5vbmUgb2YgdGhlIGFib3ZlLCB0aGUgZnVuY3Rpb24gcmV0dXJucyBJbnZhbGlkIERhdGUuXG4gKlxuICogKipOb3RlKio6ICphbGwqIERhdGUgYXJndW1lbnRzIHBhc3NlZCB0byBhbnkgKmRhdGUtZm5zKiBmdW5jdGlvbiBpcyBwcm9jZXNzZWQgYnkgYHRvRGF0ZWAuXG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gYXJndW1lbnQgLSB0aGUgdmFsdWUgdG8gY29udmVydFxuICogQHJldHVybnMge0RhdGV9IHRoZSBwYXJzZWQgZGF0ZSBpbiB0aGUgbG9jYWwgdGltZSB6b25lXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDEgYXJndW1lbnQgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ2xvbmUgdGhlIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSB0b0RhdGUobmV3IERhdGUoMjAxNCwgMSwgMTEsIDExLCAzMCwgMzApKVxuICogLy89PiBUdWUgRmViIDExIDIwMTQgMTE6MzA6MzBcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ29udmVydCB0aGUgdGltZXN0YW1wIHRvIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSB0b0RhdGUoMTM5MjA5ODQzMDAwMClcbiAqIC8vPT4gVHVlIEZlYiAxMSAyMDE0IDExOjMwOjMwXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdG9EYXRlKGFyZ3VtZW50KSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICB2YXIgYXJnU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZ3VtZW50KTsgLy8gQ2xvbmUgdGhlIGRhdGVcblxuICBpZiAoYXJndW1lbnQgaW5zdGFuY2VvZiBEYXRlIHx8IF90eXBlb2YoYXJndW1lbnQpID09PSAnb2JqZWN0JyAmJiBhcmdTdHIgPT09ICdbb2JqZWN0IERhdGVdJykge1xuICAgIC8vIFByZXZlbnQgdGhlIGRhdGUgdG8gbG9zZSB0aGUgbWlsbGlzZWNvbmRzIHdoZW4gcGFzc2VkIHRvIG5ldyBEYXRlKCkgaW4gSUUxMFxuICAgIHJldHVybiBuZXcgRGF0ZShhcmd1bWVudC5nZXRUaW1lKCkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBhcmd1bWVudCA9PT0gJ251bWJlcicgfHwgYXJnU3RyID09PSAnW29iamVjdCBOdW1iZXJdJykge1xuICAgIHJldHVybiBuZXcgRGF0ZShhcmd1bWVudCk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKCh0eXBlb2YgYXJndW1lbnQgPT09ICdzdHJpbmcnIHx8IGFyZ1N0ciA9PT0gJ1tvYmplY3QgU3RyaW5nXScpICYmIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUud2FybihcIlN0YXJ0aW5nIHdpdGggdjIuMC4wLWJldGEuMSBkYXRlLWZucyBkb2Vzbid0IGFjY2VwdCBzdHJpbmdzIGFzIGRhdGUgYXJndW1lbnRzLiBQbGVhc2UgdXNlIGBwYXJzZUlTT2AgdG8gcGFyc2Ugc3RyaW5ncy4gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91cGdyYWRlR3VpZGUubWQjc3RyaW5nLWFyZ3VtZW50c1wiKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcblxuICAgICAgY29uc29sZS53YXJuKG5ldyBFcnJvcigpLnN0YWNrKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgfVxufSIsImltcG9ydCBpc0RhdGUgZnJvbSBcIi4uL2lzRGF0ZS9pbmRleC5qc1wiO1xuaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vdG9EYXRlL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSBpc1ZhbGlkXG4gKiBAY2F0ZWdvcnkgQ29tbW9uIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IElzIHRoZSBnaXZlbiBkYXRlIHZhbGlkP1xuICpcbiAqIEBkZXNjcmlwdGlvblxuICogUmV0dXJucyBmYWxzZSBpZiBhcmd1bWVudCBpcyBJbnZhbGlkIERhdGUgYW5kIHRydWUgb3RoZXJ3aXNlLlxuICogQXJndW1lbnQgaXMgY29udmVydGVkIHRvIERhdGUgdXNpbmcgYHRvRGF0ZWAuIFNlZSBbdG9EYXRlXXtAbGluayBodHRwczovL2RhdGUtZm5zLm9yZy9kb2NzL3RvRGF0ZX1cbiAqIEludmFsaWQgRGF0ZSBpcyBhIERhdGUsIHdob3NlIHRpbWUgdmFsdWUgaXMgTmFOLlxuICpcbiAqIFRpbWUgdmFsdWUgb2YgRGF0ZTogaHR0cDovL2VzNS5naXRodWIuaW8vI3gxNS45LjEuMVxuICpcbiAqIEBwYXJhbSB7Kn0gZGF0ZSAtIHRoZSBkYXRlIHRvIGNoZWNrXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gdGhlIGRhdGUgaXMgdmFsaWRcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMSBhcmd1bWVudCByZXF1aXJlZFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBGb3IgdGhlIHZhbGlkIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSBpc1ZhbGlkKG5ldyBEYXRlKDIwMTQsIDEsIDMxKSlcbiAqIC8vPT4gdHJ1ZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBGb3IgdGhlIHZhbHVlLCBjb252ZXJ0YWJsZSBpbnRvIGEgZGF0ZTpcbiAqIGNvbnN0IHJlc3VsdCA9IGlzVmFsaWQoMTM5MzgwNDgwMDAwMClcbiAqIC8vPT4gdHJ1ZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBGb3IgdGhlIGludmFsaWQgZGF0ZTpcbiAqIGNvbnN0IHJlc3VsdCA9IGlzVmFsaWQobmV3IERhdGUoJycpKVxuICogLy89PiBmYWxzZVxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzVmFsaWQoZGlydHlEYXRlKSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuXG4gIGlmICghaXNEYXRlKGRpcnR5RGF0ZSkgJiYgdHlwZW9mIGRpcnR5RGF0ZSAhPT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgZGF0ZSA9IHRvRGF0ZShkaXJ0eURhdGUpO1xuICByZXR1cm4gIWlzTmFOKE51bWJlcihkYXRlKSk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdG9JbnRlZ2VyKGRpcnR5TnVtYmVyKSB7XG4gIGlmIChkaXJ0eU51bWJlciA9PT0gbnVsbCB8fCBkaXJ0eU51bWJlciA9PT0gdHJ1ZSB8fCBkaXJ0eU51bWJlciA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm4gTmFOO1xuICB9XG5cbiAgdmFyIG51bWJlciA9IE51bWJlcihkaXJ0eU51bWJlcik7XG5cbiAgaWYgKGlzTmFOKG51bWJlcikpIHtcbiAgICByZXR1cm4gbnVtYmVyO1xuICB9XG5cbiAgcmV0dXJuIG51bWJlciA8IDAgPyBNYXRoLmNlaWwobnVtYmVyKSA6IE1hdGguZmxvb3IobnVtYmVyKTtcbn0iLCJpbXBvcnQgdG9JbnRlZ2VyIGZyb20gXCIuLi9fbGliL3RvSW50ZWdlci9pbmRleC5qc1wiO1xuaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vdG9EYXRlL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSBhZGRNaWxsaXNlY29uZHNcbiAqIEBjYXRlZ29yeSBNaWxsaXNlY29uZCBIZWxwZXJzXG4gKiBAc3VtbWFyeSBBZGQgdGhlIHNwZWNpZmllZCBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIHRoZSBnaXZlbiBkYXRlLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQWRkIHRoZSBzcGVjaWZpZWQgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byB0aGUgZ2l2ZW4gZGF0ZS5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlIC0gdGhlIGRhdGUgdG8gYmUgY2hhbmdlZFxuICogQHBhcmFtIHtOdW1iZXJ9IGFtb3VudCAtIHRoZSBhbW91bnQgb2YgbWlsbGlzZWNvbmRzIHRvIGJlIGFkZGVkLiBQb3NpdGl2ZSBkZWNpbWFscyB3aWxsIGJlIHJvdW5kZWQgdXNpbmcgYE1hdGguZmxvb3JgLCBkZWNpbWFscyBsZXNzIHRoYW4gemVybyB3aWxsIGJlIHJvdW5kZWQgdXNpbmcgYE1hdGguY2VpbGAuXG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIG5ldyBkYXRlIHdpdGggdGhlIG1pbGxpc2Vjb25kcyBhZGRlZFxuICogQHRocm93cyB7VHlwZUVycm9yfSAyIGFyZ3VtZW50cyByZXF1aXJlZFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBBZGQgNzUwIG1pbGxpc2Vjb25kcyB0byAxMCBKdWx5IDIwMTQgMTI6NDU6MzAuMDAwOlxuICogY29uc3QgcmVzdWx0ID0gYWRkTWlsbGlzZWNvbmRzKG5ldyBEYXRlKDIwMTQsIDYsIDEwLCAxMiwgNDUsIDMwLCAwKSwgNzUwKVxuICogLy89PiBUaHUgSnVsIDEwIDIwMTQgMTI6NDU6MzAuNzUwXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYWRkTWlsbGlzZWNvbmRzKGRpcnR5RGF0ZSwgZGlydHlBbW91bnQpIHtcbiAgcmVxdWlyZWRBcmdzKDIsIGFyZ3VtZW50cyk7XG4gIHZhciB0aW1lc3RhbXAgPSB0b0RhdGUoZGlydHlEYXRlKS5nZXRUaW1lKCk7XG4gIHZhciBhbW91bnQgPSB0b0ludGVnZXIoZGlydHlBbW91bnQpO1xuICByZXR1cm4gbmV3IERhdGUodGltZXN0YW1wICsgYW1vdW50KTtcbn0iLCJpbXBvcnQgYWRkTWlsbGlzZWNvbmRzIGZyb20gXCIuLi9hZGRNaWxsaXNlY29uZHMvaW5kZXguanNcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG5pbXBvcnQgdG9JbnRlZ2VyIGZyb20gXCIuLi9fbGliL3RvSW50ZWdlci9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSBzdWJNaWxsaXNlY29uZHNcbiAqIEBjYXRlZ29yeSBNaWxsaXNlY29uZCBIZWxwZXJzXG4gKiBAc3VtbWFyeSBTdWJ0cmFjdCB0aGUgc3BlY2lmaWVkIG51bWJlciBvZiBtaWxsaXNlY29uZHMgZnJvbSB0aGUgZ2l2ZW4gZGF0ZS5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIFN1YnRyYWN0IHRoZSBzcGVjaWZpZWQgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBmcm9tIHRoZSBnaXZlbiBkYXRlLlxuICpcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGUgLSB0aGUgZGF0ZSB0byBiZSBjaGFuZ2VkXG4gKiBAcGFyYW0ge051bWJlcn0gYW1vdW50IC0gdGhlIGFtb3VudCBvZiBtaWxsaXNlY29uZHMgdG8gYmUgc3VidHJhY3RlZC4gUG9zaXRpdmUgZGVjaW1hbHMgd2lsbCBiZSByb3VuZGVkIHVzaW5nIGBNYXRoLmZsb29yYCwgZGVjaW1hbHMgbGVzcyB0aGFuIHplcm8gd2lsbCBiZSByb3VuZGVkIHVzaW5nIGBNYXRoLmNlaWxgLlxuICogQHJldHVybnMge0RhdGV9IHRoZSBuZXcgZGF0ZSB3aXRoIHRoZSBtaWxsaXNlY29uZHMgc3VidHJhY3RlZFxuICogQHRocm93cyB7VHlwZUVycm9yfSAyIGFyZ3VtZW50cyByZXF1aXJlZFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdWJ0cmFjdCA3NTAgbWlsbGlzZWNvbmRzIGZyb20gMTAgSnVseSAyMDE0IDEyOjQ1OjMwLjAwMDpcbiAqIGNvbnN0IHJlc3VsdCA9IHN1Yk1pbGxpc2Vjb25kcyhuZXcgRGF0ZSgyMDE0LCA2LCAxMCwgMTIsIDQ1LCAzMCwgMCksIDc1MClcbiAqIC8vPT4gVGh1IEp1bCAxMCAyMDE0IDEyOjQ1OjI5LjI1MFxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN1Yk1pbGxpc2Vjb25kcyhkaXJ0eURhdGUsIGRpcnR5QW1vdW50KSB7XG4gIHJlcXVpcmVkQXJncygyLCBhcmd1bWVudHMpO1xuICB2YXIgYW1vdW50ID0gdG9JbnRlZ2VyKGRpcnR5QW1vdW50KTtcbiAgcmV0dXJuIGFkZE1pbGxpc2Vjb25kcyhkaXJ0eURhdGUsIC1hbW91bnQpO1xufSIsImltcG9ydCB0b0RhdGUgZnJvbSBcIi4uLy4uL3RvRGF0ZS9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG52YXIgTUlMTElTRUNPTkRTX0lOX0RBWSA9IDg2NDAwMDAwO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0VVRDRGF5T2ZZZWFyKGRpcnR5RGF0ZSkge1xuICByZXF1aXJlZEFyZ3MoMSwgYXJndW1lbnRzKTtcbiAgdmFyIGRhdGUgPSB0b0RhdGUoZGlydHlEYXRlKTtcbiAgdmFyIHRpbWVzdGFtcCA9IGRhdGUuZ2V0VGltZSgpO1xuICBkYXRlLnNldFVUQ01vbnRoKDAsIDEpO1xuICBkYXRlLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xuICB2YXIgc3RhcnRPZlllYXJUaW1lc3RhbXAgPSBkYXRlLmdldFRpbWUoKTtcbiAgdmFyIGRpZmZlcmVuY2UgPSB0aW1lc3RhbXAgLSBzdGFydE9mWWVhclRpbWVzdGFtcDtcbiAgcmV0dXJuIE1hdGguZmxvb3IoZGlmZmVyZW5jZSAvIE1JTExJU0VDT05EU19JTl9EQVkpICsgMTtcbn0iLCJpbXBvcnQgdG9EYXRlIGZyb20gXCIuLi8uLi90b0RhdGUvaW5kZXguanNcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3RhcnRPZlVUQ0lTT1dlZWsoZGlydHlEYXRlKSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICB2YXIgd2Vla1N0YXJ0c09uID0gMTtcbiAgdmFyIGRhdGUgPSB0b0RhdGUoZGlydHlEYXRlKTtcbiAgdmFyIGRheSA9IGRhdGUuZ2V0VVRDRGF5KCk7XG4gIHZhciBkaWZmID0gKGRheSA8IHdlZWtTdGFydHNPbiA/IDcgOiAwKSArIGRheSAtIHdlZWtTdGFydHNPbjtcbiAgZGF0ZS5zZXRVVENEYXRlKGRhdGUuZ2V0VVRDRGF0ZSgpIC0gZGlmZik7XG4gIGRhdGUuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG4gIHJldHVybiBkYXRlO1xufSIsImltcG9ydCB0b0RhdGUgZnJvbSBcIi4uLy4uL3RvRGF0ZS9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG5pbXBvcnQgc3RhcnRPZlVUQ0lTT1dlZWsgZnJvbSBcIi4uL3N0YXJ0T2ZVVENJU09XZWVrL2luZGV4LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRVVENJU09XZWVrWWVhcihkaXJ0eURhdGUpIHtcbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XG4gIHZhciBkYXRlID0gdG9EYXRlKGRpcnR5RGF0ZSk7XG4gIHZhciB5ZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpO1xuICB2YXIgZm91cnRoT2ZKYW51YXJ5T2ZOZXh0WWVhciA9IG5ldyBEYXRlKDApO1xuICBmb3VydGhPZkphbnVhcnlPZk5leHRZZWFyLnNldFVUQ0Z1bGxZZWFyKHllYXIgKyAxLCAwLCA0KTtcbiAgZm91cnRoT2ZKYW51YXJ5T2ZOZXh0WWVhci5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbiAgdmFyIHN0YXJ0T2ZOZXh0WWVhciA9IHN0YXJ0T2ZVVENJU09XZWVrKGZvdXJ0aE9mSmFudWFyeU9mTmV4dFllYXIpO1xuICB2YXIgZm91cnRoT2ZKYW51YXJ5T2ZUaGlzWWVhciA9IG5ldyBEYXRlKDApO1xuICBmb3VydGhPZkphbnVhcnlPZlRoaXNZZWFyLnNldFVUQ0Z1bGxZZWFyKHllYXIsIDAsIDQpO1xuICBmb3VydGhPZkphbnVhcnlPZlRoaXNZZWFyLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xuICB2YXIgc3RhcnRPZlRoaXNZZWFyID0gc3RhcnRPZlVUQ0lTT1dlZWsoZm91cnRoT2ZKYW51YXJ5T2ZUaGlzWWVhcik7XG5cbiAgaWYgKGRhdGUuZ2V0VGltZSgpID49IHN0YXJ0T2ZOZXh0WWVhci5nZXRUaW1lKCkpIHtcbiAgICByZXR1cm4geWVhciArIDE7XG4gIH0gZWxzZSBpZiAoZGF0ZS5nZXRUaW1lKCkgPj0gc3RhcnRPZlRoaXNZZWFyLmdldFRpbWUoKSkge1xuICAgIHJldHVybiB5ZWFyO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB5ZWFyIC0gMTtcbiAgfVxufSIsImltcG9ydCBnZXRVVENJU09XZWVrWWVhciBmcm9tIFwiLi4vZ2V0VVRDSVNPV2Vla1llYXIvaW5kZXguanNcIjtcbmltcG9ydCBzdGFydE9mVVRDSVNPV2VlayBmcm9tIFwiLi4vc3RhcnRPZlVUQ0lTT1dlZWsvaW5kZXguanNcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3RhcnRPZlVUQ0lTT1dlZWtZZWFyKGRpcnR5RGF0ZSkge1xuICByZXF1aXJlZEFyZ3MoMSwgYXJndW1lbnRzKTtcbiAgdmFyIHllYXIgPSBnZXRVVENJU09XZWVrWWVhcihkaXJ0eURhdGUpO1xuICB2YXIgZm91cnRoT2ZKYW51YXJ5ID0gbmV3IERhdGUoMCk7XG4gIGZvdXJ0aE9mSmFudWFyeS5zZXRVVENGdWxsWWVhcih5ZWFyLCAwLCA0KTtcbiAgZm91cnRoT2ZKYW51YXJ5LnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xuICB2YXIgZGF0ZSA9IHN0YXJ0T2ZVVENJU09XZWVrKGZvdXJ0aE9mSmFudWFyeSk7XG4gIHJldHVybiBkYXRlO1xufSIsImltcG9ydCB0b0RhdGUgZnJvbSBcIi4uLy4uL3RvRGF0ZS9pbmRleC5qc1wiO1xuaW1wb3J0IHN0YXJ0T2ZVVENJU09XZWVrIGZyb20gXCIuLi9zdGFydE9mVVRDSVNPV2Vlay9pbmRleC5qc1wiO1xuaW1wb3J0IHN0YXJ0T2ZVVENJU09XZWVrWWVhciBmcm9tIFwiLi4vc3RhcnRPZlVUQ0lTT1dlZWtZZWFyL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbnZhciBNSUxMSVNFQ09ORFNfSU5fV0VFSyA9IDYwNDgwMDAwMDtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFVUQ0lTT1dlZWsoZGlydHlEYXRlKSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICB2YXIgZGF0ZSA9IHRvRGF0ZShkaXJ0eURhdGUpO1xuICB2YXIgZGlmZiA9IHN0YXJ0T2ZVVENJU09XZWVrKGRhdGUpLmdldFRpbWUoKSAtIHN0YXJ0T2ZVVENJU09XZWVrWWVhcihkYXRlKS5nZXRUaW1lKCk7IC8vIFJvdW5kIHRoZSBudW1iZXIgb2YgZGF5cyB0byB0aGUgbmVhcmVzdCBpbnRlZ2VyXG4gIC8vIGJlY2F1c2UgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgaW4gYSB3ZWVrIGlzIG5vdCBjb25zdGFudFxuICAvLyAoZS5nLiBpdCdzIGRpZmZlcmVudCBpbiB0aGUgd2VlayBvZiB0aGUgZGF5bGlnaHQgc2F2aW5nIHRpbWUgY2xvY2sgc2hpZnQpXG5cbiAgcmV0dXJuIE1hdGgucm91bmQoZGlmZiAvIE1JTExJU0VDT05EU19JTl9XRUVLKSArIDE7XG59IiwidmFyIGRlZmF1bHRPcHRpb25zID0ge307XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdE9wdGlvbnMoKSB7XG4gIHJldHVybiBkZWZhdWx0T3B0aW9ucztcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXREZWZhdWx0T3B0aW9ucyhuZXdPcHRpb25zKSB7XG4gIGRlZmF1bHRPcHRpb25zID0gbmV3T3B0aW9ucztcbn0iLCJpbXBvcnQgdG9EYXRlIGZyb20gXCIuLi8uLi90b0RhdGUvaW5kZXguanNcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuaW1wb3J0IHRvSW50ZWdlciBmcm9tIFwiLi4vdG9JbnRlZ2VyL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBnZXREZWZhdWx0T3B0aW9ucyB9IGZyb20gXCIuLi9kZWZhdWx0T3B0aW9ucy9pbmRleC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3RhcnRPZlVUQ1dlZWsoZGlydHlEYXRlLCBvcHRpb25zKSB7XG4gIHZhciBfcmVmLCBfcmVmMiwgX3JlZjMsIF9vcHRpb25zJHdlZWtTdGFydHNPbiwgX29wdGlvbnMkbG9jYWxlLCBfb3B0aW9ucyRsb2NhbGUkb3B0aW8sIF9kZWZhdWx0T3B0aW9ucyRsb2NhbCwgX2RlZmF1bHRPcHRpb25zJGxvY2FsMjtcblxuICByZXF1aXJlZEFyZ3MoMSwgYXJndW1lbnRzKTtcbiAgdmFyIGRlZmF1bHRPcHRpb25zID0gZ2V0RGVmYXVsdE9wdGlvbnMoKTtcbiAgdmFyIHdlZWtTdGFydHNPbiA9IHRvSW50ZWdlcigoX3JlZiA9IChfcmVmMiA9IChfcmVmMyA9IChfb3B0aW9ucyR3ZWVrU3RhcnRzT24gPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMud2Vla1N0YXJ0c09uKSAhPT0gbnVsbCAmJiBfb3B0aW9ucyR3ZWVrU3RhcnRzT24gIT09IHZvaWQgMCA/IF9vcHRpb25zJHdlZWtTdGFydHNPbiA6IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9vcHRpb25zJGxvY2FsZSA9IG9wdGlvbnMubG9jYWxlKSA9PT0gbnVsbCB8fCBfb3B0aW9ucyRsb2NhbGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfb3B0aW9ucyRsb2NhbGUkb3B0aW8gPSBfb3B0aW9ucyRsb2NhbGUub3B0aW9ucykgPT09IG51bGwgfHwgX29wdGlvbnMkbG9jYWxlJG9wdGlvID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfb3B0aW9ucyRsb2NhbGUkb3B0aW8ud2Vla1N0YXJ0c09uKSAhPT0gbnVsbCAmJiBfcmVmMyAhPT0gdm9pZCAwID8gX3JlZjMgOiBkZWZhdWx0T3B0aW9ucy53ZWVrU3RhcnRzT24pICE9PSBudWxsICYmIF9yZWYyICE9PSB2b2lkIDAgPyBfcmVmMiA6IChfZGVmYXVsdE9wdGlvbnMkbG9jYWwgPSBkZWZhdWx0T3B0aW9ucy5sb2NhbGUpID09PSBudWxsIHx8IF9kZWZhdWx0T3B0aW9ucyRsb2NhbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kZWZhdWx0T3B0aW9ucyRsb2NhbDIgPSBfZGVmYXVsdE9wdGlvbnMkbG9jYWwub3B0aW9ucykgPT09IG51bGwgfHwgX2RlZmF1bHRPcHRpb25zJGxvY2FsMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2RlZmF1bHRPcHRpb25zJGxvY2FsMi53ZWVrU3RhcnRzT24pICE9PSBudWxsICYmIF9yZWYgIT09IHZvaWQgMCA/IF9yZWYgOiAwKTsgLy8gVGVzdCBpZiB3ZWVrU3RhcnRzT24gaXMgYmV0d2VlbiAwIGFuZCA2IF9hbmRfIGlzIG5vdCBOYU5cblxuICBpZiAoISh3ZWVrU3RhcnRzT24gPj0gMCAmJiB3ZWVrU3RhcnRzT24gPD0gNikpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignd2Vla1N0YXJ0c09uIG11c3QgYmUgYmV0d2VlbiAwIGFuZCA2IGluY2x1c2l2ZWx5Jyk7XG4gIH1cblxuICB2YXIgZGF0ZSA9IHRvRGF0ZShkaXJ0eURhdGUpO1xuICB2YXIgZGF5ID0gZGF0ZS5nZXRVVENEYXkoKTtcbiAgdmFyIGRpZmYgPSAoZGF5IDwgd2Vla1N0YXJ0c09uID8gNyA6IDApICsgZGF5IC0gd2Vla1N0YXJ0c09uO1xuICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgLSBkaWZmKTtcbiAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbiAgcmV0dXJuIGRhdGU7XG59IiwiaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vLi4vdG9EYXRlL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbmltcG9ydCBzdGFydE9mVVRDV2VlayBmcm9tIFwiLi4vc3RhcnRPZlVUQ1dlZWsvaW5kZXguanNcIjtcbmltcG9ydCB0b0ludGVnZXIgZnJvbSBcIi4uL3RvSW50ZWdlci9pbmRleC5qc1wiO1xuaW1wb3J0IHsgZ2V0RGVmYXVsdE9wdGlvbnMgfSBmcm9tIFwiLi4vZGVmYXVsdE9wdGlvbnMvaW5kZXguanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFVUQ1dlZWtZZWFyKGRpcnR5RGF0ZSwgb3B0aW9ucykge1xuICB2YXIgX3JlZiwgX3JlZjIsIF9yZWYzLCBfb3B0aW9ucyRmaXJzdFdlZWtDb24sIF9vcHRpb25zJGxvY2FsZSwgX29wdGlvbnMkbG9jYWxlJG9wdGlvLCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwsIF9kZWZhdWx0T3B0aW9ucyRsb2NhbDI7XG5cbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XG4gIHZhciBkYXRlID0gdG9EYXRlKGRpcnR5RGF0ZSk7XG4gIHZhciB5ZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpO1xuICB2YXIgZGVmYXVsdE9wdGlvbnMgPSBnZXREZWZhdWx0T3B0aW9ucygpO1xuICB2YXIgZmlyc3RXZWVrQ29udGFpbnNEYXRlID0gdG9JbnRlZ2VyKChfcmVmID0gKF9yZWYyID0gKF9yZWYzID0gKF9vcHRpb25zJGZpcnN0V2Vla0NvbiA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5maXJzdFdlZWtDb250YWluc0RhdGUpICE9PSBudWxsICYmIF9vcHRpb25zJGZpcnN0V2Vla0NvbiAhPT0gdm9pZCAwID8gX29wdGlvbnMkZmlyc3RXZWVrQ29uIDogb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX29wdGlvbnMkbG9jYWxlID0gb3B0aW9ucy5sb2NhbGUpID09PSBudWxsIHx8IF9vcHRpb25zJGxvY2FsZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9vcHRpb25zJGxvY2FsZSRvcHRpbyA9IF9vcHRpb25zJGxvY2FsZS5vcHRpb25zKSA9PT0gbnVsbCB8fCBfb3B0aW9ucyRsb2NhbGUkb3B0aW8gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9vcHRpb25zJGxvY2FsZSRvcHRpby5maXJzdFdlZWtDb250YWluc0RhdGUpICE9PSBudWxsICYmIF9yZWYzICE9PSB2b2lkIDAgPyBfcmVmMyA6IGRlZmF1bHRPcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT09IG51bGwgJiYgX3JlZjIgIT09IHZvaWQgMCA/IF9yZWYyIDogKF9kZWZhdWx0T3B0aW9ucyRsb2NhbCA9IGRlZmF1bHRPcHRpb25zLmxvY2FsZSkgPT09IG51bGwgfHwgX2RlZmF1bHRPcHRpb25zJGxvY2FsID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX2RlZmF1bHRPcHRpb25zJGxvY2FsMiA9IF9kZWZhdWx0T3B0aW9ucyRsb2NhbC5vcHRpb25zKSA9PT0gbnVsbCB8fCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZGVmYXVsdE9wdGlvbnMkbG9jYWwyLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT09IG51bGwgJiYgX3JlZiAhPT0gdm9pZCAwID8gX3JlZiA6IDEpOyAvLyBUZXN0IGlmIHdlZWtTdGFydHNPbiBpcyBiZXR3ZWVuIDEgYW5kIDcgX2FuZF8gaXMgbm90IE5hTlxuXG4gIGlmICghKGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA+PSAxICYmIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSA8PSA3KSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdmaXJzdFdlZWtDb250YWluc0RhdGUgbXVzdCBiZSBiZXR3ZWVuIDEgYW5kIDcgaW5jbHVzaXZlbHknKTtcbiAgfVxuXG4gIHZhciBmaXJzdFdlZWtPZk5leHRZZWFyID0gbmV3IERhdGUoMCk7XG4gIGZpcnN0V2Vla09mTmV4dFllYXIuc2V0VVRDRnVsbFllYXIoeWVhciArIDEsIDAsIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZSk7XG4gIGZpcnN0V2Vla09mTmV4dFllYXIuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG4gIHZhciBzdGFydE9mTmV4dFllYXIgPSBzdGFydE9mVVRDV2VlayhmaXJzdFdlZWtPZk5leHRZZWFyLCBvcHRpb25zKTtcbiAgdmFyIGZpcnN0V2Vla09mVGhpc1llYXIgPSBuZXcgRGF0ZSgwKTtcbiAgZmlyc3RXZWVrT2ZUaGlzWWVhci5zZXRVVENGdWxsWWVhcih5ZWFyLCAwLCBmaXJzdFdlZWtDb250YWluc0RhdGUpO1xuICBmaXJzdFdlZWtPZlRoaXNZZWFyLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xuICB2YXIgc3RhcnRPZlRoaXNZZWFyID0gc3RhcnRPZlVUQ1dlZWsoZmlyc3RXZWVrT2ZUaGlzWWVhciwgb3B0aW9ucyk7XG5cbiAgaWYgKGRhdGUuZ2V0VGltZSgpID49IHN0YXJ0T2ZOZXh0WWVhci5nZXRUaW1lKCkpIHtcbiAgICByZXR1cm4geWVhciArIDE7XG4gIH0gZWxzZSBpZiAoZGF0ZS5nZXRUaW1lKCkgPj0gc3RhcnRPZlRoaXNZZWFyLmdldFRpbWUoKSkge1xuICAgIHJldHVybiB5ZWFyO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB5ZWFyIC0gMTtcbiAgfVxufSIsImltcG9ydCBnZXRVVENXZWVrWWVhciBmcm9tIFwiLi4vZ2V0VVRDV2Vla1llYXIvaW5kZXguanNcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuaW1wb3J0IHN0YXJ0T2ZVVENXZWVrIGZyb20gXCIuLi9zdGFydE9mVVRDV2Vlay9pbmRleC5qc1wiO1xuaW1wb3J0IHRvSW50ZWdlciBmcm9tIFwiLi4vdG9JbnRlZ2VyL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBnZXREZWZhdWx0T3B0aW9ucyB9IGZyb20gXCIuLi9kZWZhdWx0T3B0aW9ucy9pbmRleC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3RhcnRPZlVUQ1dlZWtZZWFyKGRpcnR5RGF0ZSwgb3B0aW9ucykge1xuICB2YXIgX3JlZiwgX3JlZjIsIF9yZWYzLCBfb3B0aW9ucyRmaXJzdFdlZWtDb24sIF9vcHRpb25zJGxvY2FsZSwgX29wdGlvbnMkbG9jYWxlJG9wdGlvLCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwsIF9kZWZhdWx0T3B0aW9ucyRsb2NhbDI7XG5cbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XG4gIHZhciBkZWZhdWx0T3B0aW9ucyA9IGdldERlZmF1bHRPcHRpb25zKCk7XG4gIHZhciBmaXJzdFdlZWtDb250YWluc0RhdGUgPSB0b0ludGVnZXIoKF9yZWYgPSAoX3JlZjIgPSAoX3JlZjMgPSAoX29wdGlvbnMkZmlyc3RXZWVrQ29uID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT09IG51bGwgJiYgX29wdGlvbnMkZmlyc3RXZWVrQ29uICE9PSB2b2lkIDAgPyBfb3B0aW9ucyRmaXJzdFdlZWtDb24gOiBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfb3B0aW9ucyRsb2NhbGUgPSBvcHRpb25zLmxvY2FsZSkgPT09IG51bGwgfHwgX29wdGlvbnMkbG9jYWxlID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX29wdGlvbnMkbG9jYWxlJG9wdGlvID0gX29wdGlvbnMkbG9jYWxlLm9wdGlvbnMpID09PSBudWxsIHx8IF9vcHRpb25zJGxvY2FsZSRvcHRpbyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29wdGlvbnMkbG9jYWxlJG9wdGlvLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT09IG51bGwgJiYgX3JlZjMgIT09IHZvaWQgMCA/IF9yZWYzIDogZGVmYXVsdE9wdGlvbnMuZmlyc3RXZWVrQ29udGFpbnNEYXRlKSAhPT0gbnVsbCAmJiBfcmVmMiAhPT0gdm9pZCAwID8gX3JlZjIgOiAoX2RlZmF1bHRPcHRpb25zJGxvY2FsID0gZGVmYXVsdE9wdGlvbnMubG9jYWxlKSA9PT0gbnVsbCB8fCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfZGVmYXVsdE9wdGlvbnMkbG9jYWwyID0gX2RlZmF1bHRPcHRpb25zJGxvY2FsLm9wdGlvbnMpID09PSBudWxsIHx8IF9kZWZhdWx0T3B0aW9ucyRsb2NhbDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kZWZhdWx0T3B0aW9ucyRsb2NhbDIuZmlyc3RXZWVrQ29udGFpbnNEYXRlKSAhPT0gbnVsbCAmJiBfcmVmICE9PSB2b2lkIDAgPyBfcmVmIDogMSk7XG4gIHZhciB5ZWFyID0gZ2V0VVRDV2Vla1llYXIoZGlydHlEYXRlLCBvcHRpb25zKTtcbiAgdmFyIGZpcnN0V2VlayA9IG5ldyBEYXRlKDApO1xuICBmaXJzdFdlZWsuc2V0VVRDRnVsbFllYXIoeWVhciwgMCwgZmlyc3RXZWVrQ29udGFpbnNEYXRlKTtcbiAgZmlyc3RXZWVrLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xuICB2YXIgZGF0ZSA9IHN0YXJ0T2ZVVENXZWVrKGZpcnN0V2Vlaywgb3B0aW9ucyk7XG4gIHJldHVybiBkYXRlO1xufSIsImltcG9ydCB0b0RhdGUgZnJvbSBcIi4uLy4uL3RvRGF0ZS9pbmRleC5qc1wiO1xuaW1wb3J0IHN0YXJ0T2ZVVENXZWVrIGZyb20gXCIuLi9zdGFydE9mVVRDV2Vlay9pbmRleC5qc1wiO1xuaW1wb3J0IHN0YXJ0T2ZVVENXZWVrWWVhciBmcm9tIFwiLi4vc3RhcnRPZlVUQ1dlZWtZZWFyL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbnZhciBNSUxMSVNFQ09ORFNfSU5fV0VFSyA9IDYwNDgwMDAwMDtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFVUQ1dlZWsoZGlydHlEYXRlLCBvcHRpb25zKSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICB2YXIgZGF0ZSA9IHRvRGF0ZShkaXJ0eURhdGUpO1xuICB2YXIgZGlmZiA9IHN0YXJ0T2ZVVENXZWVrKGRhdGUsIG9wdGlvbnMpLmdldFRpbWUoKSAtIHN0YXJ0T2ZVVENXZWVrWWVhcihkYXRlLCBvcHRpb25zKS5nZXRUaW1lKCk7IC8vIFJvdW5kIHRoZSBudW1iZXIgb2YgZGF5cyB0byB0aGUgbmVhcmVzdCBpbnRlZ2VyXG4gIC8vIGJlY2F1c2UgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgaW4gYSB3ZWVrIGlzIG5vdCBjb25zdGFudFxuICAvLyAoZS5nLiBpdCdzIGRpZmZlcmVudCBpbiB0aGUgd2VlayBvZiB0aGUgZGF5bGlnaHQgc2F2aW5nIHRpbWUgY2xvY2sgc2hpZnQpXG5cbiAgcmV0dXJuIE1hdGgucm91bmQoZGlmZiAvIE1JTExJU0VDT05EU19JTl9XRUVLKSArIDE7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYWRkTGVhZGluZ1plcm9zKG51bWJlciwgdGFyZ2V0TGVuZ3RoKSB7XG4gIHZhciBzaWduID0gbnVtYmVyIDwgMCA/ICctJyA6ICcnO1xuICB2YXIgb3V0cHV0ID0gTWF0aC5hYnMobnVtYmVyKS50b1N0cmluZygpO1xuXG4gIHdoaWxlIChvdXRwdXQubGVuZ3RoIDwgdGFyZ2V0TGVuZ3RoKSB7XG4gICAgb3V0cHV0ID0gJzAnICsgb3V0cHV0O1xuICB9XG5cbiAgcmV0dXJuIHNpZ24gKyBvdXRwdXQ7XG59IiwiaW1wb3J0IGFkZExlYWRpbmdaZXJvcyBmcm9tIFwiLi4vLi4vYWRkTGVhZGluZ1plcm9zL2luZGV4LmpzXCI7XG4vKlxuICogfCAgICAgfCBVbml0ICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgfCBVbml0ICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfC0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfFxuICogfCAgYSAgfCBBTSwgUE0gICAgICAgICAgICAgICAgICAgICAgICAgfCAgQSogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAgZCAgfCBEYXkgb2YgbW9udGggICAgICAgICAgICAgICAgICAgfCAgRCAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAgaCAgfCBIb3VyIFsxLTEyXSAgICAgICAgICAgICAgICAgICAgfCAgSCAgfCBIb3VyIFswLTIzXSAgICAgICAgICAgICAgICAgICAgfFxuICogfCAgbSAgfCBNaW51dGUgICAgICAgICAgICAgICAgICAgICAgICAgfCAgTSAgfCBNb250aCAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAgcyAgfCBTZWNvbmQgICAgICAgICAgICAgICAgICAgICAgICAgfCAgUyAgfCBGcmFjdGlvbiBvZiBzZWNvbmQgICAgICAgICAgICAgfFxuICogfCAgeSAgfCBZZWFyIChhYnMpICAgICAgICAgICAgICAgICAgICAgfCAgWSAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICpcbiAqIExldHRlcnMgbWFya2VkIGJ5ICogYXJlIG5vdCBpbXBsZW1lbnRlZCBidXQgcmVzZXJ2ZWQgYnkgVW5pY29kZSBzdGFuZGFyZC5cbiAqL1xuXG52YXIgZm9ybWF0dGVycyA9IHtcbiAgLy8gWWVhclxuICB5OiBmdW5jdGlvbiB5KGRhdGUsIHRva2VuKSB7XG4gICAgLy8gRnJvbSBodHRwOi8vd3d3LnVuaWNvZGUub3JnL3JlcG9ydHMvdHIzNS90cjM1LTMxL3RyMzUtZGF0ZXMuaHRtbCNEYXRlX0Zvcm1hdF90b2tlbnNcbiAgICAvLyB8IFllYXIgICAgIHwgICAgIHkgfCB5eSB8ICAgeXl5IHwgIHl5eXkgfCB5eXl5eSB8XG4gICAgLy8gfC0tLS0tLS0tLS18LS0tLS0tLXwtLS0tfC0tLS0tLS18LS0tLS0tLXwtLS0tLS0tfFxuICAgIC8vIHwgQUQgMSAgICAgfCAgICAgMSB8IDAxIHwgICAwMDEgfCAgMDAwMSB8IDAwMDAxIHxcbiAgICAvLyB8IEFEIDEyICAgIHwgICAgMTIgfCAxMiB8ICAgMDEyIHwgIDAwMTIgfCAwMDAxMiB8XG4gICAgLy8gfCBBRCAxMjMgICB8ICAgMTIzIHwgMjMgfCAgIDEyMyB8ICAwMTIzIHwgMDAxMjMgfFxuICAgIC8vIHwgQUQgMTIzNCAgfCAgMTIzNCB8IDM0IHwgIDEyMzQgfCAgMTIzNCB8IDAxMjM0IHxcbiAgICAvLyB8IEFEIDEyMzQ1IHwgMTIzNDUgfCA0NSB8IDEyMzQ1IHwgMTIzNDUgfCAxMjM0NSB8XG4gICAgdmFyIHNpZ25lZFllYXIgPSBkYXRlLmdldFVUQ0Z1bGxZZWFyKCk7IC8vIFJldHVybnMgMSBmb3IgMSBCQyAod2hpY2ggaXMgeWVhciAwIGluIEphdmFTY3JpcHQpXG5cbiAgICB2YXIgeWVhciA9IHNpZ25lZFllYXIgPiAwID8gc2lnbmVkWWVhciA6IDEgLSBzaWduZWRZZWFyO1xuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3ModG9rZW4gPT09ICd5eScgPyB5ZWFyICUgMTAwIDogeWVhciwgdG9rZW4ubGVuZ3RoKTtcbiAgfSxcbiAgLy8gTW9udGhcbiAgTTogZnVuY3Rpb24gTShkYXRlLCB0b2tlbikge1xuICAgIHZhciBtb250aCA9IGRhdGUuZ2V0VVRDTW9udGgoKTtcbiAgICByZXR1cm4gdG9rZW4gPT09ICdNJyA/IFN0cmluZyhtb250aCArIDEpIDogYWRkTGVhZGluZ1plcm9zKG1vbnRoICsgMSwgMik7XG4gIH0sXG4gIC8vIERheSBvZiB0aGUgbW9udGhcbiAgZDogZnVuY3Rpb24gZChkYXRlLCB0b2tlbikge1xuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoZGF0ZS5nZXRVVENEYXRlKCksIHRva2VuLmxlbmd0aCk7XG4gIH0sXG4gIC8vIEFNIG9yIFBNXG4gIGE6IGZ1bmN0aW9uIGEoZGF0ZSwgdG9rZW4pIHtcbiAgICB2YXIgZGF5UGVyaW9kRW51bVZhbHVlID0gZGF0ZS5nZXRVVENIb3VycygpIC8gMTIgPj0gMSA/ICdwbScgOiAnYW0nO1xuXG4gICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgY2FzZSAnYSc6XG4gICAgICBjYXNlICdhYSc6XG4gICAgICAgIHJldHVybiBkYXlQZXJpb2RFbnVtVmFsdWUudG9VcHBlckNhc2UoKTtcblxuICAgICAgY2FzZSAnYWFhJzpcbiAgICAgICAgcmV0dXJuIGRheVBlcmlvZEVudW1WYWx1ZTtcblxuICAgICAgY2FzZSAnYWFhYWEnOlxuICAgICAgICByZXR1cm4gZGF5UGVyaW9kRW51bVZhbHVlWzBdO1xuXG4gICAgICBjYXNlICdhYWFhJzpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBkYXlQZXJpb2RFbnVtVmFsdWUgPT09ICdhbScgPyAnYS5tLicgOiAncC5tLic7XG4gICAgfVxuICB9LFxuICAvLyBIb3VyIFsxLTEyXVxuICBoOiBmdW5jdGlvbiBoKGRhdGUsIHRva2VuKSB7XG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhkYXRlLmdldFVUQ0hvdXJzKCkgJSAxMiB8fCAxMiwgdG9rZW4ubGVuZ3RoKTtcbiAgfSxcbiAgLy8gSG91ciBbMC0yM11cbiAgSDogZnVuY3Rpb24gSChkYXRlLCB0b2tlbikge1xuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoZGF0ZS5nZXRVVENIb3VycygpLCB0b2tlbi5sZW5ndGgpO1xuICB9LFxuICAvLyBNaW51dGVcbiAgbTogZnVuY3Rpb24gbShkYXRlLCB0b2tlbikge1xuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoZGF0ZS5nZXRVVENNaW51dGVzKCksIHRva2VuLmxlbmd0aCk7XG4gIH0sXG4gIC8vIFNlY29uZFxuICBzOiBmdW5jdGlvbiBzKGRhdGUsIHRva2VuKSB7XG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhkYXRlLmdldFVUQ1NlY29uZHMoKSwgdG9rZW4ubGVuZ3RoKTtcbiAgfSxcbiAgLy8gRnJhY3Rpb24gb2Ygc2Vjb25kXG4gIFM6IGZ1bmN0aW9uIFMoZGF0ZSwgdG9rZW4pIHtcbiAgICB2YXIgbnVtYmVyT2ZEaWdpdHMgPSB0b2tlbi5sZW5ndGg7XG4gICAgdmFyIG1pbGxpc2Vjb25kcyA9IGRhdGUuZ2V0VVRDTWlsbGlzZWNvbmRzKCk7XG4gICAgdmFyIGZyYWN0aW9uYWxTZWNvbmRzID0gTWF0aC5mbG9vcihtaWxsaXNlY29uZHMgKiBNYXRoLnBvdygxMCwgbnVtYmVyT2ZEaWdpdHMgLSAzKSk7XG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhmcmFjdGlvbmFsU2Vjb25kcywgdG9rZW4ubGVuZ3RoKTtcbiAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IGZvcm1hdHRlcnM7IiwiaW1wb3J0IGdldFVUQ0RheU9mWWVhciBmcm9tIFwiLi4vLi4vLi4vX2xpYi9nZXRVVENEYXlPZlllYXIvaW5kZXguanNcIjtcbmltcG9ydCBnZXRVVENJU09XZWVrIGZyb20gXCIuLi8uLi8uLi9fbGliL2dldFVUQ0lTT1dlZWsvaW5kZXguanNcIjtcbmltcG9ydCBnZXRVVENJU09XZWVrWWVhciBmcm9tIFwiLi4vLi4vLi4vX2xpYi9nZXRVVENJU09XZWVrWWVhci9pbmRleC5qc1wiO1xuaW1wb3J0IGdldFVUQ1dlZWsgZnJvbSBcIi4uLy4uLy4uL19saWIvZ2V0VVRDV2Vlay9pbmRleC5qc1wiO1xuaW1wb3J0IGdldFVUQ1dlZWtZZWFyIGZyb20gXCIuLi8uLi8uLi9fbGliL2dldFVUQ1dlZWtZZWFyL2luZGV4LmpzXCI7XG5pbXBvcnQgYWRkTGVhZGluZ1plcm9zIGZyb20gXCIuLi8uLi9hZGRMZWFkaW5nWmVyb3MvaW5kZXguanNcIjtcbmltcG9ydCBsaWdodEZvcm1hdHRlcnMgZnJvbSBcIi4uL2xpZ2h0Rm9ybWF0dGVycy9pbmRleC5qc1wiO1xudmFyIGRheVBlcmlvZEVudW0gPSB7XG4gIGFtOiAnYW0nLFxuICBwbTogJ3BtJyxcbiAgbWlkbmlnaHQ6ICdtaWRuaWdodCcsXG4gIG5vb246ICdub29uJyxcbiAgbW9ybmluZzogJ21vcm5pbmcnLFxuICBhZnRlcm5vb246ICdhZnRlcm5vb24nLFxuICBldmVuaW5nOiAnZXZlbmluZycsXG4gIG5pZ2h0OiAnbmlnaHQnXG59O1xuXG4vKlxuICogfCAgICAgfCBVbml0ICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgfCBVbml0ICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfC0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfFxuICogfCAgYSAgfCBBTSwgUE0gICAgICAgICAgICAgICAgICAgICAgICAgfCAgQSogfCBNaWxsaXNlY29uZHMgaW4gZGF5ICAgICAgICAgICAgfFxuICogfCAgYiAgfCBBTSwgUE0sIG5vb24sIG1pZG5pZ2h0ICAgICAgICAgfCAgQiAgfCBGbGV4aWJsZSBkYXkgcGVyaW9kICAgICAgICAgICAgfFxuICogfCAgYyAgfCBTdGFuZC1hbG9uZSBsb2NhbCBkYXkgb2Ygd2VlayAgfCAgQyogfCBMb2NhbGl6ZWQgaG91ciB3LyBkYXkgcGVyaW9kICAgfFxuICogfCAgZCAgfCBEYXkgb2YgbW9udGggICAgICAgICAgICAgICAgICAgfCAgRCAgfCBEYXkgb2YgeWVhciAgICAgICAgICAgICAgICAgICAgfFxuICogfCAgZSAgfCBMb2NhbCBkYXkgb2Ygd2VlayAgICAgICAgICAgICAgfCAgRSAgfCBEYXkgb2Ygd2VlayAgICAgICAgICAgICAgICAgICAgfFxuICogfCAgZiAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgRiogfCBEYXkgb2Ygd2VlayBpbiBtb250aCAgICAgICAgICAgfFxuICogfCAgZyogfCBNb2RpZmllZCBKdWxpYW4gZGF5ICAgICAgICAgICAgfCAgRyAgfCBFcmEgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAgaCAgfCBIb3VyIFsxLTEyXSAgICAgICAgICAgICAgICAgICAgfCAgSCAgfCBIb3VyIFswLTIzXSAgICAgICAgICAgICAgICAgICAgfFxuICogfCAgaSEgfCBJU08gZGF5IG9mIHdlZWsgICAgICAgICAgICAgICAgfCAgSSEgfCBJU08gd2VlayBvZiB5ZWFyICAgICAgICAgICAgICAgfFxuICogfCAgaiogfCBMb2NhbGl6ZWQgaG91ciB3LyBkYXkgcGVyaW9kICAgfCAgSiogfCBMb2NhbGl6ZWQgaG91ciB3L28gZGF5IHBlcmlvZCAgfFxuICogfCAgayAgfCBIb3VyIFsxLTI0XSAgICAgICAgICAgICAgICAgICAgfCAgSyAgfCBIb3VyIFswLTExXSAgICAgICAgICAgICAgICAgICAgfFxuICogfCAgbCogfCAoZGVwcmVjYXRlZCkgICAgICAgICAgICAgICAgICAgfCAgTCAgfCBTdGFuZC1hbG9uZSBtb250aCAgICAgICAgICAgICAgfFxuICogfCAgbSAgfCBNaW51dGUgICAgICAgICAgICAgICAgICAgICAgICAgfCAgTSAgfCBNb250aCAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAgbiAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgTiAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAgbyEgfCBPcmRpbmFsIG51bWJlciBtb2RpZmllciAgICAgICAgfCAgTyAgfCBUaW1lem9uZSAoR01UKSAgICAgICAgICAgICAgICAgfFxuICogfCAgcCEgfCBMb25nIGxvY2FsaXplZCB0aW1lICAgICAgICAgICAgfCAgUCEgfCBMb25nIGxvY2FsaXplZCBkYXRlICAgICAgICAgICAgfFxuICogfCAgcSAgfCBTdGFuZC1hbG9uZSBxdWFydGVyICAgICAgICAgICAgfCAgUSAgfCBRdWFydGVyICAgICAgICAgICAgICAgICAgICAgICAgfFxuICogfCAgciogfCBSZWxhdGVkIEdyZWdvcmlhbiB5ZWFyICAgICAgICAgfCAgUiEgfCBJU08gd2Vlay1udW1iZXJpbmcgeWVhciAgICAgICAgfFxuICogfCAgcyAgfCBTZWNvbmQgICAgICAgICAgICAgICAgICAgICAgICAgfCAgUyAgfCBGcmFjdGlvbiBvZiBzZWNvbmQgICAgICAgICAgICAgfFxuICogfCAgdCEgfCBTZWNvbmRzIHRpbWVzdGFtcCAgICAgICAgICAgICAgfCAgVCEgfCBNaWxsaXNlY29uZHMgdGltZXN0YW1wICAgICAgICAgfFxuICogfCAgdSAgfCBFeHRlbmRlZCB5ZWFyICAgICAgICAgICAgICAgICAgfCAgVSogfCBDeWNsaWMgeWVhciAgICAgICAgICAgICAgICAgICAgfFxuICogfCAgdiogfCBUaW1lem9uZSAoZ2VuZXJpYyBub24tbG9jYXQuKSAgfCAgViogfCBUaW1lem9uZSAobG9jYXRpb24pICAgICAgICAgICAgfFxuICogfCAgdyAgfCBMb2NhbCB3ZWVrIG9mIHllYXIgICAgICAgICAgICAgfCAgVyogfCBXZWVrIG9mIG1vbnRoICAgICAgICAgICAgICAgICAgfFxuICogfCAgeCAgfCBUaW1lem9uZSAoSVNPLTg2MDEgdy9vIFopICAgICAgfCAgWCAgfCBUaW1lem9uZSAoSVNPLTg2MDEpICAgICAgICAgICAgfFxuICogfCAgeSAgfCBZZWFyIChhYnMpICAgICAgICAgICAgICAgICAgICAgfCAgWSAgfCBMb2NhbCB3ZWVrLW51bWJlcmluZyB5ZWFyICAgICAgfFxuICogfCAgeiAgfCBUaW1lem9uZSAoc3BlY2lmaWMgbm9uLWxvY2F0LikgfCAgWiogfCBUaW1lem9uZSAoYWxpYXNlcykgICAgICAgICAgICAgfFxuICpcbiAqIExldHRlcnMgbWFya2VkIGJ5ICogYXJlIG5vdCBpbXBsZW1lbnRlZCBidXQgcmVzZXJ2ZWQgYnkgVW5pY29kZSBzdGFuZGFyZC5cbiAqXG4gKiBMZXR0ZXJzIG1hcmtlZCBieSAhIGFyZSBub24tc3RhbmRhcmQsIGJ1dCBpbXBsZW1lbnRlZCBieSBkYXRlLWZuczpcbiAqIC0gYG9gIG1vZGlmaWVzIHRoZSBwcmV2aW91cyB0b2tlbiB0byB0dXJuIGl0IGludG8gYW4gb3JkaW5hbCAoc2VlIGBmb3JtYXRgIGRvY3MpXG4gKiAtIGBpYCBpcyBJU08gZGF5IG9mIHdlZWsuIEZvciBgaWAgYW5kIGBpaWAgaXMgcmV0dXJucyBudW1lcmljIElTTyB3ZWVrIGRheXMsXG4gKiAgIGkuZS4gNyBmb3IgU3VuZGF5LCAxIGZvciBNb25kYXksIGV0Yy5cbiAqIC0gYElgIGlzIElTTyB3ZWVrIG9mIHllYXIsIGFzIG9wcG9zZWQgdG8gYHdgIHdoaWNoIGlzIGxvY2FsIHdlZWsgb2YgeWVhci5cbiAqIC0gYFJgIGlzIElTTyB3ZWVrLW51bWJlcmluZyB5ZWFyLCBhcyBvcHBvc2VkIHRvIGBZYCB3aGljaCBpcyBsb2NhbCB3ZWVrLW51bWJlcmluZyB5ZWFyLlxuICogICBgUmAgaXMgc3VwcG9zZWQgdG8gYmUgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIGBJYCBhbmQgYGlgXG4gKiAgIGZvciB1bml2ZXJzYWwgSVNPIHdlZWstbnVtYmVyaW5nIGRhdGUsIHdoZXJlYXNcbiAqICAgYFlgIGlzIHN1cHBvc2VkIHRvIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgd2AgYW5kIGBlYFxuICogICBmb3Igd2Vlay1udW1iZXJpbmcgZGF0ZSBzcGVjaWZpYyB0byB0aGUgbG9jYWxlLlxuICogLSBgUGAgaXMgbG9uZyBsb2NhbGl6ZWQgZGF0ZSBmb3JtYXRcbiAqIC0gYHBgIGlzIGxvbmcgbG9jYWxpemVkIHRpbWUgZm9ybWF0XG4gKi9cbnZhciBmb3JtYXR0ZXJzID0ge1xuICAvLyBFcmFcbiAgRzogZnVuY3Rpb24gRyhkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICB2YXIgZXJhID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpID4gMCA/IDEgOiAwO1xuXG4gICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgLy8gQUQsIEJDXG4gICAgICBjYXNlICdHJzpcbiAgICAgIGNhc2UgJ0dHJzpcbiAgICAgIGNhc2UgJ0dHRyc6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5lcmEoZXJhLCB7XG4gICAgICAgICAgd2lkdGg6ICdhYmJyZXZpYXRlZCdcbiAgICAgICAgfSk7XG4gICAgICAvLyBBLCBCXG5cbiAgICAgIGNhc2UgJ0dHR0dHJzpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmVyYShlcmEsIHtcbiAgICAgICAgICB3aWR0aDogJ25hcnJvdydcbiAgICAgICAgfSk7XG4gICAgICAvLyBBbm5vIERvbWluaSwgQmVmb3JlIENocmlzdFxuXG4gICAgICBjYXNlICdHR0dHJzpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5lcmEoZXJhLCB7XG4gICAgICAgICAgd2lkdGg6ICd3aWRlJ1xuICAgICAgICB9KTtcbiAgICB9XG4gIH0sXG4gIC8vIFllYXJcbiAgeTogZnVuY3Rpb24geShkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICAvLyBPcmRpbmFsIG51bWJlclxuICAgIGlmICh0b2tlbiA9PT0gJ3lvJykge1xuICAgICAgdmFyIHNpZ25lZFllYXIgPSBkYXRlLmdldFVUQ0Z1bGxZZWFyKCk7IC8vIFJldHVybnMgMSBmb3IgMSBCQyAod2hpY2ggaXMgeWVhciAwIGluIEphdmFTY3JpcHQpXG5cbiAgICAgIHZhciB5ZWFyID0gc2lnbmVkWWVhciA+IDAgPyBzaWduZWRZZWFyIDogMSAtIHNpZ25lZFllYXI7XG4gICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcih5ZWFyLCB7XG4gICAgICAgIHVuaXQ6ICd5ZWFyJ1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGxpZ2h0Rm9ybWF0dGVycy55KGRhdGUsIHRva2VuKTtcbiAgfSxcbiAgLy8gTG9jYWwgd2Vlay1udW1iZXJpbmcgeWVhclxuICBZOiBmdW5jdGlvbiBZKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSwgb3B0aW9ucykge1xuICAgIHZhciBzaWduZWRXZWVrWWVhciA9IGdldFVUQ1dlZWtZZWFyKGRhdGUsIG9wdGlvbnMpOyAvLyBSZXR1cm5zIDEgZm9yIDEgQkMgKHdoaWNoIGlzIHllYXIgMCBpbiBKYXZhU2NyaXB0KVxuXG4gICAgdmFyIHdlZWtZZWFyID0gc2lnbmVkV2Vla1llYXIgPiAwID8gc2lnbmVkV2Vla1llYXIgOiAxIC0gc2lnbmVkV2Vla1llYXI7IC8vIFR3byBkaWdpdCB5ZWFyXG5cbiAgICBpZiAodG9rZW4gPT09ICdZWScpIHtcbiAgICAgIHZhciB0d29EaWdpdFllYXIgPSB3ZWVrWWVhciAlIDEwMDtcbiAgICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3ModHdvRGlnaXRZZWFyLCAyKTtcbiAgICB9IC8vIE9yZGluYWwgbnVtYmVyXG5cblxuICAgIGlmICh0b2tlbiA9PT0gJ1lvJykge1xuICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIod2Vla1llYXIsIHtcbiAgICAgICAgdW5pdDogJ3llYXInXG4gICAgICB9KTtcbiAgICB9IC8vIFBhZGRpbmdcblxuXG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyh3ZWVrWWVhciwgdG9rZW4ubGVuZ3RoKTtcbiAgfSxcbiAgLy8gSVNPIHdlZWstbnVtYmVyaW5nIHllYXJcbiAgUjogZnVuY3Rpb24gUihkYXRlLCB0b2tlbikge1xuICAgIHZhciBpc29XZWVrWWVhciA9IGdldFVUQ0lTT1dlZWtZZWFyKGRhdGUpOyAvLyBQYWRkaW5nXG5cbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKGlzb1dlZWtZZWFyLCB0b2tlbi5sZW5ndGgpO1xuICB9LFxuICAvLyBFeHRlbmRlZCB5ZWFyLiBUaGlzIGlzIGEgc2luZ2xlIG51bWJlciBkZXNpZ25hdGluZyB0aGUgeWVhciBvZiB0aGlzIGNhbGVuZGFyIHN5c3RlbS5cbiAgLy8gVGhlIG1haW4gZGlmZmVyZW5jZSBiZXR3ZWVuIGB5YCBhbmQgYHVgIGxvY2FsaXplcnMgYXJlIEIuQy4geWVhcnM6XG4gIC8vIHwgWWVhciB8IGB5YCB8IGB1YCB8XG4gIC8vIHwtLS0tLS18LS0tLS18LS0tLS18XG4gIC8vIHwgQUMgMSB8ICAgMSB8ICAgMSB8XG4gIC8vIHwgQkMgMSB8ICAgMSB8ICAgMCB8XG4gIC8vIHwgQkMgMiB8ICAgMiB8ICAtMSB8XG4gIC8vIEFsc28gYHl5YCBhbHdheXMgcmV0dXJucyB0aGUgbGFzdCB0d28gZGlnaXRzIG9mIGEgeWVhcixcbiAgLy8gd2hpbGUgYHV1YCBwYWRzIHNpbmdsZSBkaWdpdCB5ZWFycyB0byAyIGNoYXJhY3RlcnMgYW5kIHJldHVybnMgb3RoZXIgeWVhcnMgdW5jaGFuZ2VkLlxuICB1OiBmdW5jdGlvbiB1KGRhdGUsIHRva2VuKSB7XG4gICAgdmFyIHllYXIgPSBkYXRlLmdldFVUQ0Z1bGxZZWFyKCk7XG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyh5ZWFyLCB0b2tlbi5sZW5ndGgpO1xuICB9LFxuICAvLyBRdWFydGVyXG4gIFE6IGZ1bmN0aW9uIFEoZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XG4gICAgdmFyIHF1YXJ0ZXIgPSBNYXRoLmNlaWwoKGRhdGUuZ2V0VVRDTW9udGgoKSArIDEpIC8gMyk7XG5cbiAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICAvLyAxLCAyLCAzLCA0XG4gICAgICBjYXNlICdRJzpcbiAgICAgICAgcmV0dXJuIFN0cmluZyhxdWFydGVyKTtcbiAgICAgIC8vIDAxLCAwMiwgMDMsIDA0XG5cbiAgICAgIGNhc2UgJ1FRJzpcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhxdWFydGVyLCAyKTtcbiAgICAgIC8vIDFzdCwgMm5kLCAzcmQsIDR0aFxuXG4gICAgICBjYXNlICdRbyc6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKHF1YXJ0ZXIsIHtcbiAgICAgICAgICB1bml0OiAncXVhcnRlcidcbiAgICAgICAgfSk7XG4gICAgICAvLyBRMSwgUTIsIFEzLCBRNFxuXG4gICAgICBjYXNlICdRUVEnOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUucXVhcnRlcihxdWFydGVyLCB7XG4gICAgICAgICAgd2lkdGg6ICdhYmJyZXZpYXRlZCcsXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXG4gICAgICAgIH0pO1xuICAgICAgLy8gMSwgMiwgMywgNCAobmFycm93IHF1YXJ0ZXI7IGNvdWxkIGJlIG5vdCBudW1lcmljYWwpXG5cbiAgICAgIGNhc2UgJ1FRUVFRJzpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLnF1YXJ0ZXIocXVhcnRlciwge1xuICAgICAgICAgIHdpZHRoOiAnbmFycm93JyxcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcbiAgICAgICAgfSk7XG4gICAgICAvLyAxc3QgcXVhcnRlciwgMm5kIHF1YXJ0ZXIsIC4uLlxuXG4gICAgICBjYXNlICdRUVFRJzpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5xdWFydGVyKHF1YXJ0ZXIsIHtcbiAgICAgICAgICB3aWR0aDogJ3dpZGUnLFxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xuICAgICAgICB9KTtcbiAgICB9XG4gIH0sXG4gIC8vIFN0YW5kLWFsb25lIHF1YXJ0ZXJcbiAgcTogZnVuY3Rpb24gcShkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICB2YXIgcXVhcnRlciA9IE1hdGguY2VpbCgoZGF0ZS5nZXRVVENNb250aCgpICsgMSkgLyAzKTtcblxuICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgIC8vIDEsIDIsIDMsIDRcbiAgICAgIGNhc2UgJ3EnOlxuICAgICAgICByZXR1cm4gU3RyaW5nKHF1YXJ0ZXIpO1xuICAgICAgLy8gMDEsIDAyLCAwMywgMDRcblxuICAgICAgY2FzZSAncXEnOlxuICAgICAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKHF1YXJ0ZXIsIDIpO1xuICAgICAgLy8gMXN0LCAybmQsIDNyZCwgNHRoXG5cbiAgICAgIGNhc2UgJ3FvJzpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIocXVhcnRlciwge1xuICAgICAgICAgIHVuaXQ6ICdxdWFydGVyJ1xuICAgICAgICB9KTtcbiAgICAgIC8vIFExLCBRMiwgUTMsIFE0XG5cbiAgICAgIGNhc2UgJ3FxcSc6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5xdWFydGVyKHF1YXJ0ZXIsIHtcbiAgICAgICAgICB3aWR0aDogJ2FiYnJldmlhdGVkJyxcbiAgICAgICAgICBjb250ZXh0OiAnc3RhbmRhbG9uZSdcbiAgICAgICAgfSk7XG4gICAgICAvLyAxLCAyLCAzLCA0IChuYXJyb3cgcXVhcnRlcjsgY291bGQgYmUgbm90IG51bWVyaWNhbClcblxuICAgICAgY2FzZSAncXFxcXEnOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUucXVhcnRlcihxdWFydGVyLCB7XG4gICAgICAgICAgd2lkdGg6ICduYXJyb3cnLFxuICAgICAgICAgIGNvbnRleHQ6ICdzdGFuZGFsb25lJ1xuICAgICAgICB9KTtcbiAgICAgIC8vIDFzdCBxdWFydGVyLCAybmQgcXVhcnRlciwgLi4uXG5cbiAgICAgIGNhc2UgJ3FxcXEnOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLnF1YXJ0ZXIocXVhcnRlciwge1xuICAgICAgICAgIHdpZHRoOiAnd2lkZScsXG4gICAgICAgICAgY29udGV4dDogJ3N0YW5kYWxvbmUnXG4gICAgICAgIH0pO1xuICAgIH1cbiAgfSxcbiAgLy8gTW9udGhcbiAgTTogZnVuY3Rpb24gTShkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICB2YXIgbW9udGggPSBkYXRlLmdldFVUQ01vbnRoKCk7XG5cbiAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICBjYXNlICdNJzpcbiAgICAgIGNhc2UgJ01NJzpcbiAgICAgICAgcmV0dXJuIGxpZ2h0Rm9ybWF0dGVycy5NKGRhdGUsIHRva2VuKTtcbiAgICAgIC8vIDFzdCwgMm5kLCAuLi4sIDEydGhcblxuICAgICAgY2FzZSAnTW8nOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihtb250aCArIDEsIHtcbiAgICAgICAgICB1bml0OiAnbW9udGgnXG4gICAgICAgIH0pO1xuICAgICAgLy8gSmFuLCBGZWIsIC4uLiwgRGVjXG5cbiAgICAgIGNhc2UgJ01NTSc6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5tb250aChtb250aCwge1xuICAgICAgICAgIHdpZHRoOiAnYWJicmV2aWF0ZWQnLFxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xuICAgICAgICB9KTtcbiAgICAgIC8vIEosIEYsIC4uLiwgRFxuXG4gICAgICBjYXNlICdNTU1NTSc6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5tb250aChtb250aCwge1xuICAgICAgICAgIHdpZHRoOiAnbmFycm93JyxcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcbiAgICAgICAgfSk7XG4gICAgICAvLyBKYW51YXJ5LCBGZWJydWFyeSwgLi4uLCBEZWNlbWJlclxuXG4gICAgICBjYXNlICdNTU1NJzpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5tb250aChtb250aCwge1xuICAgICAgICAgIHdpZHRoOiAnd2lkZScsXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXG4gICAgICAgIH0pO1xuICAgIH1cbiAgfSxcbiAgLy8gU3RhbmQtYWxvbmUgbW9udGhcbiAgTDogZnVuY3Rpb24gTChkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICB2YXIgbW9udGggPSBkYXRlLmdldFVUQ01vbnRoKCk7XG5cbiAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICAvLyAxLCAyLCAuLi4sIDEyXG4gICAgICBjYXNlICdMJzpcbiAgICAgICAgcmV0dXJuIFN0cmluZyhtb250aCArIDEpO1xuICAgICAgLy8gMDEsIDAyLCAuLi4sIDEyXG5cbiAgICAgIGNhc2UgJ0xMJzpcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhtb250aCArIDEsIDIpO1xuICAgICAgLy8gMXN0LCAybmQsIC4uLiwgMTJ0aFxuXG4gICAgICBjYXNlICdMbyc6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKG1vbnRoICsgMSwge1xuICAgICAgICAgIHVuaXQ6ICdtb250aCdcbiAgICAgICAgfSk7XG4gICAgICAvLyBKYW4sIEZlYiwgLi4uLCBEZWNcblxuICAgICAgY2FzZSAnTExMJzpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLm1vbnRoKG1vbnRoLCB7XG4gICAgICAgICAgd2lkdGg6ICdhYmJyZXZpYXRlZCcsXG4gICAgICAgICAgY29udGV4dDogJ3N0YW5kYWxvbmUnXG4gICAgICAgIH0pO1xuICAgICAgLy8gSiwgRiwgLi4uLCBEXG5cbiAgICAgIGNhc2UgJ0xMTExMJzpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLm1vbnRoKG1vbnRoLCB7XG4gICAgICAgICAgd2lkdGg6ICduYXJyb3cnLFxuICAgICAgICAgIGNvbnRleHQ6ICdzdGFuZGFsb25lJ1xuICAgICAgICB9KTtcbiAgICAgIC8vIEphbnVhcnksIEZlYnJ1YXJ5LCAuLi4sIERlY2VtYmVyXG5cbiAgICAgIGNhc2UgJ0xMTEwnOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLm1vbnRoKG1vbnRoLCB7XG4gICAgICAgICAgd2lkdGg6ICd3aWRlJyxcbiAgICAgICAgICBjb250ZXh0OiAnc3RhbmRhbG9uZSdcbiAgICAgICAgfSk7XG4gICAgfVxuICB9LFxuICAvLyBMb2NhbCB3ZWVrIG9mIHllYXJcbiAgdzogZnVuY3Rpb24gdyhkYXRlLCB0b2tlbiwgbG9jYWxpemUsIG9wdGlvbnMpIHtcbiAgICB2YXIgd2VlayA9IGdldFVUQ1dlZWsoZGF0ZSwgb3B0aW9ucyk7XG5cbiAgICBpZiAodG9rZW4gPT09ICd3bycpIHtcbiAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKHdlZWssIHtcbiAgICAgICAgdW5pdDogJ3dlZWsnXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKHdlZWssIHRva2VuLmxlbmd0aCk7XG4gIH0sXG4gIC8vIElTTyB3ZWVrIG9mIHllYXJcbiAgSTogZnVuY3Rpb24gSShkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICB2YXIgaXNvV2VlayA9IGdldFVUQ0lTT1dlZWsoZGF0ZSk7XG5cbiAgICBpZiAodG9rZW4gPT09ICdJbycpIHtcbiAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKGlzb1dlZWssIHtcbiAgICAgICAgdW5pdDogJ3dlZWsnXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKGlzb1dlZWssIHRva2VuLmxlbmd0aCk7XG4gIH0sXG4gIC8vIERheSBvZiB0aGUgbW9udGhcbiAgZDogZnVuY3Rpb24gZChkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICBpZiAodG9rZW4gPT09ICdkbycpIHtcbiAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKGRhdGUuZ2V0VVRDRGF0ZSgpLCB7XG4gICAgICAgIHVuaXQ6ICdkYXRlJ1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGxpZ2h0Rm9ybWF0dGVycy5kKGRhdGUsIHRva2VuKTtcbiAgfSxcbiAgLy8gRGF5IG9mIHllYXJcbiAgRDogZnVuY3Rpb24gRChkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICB2YXIgZGF5T2ZZZWFyID0gZ2V0VVRDRGF5T2ZZZWFyKGRhdGUpO1xuXG4gICAgaWYgKHRva2VuID09PSAnRG8nKSB7XG4gICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihkYXlPZlllYXIsIHtcbiAgICAgICAgdW5pdDogJ2RheU9mWWVhcidcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoZGF5T2ZZZWFyLCB0b2tlbi5sZW5ndGgpO1xuICB9LFxuICAvLyBEYXkgb2Ygd2Vla1xuICBFOiBmdW5jdGlvbiBFKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xuICAgIHZhciBkYXlPZldlZWsgPSBkYXRlLmdldFVUQ0RheSgpO1xuXG4gICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgLy8gVHVlXG4gICAgICBjYXNlICdFJzpcbiAgICAgIGNhc2UgJ0VFJzpcbiAgICAgIGNhc2UgJ0VFRSc6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgd2lkdGg6ICdhYmJyZXZpYXRlZCcsXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXG4gICAgICAgIH0pO1xuICAgICAgLy8gVFxuXG4gICAgICBjYXNlICdFRUVFRSc6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgd2lkdGg6ICduYXJyb3cnLFxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xuICAgICAgICB9KTtcbiAgICAgIC8vIFR1XG5cbiAgICAgIGNhc2UgJ0VFRUVFRSc6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgd2lkdGg6ICdzaG9ydCcsXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXG4gICAgICAgIH0pO1xuICAgICAgLy8gVHVlc2RheVxuXG4gICAgICBjYXNlICdFRUVFJzpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgd2lkdGg6ICd3aWRlJyxcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcbiAgICAgICAgfSk7XG4gICAgfVxuICB9LFxuICAvLyBMb2NhbCBkYXkgb2Ygd2Vla1xuICBlOiBmdW5jdGlvbiBlKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSwgb3B0aW9ucykge1xuICAgIHZhciBkYXlPZldlZWsgPSBkYXRlLmdldFVUQ0RheSgpO1xuICAgIHZhciBsb2NhbERheU9mV2VlayA9IChkYXlPZldlZWsgLSBvcHRpb25zLndlZWtTdGFydHNPbiArIDgpICUgNyB8fCA3O1xuXG4gICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgLy8gTnVtZXJpY2FsIHZhbHVlIChOdGggZGF5IG9mIHdlZWsgd2l0aCBjdXJyZW50IGxvY2FsZSBvciB3ZWVrU3RhcnRzT24pXG4gICAgICBjYXNlICdlJzpcbiAgICAgICAgcmV0dXJuIFN0cmluZyhsb2NhbERheU9mV2Vlayk7XG4gICAgICAvLyBQYWRkZWQgbnVtZXJpY2FsIHZhbHVlXG5cbiAgICAgIGNhc2UgJ2VlJzpcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhsb2NhbERheU9mV2VlaywgMik7XG4gICAgICAvLyAxc3QsIDJuZCwgLi4uLCA3dGhcblxuICAgICAgY2FzZSAnZW8nOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihsb2NhbERheU9mV2Vlaywge1xuICAgICAgICAgIHVuaXQ6ICdkYXknXG4gICAgICAgIH0pO1xuXG4gICAgICBjYXNlICdlZWUnOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5KGRheU9mV2Vlaywge1xuICAgICAgICAgIHdpZHRoOiAnYWJicmV2aWF0ZWQnLFxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xuICAgICAgICB9KTtcbiAgICAgIC8vIFRcblxuICAgICAgY2FzZSAnZWVlZWUnOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5KGRheU9mV2Vlaywge1xuICAgICAgICAgIHdpZHRoOiAnbmFycm93JyxcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcbiAgICAgICAgfSk7XG4gICAgICAvLyBUdVxuXG4gICAgICBjYXNlICdlZWVlZWUnOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5KGRheU9mV2Vlaywge1xuICAgICAgICAgIHdpZHRoOiAnc2hvcnQnLFxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xuICAgICAgICB9KTtcbiAgICAgIC8vIFR1ZXNkYXlcblxuICAgICAgY2FzZSAnZWVlZSc6XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5KGRheU9mV2Vlaywge1xuICAgICAgICAgIHdpZHRoOiAnd2lkZScsXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXG4gICAgICAgIH0pO1xuICAgIH1cbiAgfSxcbiAgLy8gU3RhbmQtYWxvbmUgbG9jYWwgZGF5IG9mIHdlZWtcbiAgYzogZnVuY3Rpb24gYyhkYXRlLCB0b2tlbiwgbG9jYWxpemUsIG9wdGlvbnMpIHtcbiAgICB2YXIgZGF5T2ZXZWVrID0gZGF0ZS5nZXRVVENEYXkoKTtcbiAgICB2YXIgbG9jYWxEYXlPZldlZWsgPSAoZGF5T2ZXZWVrIC0gb3B0aW9ucy53ZWVrU3RhcnRzT24gKyA4KSAlIDcgfHwgNztcblxuICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgIC8vIE51bWVyaWNhbCB2YWx1ZSAoc2FtZSBhcyBpbiBgZWApXG4gICAgICBjYXNlICdjJzpcbiAgICAgICAgcmV0dXJuIFN0cmluZyhsb2NhbERheU9mV2Vlayk7XG4gICAgICAvLyBQYWRkZWQgbnVtZXJpY2FsIHZhbHVlXG5cbiAgICAgIGNhc2UgJ2NjJzpcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhsb2NhbERheU9mV2VlaywgdG9rZW4ubGVuZ3RoKTtcbiAgICAgIC8vIDFzdCwgMm5kLCAuLi4sIDd0aFxuXG4gICAgICBjYXNlICdjbyc6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKGxvY2FsRGF5T2ZXZWVrLCB7XG4gICAgICAgICAgdW5pdDogJ2RheSdcbiAgICAgICAgfSk7XG5cbiAgICAgIGNhc2UgJ2NjYyc6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgd2lkdGg6ICdhYmJyZXZpYXRlZCcsXG4gICAgICAgICAgY29udGV4dDogJ3N0YW5kYWxvbmUnXG4gICAgICAgIH0pO1xuICAgICAgLy8gVFxuXG4gICAgICBjYXNlICdjY2NjYyc6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgd2lkdGg6ICduYXJyb3cnLFxuICAgICAgICAgIGNvbnRleHQ6ICdzdGFuZGFsb25lJ1xuICAgICAgICB9KTtcbiAgICAgIC8vIFR1XG5cbiAgICAgIGNhc2UgJ2NjY2NjYyc6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgd2lkdGg6ICdzaG9ydCcsXG4gICAgICAgICAgY29udGV4dDogJ3N0YW5kYWxvbmUnXG4gICAgICAgIH0pO1xuICAgICAgLy8gVHVlc2RheVxuXG4gICAgICBjYXNlICdjY2NjJzpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXkoZGF5T2ZXZWVrLCB7XG4gICAgICAgICAgd2lkdGg6ICd3aWRlJyxcbiAgICAgICAgICBjb250ZXh0OiAnc3RhbmRhbG9uZSdcbiAgICAgICAgfSk7XG4gICAgfVxuICB9LFxuICAvLyBJU08gZGF5IG9mIHdlZWtcbiAgaTogZnVuY3Rpb24gaShkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICB2YXIgZGF5T2ZXZWVrID0gZGF0ZS5nZXRVVENEYXkoKTtcbiAgICB2YXIgaXNvRGF5T2ZXZWVrID0gZGF5T2ZXZWVrID09PSAwID8gNyA6IGRheU9mV2VlaztcblxuICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgIC8vIDJcbiAgICAgIGNhc2UgJ2knOlxuICAgICAgICByZXR1cm4gU3RyaW5nKGlzb0RheU9mV2Vlayk7XG4gICAgICAvLyAwMlxuXG4gICAgICBjYXNlICdpaSc6XG4gICAgICAgIHJldHVybiBhZGRMZWFkaW5nWmVyb3MoaXNvRGF5T2ZXZWVrLCB0b2tlbi5sZW5ndGgpO1xuICAgICAgLy8gMm5kXG5cbiAgICAgIGNhc2UgJ2lvJzpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIoaXNvRGF5T2ZXZWVrLCB7XG4gICAgICAgICAgdW5pdDogJ2RheSdcbiAgICAgICAgfSk7XG4gICAgICAvLyBUdWVcblxuICAgICAgY2FzZSAnaWlpJzpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICB3aWR0aDogJ2FiYnJldmlhdGVkJyxcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcbiAgICAgICAgfSk7XG4gICAgICAvLyBUXG5cbiAgICAgIGNhc2UgJ2lpaWlpJzpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICB3aWR0aDogJ25hcnJvdycsXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXG4gICAgICAgIH0pO1xuICAgICAgLy8gVHVcblxuICAgICAgY2FzZSAnaWlpaWlpJzpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICB3aWR0aDogJ3Nob3J0JyxcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcbiAgICAgICAgfSk7XG4gICAgICAvLyBUdWVzZGF5XG5cbiAgICAgIGNhc2UgJ2lpaWknOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheShkYXlPZldlZWssIHtcbiAgICAgICAgICB3aWR0aDogJ3dpZGUnLFxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xuICAgICAgICB9KTtcbiAgICB9XG4gIH0sXG4gIC8vIEFNIG9yIFBNXG4gIGE6IGZ1bmN0aW9uIGEoZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XG4gICAgdmFyIGhvdXJzID0gZGF0ZS5nZXRVVENIb3VycygpO1xuICAgIHZhciBkYXlQZXJpb2RFbnVtVmFsdWUgPSBob3VycyAvIDEyID49IDEgPyAncG0nIDogJ2FtJztcblxuICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgIGNhc2UgJ2EnOlxuICAgICAgY2FzZSAnYWEnOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xuICAgICAgICAgIHdpZHRoOiAnYWJicmV2aWF0ZWQnLFxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xuICAgICAgICB9KTtcblxuICAgICAgY2FzZSAnYWFhJzpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcbiAgICAgICAgICB3aWR0aDogJ2FiYnJldmlhdGVkJyxcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcbiAgICAgICAgfSkudG9Mb3dlckNhc2UoKTtcblxuICAgICAgY2FzZSAnYWFhYWEnOlxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xuICAgICAgICAgIHdpZHRoOiAnbmFycm93JyxcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcbiAgICAgICAgfSk7XG5cbiAgICAgIGNhc2UgJ2FhYWEnOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcbiAgICAgICAgICB3aWR0aDogJ3dpZGUnLFxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xuICAgICAgICB9KTtcbiAgICB9XG4gIH0sXG4gIC8vIEFNLCBQTSwgbWlkbmlnaHQsIG5vb25cbiAgYjogZnVuY3Rpb24gYihkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICB2YXIgaG91cnMgPSBkYXRlLmdldFVUQ0hvdXJzKCk7XG4gICAgdmFyIGRheVBlcmlvZEVudW1WYWx1ZTtcblxuICAgIGlmIChob3VycyA9PT0gMTIpIHtcbiAgICAgIGRheVBlcmlvZEVudW1WYWx1ZSA9IGRheVBlcmlvZEVudW0ubm9vbjtcbiAgICB9IGVsc2UgaWYgKGhvdXJzID09PSAwKSB7XG4gICAgICBkYXlQZXJpb2RFbnVtVmFsdWUgPSBkYXlQZXJpb2RFbnVtLm1pZG5pZ2h0O1xuICAgIH0gZWxzZSB7XG4gICAgICBkYXlQZXJpb2RFbnVtVmFsdWUgPSBob3VycyAvIDEyID49IDEgPyAncG0nIDogJ2FtJztcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICBjYXNlICdiJzpcbiAgICAgIGNhc2UgJ2JiJzpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcbiAgICAgICAgICB3aWR0aDogJ2FiYnJldmlhdGVkJyxcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcbiAgICAgICAgfSk7XG5cbiAgICAgIGNhc2UgJ2JiYic6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XG4gICAgICAgICAgd2lkdGg6ICdhYmJyZXZpYXRlZCcsXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXG4gICAgICAgIH0pLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgIGNhc2UgJ2JiYmJiJzpcbiAgICAgICAgcmV0dXJuIGxvY2FsaXplLmRheVBlcmlvZChkYXlQZXJpb2RFbnVtVmFsdWUsIHtcbiAgICAgICAgICB3aWR0aDogJ25hcnJvdycsXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXG4gICAgICAgIH0pO1xuXG4gICAgICBjYXNlICdiYmJiJzpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XG4gICAgICAgICAgd2lkdGg6ICd3aWRlJyxcbiAgICAgICAgICBjb250ZXh0OiAnZm9ybWF0dGluZydcbiAgICAgICAgfSk7XG4gICAgfVxuICB9LFxuICAvLyBpbiB0aGUgbW9ybmluZywgaW4gdGhlIGFmdGVybm9vbiwgaW4gdGhlIGV2ZW5pbmcsIGF0IG5pZ2h0XG4gIEI6IGZ1bmN0aW9uIEIoZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XG4gICAgdmFyIGhvdXJzID0gZGF0ZS5nZXRVVENIb3VycygpO1xuICAgIHZhciBkYXlQZXJpb2RFbnVtVmFsdWU7XG5cbiAgICBpZiAoaG91cnMgPj0gMTcpIHtcbiAgICAgIGRheVBlcmlvZEVudW1WYWx1ZSA9IGRheVBlcmlvZEVudW0uZXZlbmluZztcbiAgICB9IGVsc2UgaWYgKGhvdXJzID49IDEyKSB7XG4gICAgICBkYXlQZXJpb2RFbnVtVmFsdWUgPSBkYXlQZXJpb2RFbnVtLmFmdGVybm9vbjtcbiAgICB9IGVsc2UgaWYgKGhvdXJzID49IDQpIHtcbiAgICAgIGRheVBlcmlvZEVudW1WYWx1ZSA9IGRheVBlcmlvZEVudW0ubW9ybmluZztcbiAgICB9IGVsc2Uge1xuICAgICAgZGF5UGVyaW9kRW51bVZhbHVlID0gZGF5UGVyaW9kRW51bS5uaWdodDtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICBjYXNlICdCJzpcbiAgICAgIGNhc2UgJ0JCJzpcbiAgICAgIGNhc2UgJ0JCQic6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XG4gICAgICAgICAgd2lkdGg6ICdhYmJyZXZpYXRlZCcsXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXG4gICAgICAgIH0pO1xuXG4gICAgICBjYXNlICdCQkJCQic6XG4gICAgICAgIHJldHVybiBsb2NhbGl6ZS5kYXlQZXJpb2QoZGF5UGVyaW9kRW51bVZhbHVlLCB7XG4gICAgICAgICAgd2lkdGg6ICduYXJyb3cnLFxuICAgICAgICAgIGNvbnRleHQ6ICdmb3JtYXR0aW5nJ1xuICAgICAgICB9KTtcblxuICAgICAgY2FzZSAnQkJCQic6XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gbG9jYWxpemUuZGF5UGVyaW9kKGRheVBlcmlvZEVudW1WYWx1ZSwge1xuICAgICAgICAgIHdpZHRoOiAnd2lkZScsXG4gICAgICAgICAgY29udGV4dDogJ2Zvcm1hdHRpbmcnXG4gICAgICAgIH0pO1xuICAgIH1cbiAgfSxcbiAgLy8gSG91ciBbMS0xMl1cbiAgaDogZnVuY3Rpb24gaChkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICBpZiAodG9rZW4gPT09ICdobycpIHtcbiAgICAgIHZhciBob3VycyA9IGRhdGUuZ2V0VVRDSG91cnMoKSAlIDEyO1xuICAgICAgaWYgKGhvdXJzID09PSAwKSBob3VycyA9IDEyO1xuICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIoaG91cnMsIHtcbiAgICAgICAgdW5pdDogJ2hvdXInXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gbGlnaHRGb3JtYXR0ZXJzLmgoZGF0ZSwgdG9rZW4pO1xuICB9LFxuICAvLyBIb3VyIFswLTIzXVxuICBIOiBmdW5jdGlvbiBIKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xuICAgIGlmICh0b2tlbiA9PT0gJ0hvJykge1xuICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIoZGF0ZS5nZXRVVENIb3VycygpLCB7XG4gICAgICAgIHVuaXQ6ICdob3VyJ1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGxpZ2h0Rm9ybWF0dGVycy5IKGRhdGUsIHRva2VuKTtcbiAgfSxcbiAgLy8gSG91ciBbMC0xMV1cbiAgSzogZnVuY3Rpb24gSyhkYXRlLCB0b2tlbiwgbG9jYWxpemUpIHtcbiAgICB2YXIgaG91cnMgPSBkYXRlLmdldFVUQ0hvdXJzKCkgJSAxMjtcblxuICAgIGlmICh0b2tlbiA9PT0gJ0tvJykge1xuICAgICAgcmV0dXJuIGxvY2FsaXplLm9yZGluYWxOdW1iZXIoaG91cnMsIHtcbiAgICAgICAgdW5pdDogJ2hvdXInXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKGhvdXJzLCB0b2tlbi5sZW5ndGgpO1xuICB9LFxuICAvLyBIb3VyIFsxLTI0XVxuICBrOiBmdW5jdGlvbiBrKGRhdGUsIHRva2VuLCBsb2NhbGl6ZSkge1xuICAgIHZhciBob3VycyA9IGRhdGUuZ2V0VVRDSG91cnMoKTtcbiAgICBpZiAoaG91cnMgPT09IDApIGhvdXJzID0gMjQ7XG5cbiAgICBpZiAodG9rZW4gPT09ICdrbycpIHtcbiAgICAgIHJldHVybiBsb2NhbGl6ZS5vcmRpbmFsTnVtYmVyKGhvdXJzLCB7XG4gICAgICAgIHVuaXQ6ICdob3VyJ1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyhob3VycywgdG9rZW4ubGVuZ3RoKTtcbiAgfSxcbiAgLy8gTWludXRlXG4gIG06IGZ1bmN0aW9uIG0oZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XG4gICAgaWYgKHRva2VuID09PSAnbW8nKSB7XG4gICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihkYXRlLmdldFVUQ01pbnV0ZXMoKSwge1xuICAgICAgICB1bml0OiAnbWludXRlJ1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGxpZ2h0Rm9ybWF0dGVycy5tKGRhdGUsIHRva2VuKTtcbiAgfSxcbiAgLy8gU2Vjb25kXG4gIHM6IGZ1bmN0aW9uIHMoZGF0ZSwgdG9rZW4sIGxvY2FsaXplKSB7XG4gICAgaWYgKHRva2VuID09PSAnc28nKSB7XG4gICAgICByZXR1cm4gbG9jYWxpemUub3JkaW5hbE51bWJlcihkYXRlLmdldFVUQ1NlY29uZHMoKSwge1xuICAgICAgICB1bml0OiAnc2Vjb25kJ1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGxpZ2h0Rm9ybWF0dGVycy5zKGRhdGUsIHRva2VuKTtcbiAgfSxcbiAgLy8gRnJhY3Rpb24gb2Ygc2Vjb25kXG4gIFM6IGZ1bmN0aW9uIFMoZGF0ZSwgdG9rZW4pIHtcbiAgICByZXR1cm4gbGlnaHRGb3JtYXR0ZXJzLlMoZGF0ZSwgdG9rZW4pO1xuICB9LFxuICAvLyBUaW1lem9uZSAoSVNPLTg2MDEuIElmIG9mZnNldCBpcyAwLCBvdXRwdXQgaXMgYWx3YXlzIGAnWidgKVxuICBYOiBmdW5jdGlvbiBYKGRhdGUsIHRva2VuLCBfbG9jYWxpemUsIG9wdGlvbnMpIHtcbiAgICB2YXIgb3JpZ2luYWxEYXRlID0gb3B0aW9ucy5fb3JpZ2luYWxEYXRlIHx8IGRhdGU7XG4gICAgdmFyIHRpbWV6b25lT2Zmc2V0ID0gb3JpZ2luYWxEYXRlLmdldFRpbWV6b25lT2Zmc2V0KCk7XG5cbiAgICBpZiAodGltZXpvbmVPZmZzZXQgPT09IDApIHtcbiAgICAgIHJldHVybiAnWic7XG4gICAgfVxuXG4gICAgc3dpdGNoICh0b2tlbikge1xuICAgICAgLy8gSG91cnMgYW5kIG9wdGlvbmFsIG1pbnV0ZXNcbiAgICAgIGNhc2UgJ1gnOlxuICAgICAgICByZXR1cm4gZm9ybWF0VGltZXpvbmVXaXRoT3B0aW9uYWxNaW51dGVzKHRpbWV6b25lT2Zmc2V0KTtcbiAgICAgIC8vIEhvdXJzLCBtaW51dGVzIGFuZCBvcHRpb25hbCBzZWNvbmRzIHdpdGhvdXQgYDpgIGRlbGltaXRlclxuICAgICAgLy8gTm90ZTogbmVpdGhlciBJU08tODYwMSBub3IgSmF2YVNjcmlwdCBzdXBwb3J0cyBzZWNvbmRzIGluIHRpbWV6b25lIG9mZnNldHNcbiAgICAgIC8vIHNvIHRoaXMgdG9rZW4gYWx3YXlzIGhhcyB0aGUgc2FtZSBvdXRwdXQgYXMgYFhYYFxuXG4gICAgICBjYXNlICdYWFhYJzpcbiAgICAgIGNhc2UgJ1hYJzpcbiAgICAgICAgLy8gSG91cnMgYW5kIG1pbnV0ZXMgd2l0aG91dCBgOmAgZGVsaW1pdGVyXG4gICAgICAgIHJldHVybiBmb3JtYXRUaW1lem9uZSh0aW1lem9uZU9mZnNldCk7XG4gICAgICAvLyBIb3VycywgbWludXRlcyBhbmQgb3B0aW9uYWwgc2Vjb25kcyB3aXRoIGA6YCBkZWxpbWl0ZXJcbiAgICAgIC8vIE5vdGU6IG5laXRoZXIgSVNPLTg2MDEgbm9yIEphdmFTY3JpcHQgc3VwcG9ydHMgc2Vjb25kcyBpbiB0aW1lem9uZSBvZmZzZXRzXG4gICAgICAvLyBzbyB0aGlzIHRva2VuIGFsd2F5cyBoYXMgdGhlIHNhbWUgb3V0cHV0IGFzIGBYWFhgXG5cbiAgICAgIGNhc2UgJ1hYWFhYJzpcbiAgICAgIGNhc2UgJ1hYWCc6IC8vIEhvdXJzIGFuZCBtaW51dGVzIHdpdGggYDpgIGRlbGltaXRlclxuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gZm9ybWF0VGltZXpvbmUodGltZXpvbmVPZmZzZXQsICc6Jyk7XG4gICAgfVxuICB9LFxuICAvLyBUaW1lem9uZSAoSVNPLTg2MDEuIElmIG9mZnNldCBpcyAwLCBvdXRwdXQgaXMgYCcrMDA6MDAnYCBvciBlcXVpdmFsZW50KVxuICB4OiBmdW5jdGlvbiB4KGRhdGUsIHRva2VuLCBfbG9jYWxpemUsIG9wdGlvbnMpIHtcbiAgICB2YXIgb3JpZ2luYWxEYXRlID0gb3B0aW9ucy5fb3JpZ2luYWxEYXRlIHx8IGRhdGU7XG4gICAgdmFyIHRpbWV6b25lT2Zmc2V0ID0gb3JpZ2luYWxEYXRlLmdldFRpbWV6b25lT2Zmc2V0KCk7XG5cbiAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICAvLyBIb3VycyBhbmQgb3B0aW9uYWwgbWludXRlc1xuICAgICAgY2FzZSAneCc6XG4gICAgICAgIHJldHVybiBmb3JtYXRUaW1lem9uZVdpdGhPcHRpb25hbE1pbnV0ZXModGltZXpvbmVPZmZzZXQpO1xuICAgICAgLy8gSG91cnMsIG1pbnV0ZXMgYW5kIG9wdGlvbmFsIHNlY29uZHMgd2l0aG91dCBgOmAgZGVsaW1pdGVyXG4gICAgICAvLyBOb3RlOiBuZWl0aGVyIElTTy04NjAxIG5vciBKYXZhU2NyaXB0IHN1cHBvcnRzIHNlY29uZHMgaW4gdGltZXpvbmUgb2Zmc2V0c1xuICAgICAgLy8gc28gdGhpcyB0b2tlbiBhbHdheXMgaGFzIHRoZSBzYW1lIG91dHB1dCBhcyBgeHhgXG5cbiAgICAgIGNhc2UgJ3h4eHgnOlxuICAgICAgY2FzZSAneHgnOlxuICAgICAgICAvLyBIb3VycyBhbmQgbWludXRlcyB3aXRob3V0IGA6YCBkZWxpbWl0ZXJcbiAgICAgICAgcmV0dXJuIGZvcm1hdFRpbWV6b25lKHRpbWV6b25lT2Zmc2V0KTtcbiAgICAgIC8vIEhvdXJzLCBtaW51dGVzIGFuZCBvcHRpb25hbCBzZWNvbmRzIHdpdGggYDpgIGRlbGltaXRlclxuICAgICAgLy8gTm90ZTogbmVpdGhlciBJU08tODYwMSBub3IgSmF2YVNjcmlwdCBzdXBwb3J0cyBzZWNvbmRzIGluIHRpbWV6b25lIG9mZnNldHNcbiAgICAgIC8vIHNvIHRoaXMgdG9rZW4gYWx3YXlzIGhhcyB0aGUgc2FtZSBvdXRwdXQgYXMgYHh4eGBcblxuICAgICAgY2FzZSAneHh4eHgnOlxuICAgICAgY2FzZSAneHh4JzogLy8gSG91cnMgYW5kIG1pbnV0ZXMgd2l0aCBgOmAgZGVsaW1pdGVyXG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBmb3JtYXRUaW1lem9uZSh0aW1lem9uZU9mZnNldCwgJzonKTtcbiAgICB9XG4gIH0sXG4gIC8vIFRpbWV6b25lIChHTVQpXG4gIE86IGZ1bmN0aW9uIE8oZGF0ZSwgdG9rZW4sIF9sb2NhbGl6ZSwgb3B0aW9ucykge1xuICAgIHZhciBvcmlnaW5hbERhdGUgPSBvcHRpb25zLl9vcmlnaW5hbERhdGUgfHwgZGF0ZTtcbiAgICB2YXIgdGltZXpvbmVPZmZzZXQgPSBvcmlnaW5hbERhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKTtcblxuICAgIHN3aXRjaCAodG9rZW4pIHtcbiAgICAgIC8vIFNob3J0XG4gICAgICBjYXNlICdPJzpcbiAgICAgIGNhc2UgJ09PJzpcbiAgICAgIGNhc2UgJ09PTyc6XG4gICAgICAgIHJldHVybiAnR01UJyArIGZvcm1hdFRpbWV6b25lU2hvcnQodGltZXpvbmVPZmZzZXQsICc6Jyk7XG4gICAgICAvLyBMb25nXG5cbiAgICAgIGNhc2UgJ09PT08nOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuICdHTVQnICsgZm9ybWF0VGltZXpvbmUodGltZXpvbmVPZmZzZXQsICc6Jyk7XG4gICAgfVxuICB9LFxuICAvLyBUaW1lem9uZSAoc3BlY2lmaWMgbm9uLWxvY2F0aW9uKVxuICB6OiBmdW5jdGlvbiB6KGRhdGUsIHRva2VuLCBfbG9jYWxpemUsIG9wdGlvbnMpIHtcbiAgICB2YXIgb3JpZ2luYWxEYXRlID0gb3B0aW9ucy5fb3JpZ2luYWxEYXRlIHx8IGRhdGU7XG4gICAgdmFyIHRpbWV6b25lT2Zmc2V0ID0gb3JpZ2luYWxEYXRlLmdldFRpbWV6b25lT2Zmc2V0KCk7XG5cbiAgICBzd2l0Y2ggKHRva2VuKSB7XG4gICAgICAvLyBTaG9ydFxuICAgICAgY2FzZSAneic6XG4gICAgICBjYXNlICd6eic6XG4gICAgICBjYXNlICd6enonOlxuICAgICAgICByZXR1cm4gJ0dNVCcgKyBmb3JtYXRUaW1lem9uZVNob3J0KHRpbWV6b25lT2Zmc2V0LCAnOicpO1xuICAgICAgLy8gTG9uZ1xuXG4gICAgICBjYXNlICd6enp6JzpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiAnR01UJyArIGZvcm1hdFRpbWV6b25lKHRpbWV6b25lT2Zmc2V0LCAnOicpO1xuICAgIH1cbiAgfSxcbiAgLy8gU2Vjb25kcyB0aW1lc3RhbXBcbiAgdDogZnVuY3Rpb24gdChkYXRlLCB0b2tlbiwgX2xvY2FsaXplLCBvcHRpb25zKSB7XG4gICAgdmFyIG9yaWdpbmFsRGF0ZSA9IG9wdGlvbnMuX29yaWdpbmFsRGF0ZSB8fCBkYXRlO1xuICAgIHZhciB0aW1lc3RhbXAgPSBNYXRoLmZsb29yKG9yaWdpbmFsRGF0ZS5nZXRUaW1lKCkgLyAxMDAwKTtcbiAgICByZXR1cm4gYWRkTGVhZGluZ1plcm9zKHRpbWVzdGFtcCwgdG9rZW4ubGVuZ3RoKTtcbiAgfSxcbiAgLy8gTWlsbGlzZWNvbmRzIHRpbWVzdGFtcFxuICBUOiBmdW5jdGlvbiBUKGRhdGUsIHRva2VuLCBfbG9jYWxpemUsIG9wdGlvbnMpIHtcbiAgICB2YXIgb3JpZ2luYWxEYXRlID0gb3B0aW9ucy5fb3JpZ2luYWxEYXRlIHx8IGRhdGU7XG4gICAgdmFyIHRpbWVzdGFtcCA9IG9yaWdpbmFsRGF0ZS5nZXRUaW1lKCk7XG4gICAgcmV0dXJuIGFkZExlYWRpbmdaZXJvcyh0aW1lc3RhbXAsIHRva2VuLmxlbmd0aCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGZvcm1hdFRpbWV6b25lU2hvcnQob2Zmc2V0LCBkaXJ0eURlbGltaXRlcikge1xuICB2YXIgc2lnbiA9IG9mZnNldCA+IDAgPyAnLScgOiAnKyc7XG4gIHZhciBhYnNPZmZzZXQgPSBNYXRoLmFicyhvZmZzZXQpO1xuICB2YXIgaG91cnMgPSBNYXRoLmZsb29yKGFic09mZnNldCAvIDYwKTtcbiAgdmFyIG1pbnV0ZXMgPSBhYnNPZmZzZXQgJSA2MDtcblxuICBpZiAobWludXRlcyA9PT0gMCkge1xuICAgIHJldHVybiBzaWduICsgU3RyaW5nKGhvdXJzKTtcbiAgfVxuXG4gIHZhciBkZWxpbWl0ZXIgPSBkaXJ0eURlbGltaXRlciB8fCAnJztcbiAgcmV0dXJuIHNpZ24gKyBTdHJpbmcoaG91cnMpICsgZGVsaW1pdGVyICsgYWRkTGVhZGluZ1plcm9zKG1pbnV0ZXMsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRUaW1lem9uZVdpdGhPcHRpb25hbE1pbnV0ZXMob2Zmc2V0LCBkaXJ0eURlbGltaXRlcikge1xuICBpZiAob2Zmc2V0ICUgNjAgPT09IDApIHtcbiAgICB2YXIgc2lnbiA9IG9mZnNldCA+IDAgPyAnLScgOiAnKyc7XG4gICAgcmV0dXJuIHNpZ24gKyBhZGRMZWFkaW5nWmVyb3MoTWF0aC5hYnMob2Zmc2V0KSAvIDYwLCAyKTtcbiAgfVxuXG4gIHJldHVybiBmb3JtYXRUaW1lem9uZShvZmZzZXQsIGRpcnR5RGVsaW1pdGVyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VGltZXpvbmUob2Zmc2V0LCBkaXJ0eURlbGltaXRlcikge1xuICB2YXIgZGVsaW1pdGVyID0gZGlydHlEZWxpbWl0ZXIgfHwgJyc7XG4gIHZhciBzaWduID0gb2Zmc2V0ID4gMCA/ICctJyA6ICcrJztcbiAgdmFyIGFic09mZnNldCA9IE1hdGguYWJzKG9mZnNldCk7XG4gIHZhciBob3VycyA9IGFkZExlYWRpbmdaZXJvcyhNYXRoLmZsb29yKGFic09mZnNldCAvIDYwKSwgMik7XG4gIHZhciBtaW51dGVzID0gYWRkTGVhZGluZ1plcm9zKGFic09mZnNldCAlIDYwLCAyKTtcbiAgcmV0dXJuIHNpZ24gKyBob3VycyArIGRlbGltaXRlciArIG1pbnV0ZXM7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZvcm1hdHRlcnM7IiwidmFyIGRhdGVMb25nRm9ybWF0dGVyID0gZnVuY3Rpb24gZGF0ZUxvbmdGb3JtYXR0ZXIocGF0dGVybiwgZm9ybWF0TG9uZykge1xuICBzd2l0Y2ggKHBhdHRlcm4pIHtcbiAgICBjYXNlICdQJzpcbiAgICAgIHJldHVybiBmb3JtYXRMb25nLmRhdGUoe1xuICAgICAgICB3aWR0aDogJ3Nob3J0J1xuICAgICAgfSk7XG5cbiAgICBjYXNlICdQUCc6XG4gICAgICByZXR1cm4gZm9ybWF0TG9uZy5kYXRlKHtcbiAgICAgICAgd2lkdGg6ICdtZWRpdW0nXG4gICAgICB9KTtcblxuICAgIGNhc2UgJ1BQUCc6XG4gICAgICByZXR1cm4gZm9ybWF0TG9uZy5kYXRlKHtcbiAgICAgICAgd2lkdGg6ICdsb25nJ1xuICAgICAgfSk7XG5cbiAgICBjYXNlICdQUFBQJzpcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGZvcm1hdExvbmcuZGF0ZSh7XG4gICAgICAgIHdpZHRoOiAnZnVsbCdcbiAgICAgIH0pO1xuICB9XG59O1xuXG52YXIgdGltZUxvbmdGb3JtYXR0ZXIgPSBmdW5jdGlvbiB0aW1lTG9uZ0Zvcm1hdHRlcihwYXR0ZXJuLCBmb3JtYXRMb25nKSB7XG4gIHN3aXRjaCAocGF0dGVybikge1xuICAgIGNhc2UgJ3AnOlxuICAgICAgcmV0dXJuIGZvcm1hdExvbmcudGltZSh7XG4gICAgICAgIHdpZHRoOiAnc2hvcnQnXG4gICAgICB9KTtcblxuICAgIGNhc2UgJ3BwJzpcbiAgICAgIHJldHVybiBmb3JtYXRMb25nLnRpbWUoe1xuICAgICAgICB3aWR0aDogJ21lZGl1bSdcbiAgICAgIH0pO1xuXG4gICAgY2FzZSAncHBwJzpcbiAgICAgIHJldHVybiBmb3JtYXRMb25nLnRpbWUoe1xuICAgICAgICB3aWR0aDogJ2xvbmcnXG4gICAgICB9KTtcblxuICAgIGNhc2UgJ3BwcHAnOlxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gZm9ybWF0TG9uZy50aW1lKHtcbiAgICAgICAgd2lkdGg6ICdmdWxsJ1xuICAgICAgfSk7XG4gIH1cbn07XG5cbnZhciBkYXRlVGltZUxvbmdGb3JtYXR0ZXIgPSBmdW5jdGlvbiBkYXRlVGltZUxvbmdGb3JtYXR0ZXIocGF0dGVybiwgZm9ybWF0TG9uZykge1xuICB2YXIgbWF0Y2hSZXN1bHQgPSBwYXR0ZXJuLm1hdGNoKC8oUCspKHArKT8vKSB8fCBbXTtcbiAgdmFyIGRhdGVQYXR0ZXJuID0gbWF0Y2hSZXN1bHRbMV07XG4gIHZhciB0aW1lUGF0dGVybiA9IG1hdGNoUmVzdWx0WzJdO1xuXG4gIGlmICghdGltZVBhdHRlcm4pIHtcbiAgICByZXR1cm4gZGF0ZUxvbmdGb3JtYXR0ZXIocGF0dGVybiwgZm9ybWF0TG9uZyk7XG4gIH1cblxuICB2YXIgZGF0ZVRpbWVGb3JtYXQ7XG5cbiAgc3dpdGNoIChkYXRlUGF0dGVybikge1xuICAgIGNhc2UgJ1AnOlxuICAgICAgZGF0ZVRpbWVGb3JtYXQgPSBmb3JtYXRMb25nLmRhdGVUaW1lKHtcbiAgICAgICAgd2lkdGg6ICdzaG9ydCdcbiAgICAgIH0pO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdQUCc6XG4gICAgICBkYXRlVGltZUZvcm1hdCA9IGZvcm1hdExvbmcuZGF0ZVRpbWUoe1xuICAgICAgICB3aWR0aDogJ21lZGl1bSdcbiAgICAgIH0pO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdQUFAnOlxuICAgICAgZGF0ZVRpbWVGb3JtYXQgPSBmb3JtYXRMb25nLmRhdGVUaW1lKHtcbiAgICAgICAgd2lkdGg6ICdsb25nJ1xuICAgICAgfSk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ1BQUFAnOlxuICAgIGRlZmF1bHQ6XG4gICAgICBkYXRlVGltZUZvcm1hdCA9IGZvcm1hdExvbmcuZGF0ZVRpbWUoe1xuICAgICAgICB3aWR0aDogJ2Z1bGwnXG4gICAgICB9KTtcbiAgICAgIGJyZWFrO1xuICB9XG5cbiAgcmV0dXJuIGRhdGVUaW1lRm9ybWF0LnJlcGxhY2UoJ3t7ZGF0ZX19JywgZGF0ZUxvbmdGb3JtYXR0ZXIoZGF0ZVBhdHRlcm4sIGZvcm1hdExvbmcpKS5yZXBsYWNlKCd7e3RpbWV9fScsIHRpbWVMb25nRm9ybWF0dGVyKHRpbWVQYXR0ZXJuLCBmb3JtYXRMb25nKSk7XG59O1xuXG52YXIgbG9uZ0Zvcm1hdHRlcnMgPSB7XG4gIHA6IHRpbWVMb25nRm9ybWF0dGVyLFxuICBQOiBkYXRlVGltZUxvbmdGb3JtYXR0ZXJcbn07XG5leHBvcnQgZGVmYXVsdCBsb25nRm9ybWF0dGVyczsiLCIvKipcbiAqIEdvb2dsZSBDaHJvbWUgYXMgb2YgNjcuMC4zMzk2Ljg3IGludHJvZHVjZWQgdGltZXpvbmVzIHdpdGggb2Zmc2V0IHRoYXQgaW5jbHVkZXMgc2Vjb25kcy5cbiAqIFRoZXkgdXN1YWxseSBhcHBlYXIgZm9yIGRhdGVzIHRoYXQgZGVub3RlIHRpbWUgYmVmb3JlIHRoZSB0aW1lem9uZXMgd2VyZSBpbnRyb2R1Y2VkXG4gKiAoZS5nLiBmb3IgJ0V1cm9wZS9QcmFndWUnIHRpbWV6b25lIHRoZSBvZmZzZXQgaXMgR01UKzAwOjU3OjQ0IGJlZm9yZSAxIE9jdG9iZXIgMTg5MVxuICogYW5kIEdNVCswMTowMDowMCBhZnRlciB0aGF0IGRhdGUpXG4gKlxuICogRGF0ZSNnZXRUaW1lem9uZU9mZnNldCByZXR1cm5zIHRoZSBvZmZzZXQgaW4gbWludXRlcyBhbmQgd291bGQgcmV0dXJuIDU3IGZvciB0aGUgZXhhbXBsZSBhYm92ZSxcbiAqIHdoaWNoIHdvdWxkIGxlYWQgdG8gaW5jb3JyZWN0IGNhbGN1bGF0aW9ucy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIHRpbWV6b25lIG9mZnNldCBpbiBtaWxsaXNlY29uZHMgdGhhdCB0YWtlcyBzZWNvbmRzIGluIGFjY291bnQuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMoZGF0ZSkge1xuICB2YXIgdXRjRGF0ZSA9IG5ldyBEYXRlKERhdGUuVVRDKGRhdGUuZ2V0RnVsbFllYXIoKSwgZGF0ZS5nZXRNb250aCgpLCBkYXRlLmdldERhdGUoKSwgZGF0ZS5nZXRIb3VycygpLCBkYXRlLmdldE1pbnV0ZXMoKSwgZGF0ZS5nZXRTZWNvbmRzKCksIGRhdGUuZ2V0TWlsbGlzZWNvbmRzKCkpKTtcbiAgdXRjRGF0ZS5zZXRVVENGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCkpO1xuICByZXR1cm4gZGF0ZS5nZXRUaW1lKCkgLSB1dGNEYXRlLmdldFRpbWUoKTtcbn0iLCJ2YXIgcHJvdGVjdGVkRGF5T2ZZZWFyVG9rZW5zID0gWydEJywgJ0REJ107XG52YXIgcHJvdGVjdGVkV2Vla1llYXJUb2tlbnMgPSBbJ1lZJywgJ1lZWVknXTtcbmV4cG9ydCBmdW5jdGlvbiBpc1Byb3RlY3RlZERheU9mWWVhclRva2VuKHRva2VuKSB7XG4gIHJldHVybiBwcm90ZWN0ZWREYXlPZlllYXJUb2tlbnMuaW5kZXhPZih0b2tlbikgIT09IC0xO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUHJvdGVjdGVkV2Vla1llYXJUb2tlbih0b2tlbikge1xuICByZXR1cm4gcHJvdGVjdGVkV2Vla1llYXJUb2tlbnMuaW5kZXhPZih0b2tlbikgIT09IC0xO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRocm93UHJvdGVjdGVkRXJyb3IodG9rZW4sIGZvcm1hdCwgaW5wdXQpIHtcbiAgaWYgKHRva2VuID09PSAnWVlZWScpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlVzZSBgeXl5eWAgaW5zdGVhZCBvZiBgWVlZWWAgKGluIGBcIi5jb25jYXQoZm9ybWF0LCBcImApIGZvciBmb3JtYXR0aW5nIHllYXJzIHRvIHRoZSBpbnB1dCBgXCIpLmNvbmNhdChpbnB1dCwgXCJgOyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VuaWNvZGVUb2tlbnMubWRcIikpO1xuICB9IGVsc2UgaWYgKHRva2VuID09PSAnWVknKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJVc2UgYHl5YCBpbnN0ZWFkIG9mIGBZWWAgKGluIGBcIi5jb25jYXQoZm9ybWF0LCBcImApIGZvciBmb3JtYXR0aW5nIHllYXJzIHRvIHRoZSBpbnB1dCBgXCIpLmNvbmNhdChpbnB1dCwgXCJgOyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VuaWNvZGVUb2tlbnMubWRcIikpO1xuICB9IGVsc2UgaWYgKHRva2VuID09PSAnRCcpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlVzZSBgZGAgaW5zdGVhZCBvZiBgRGAgKGluIGBcIi5jb25jYXQoZm9ybWF0LCBcImApIGZvciBmb3JtYXR0aW5nIGRheXMgb2YgdGhlIG1vbnRoIHRvIHRoZSBpbnB1dCBgXCIpLmNvbmNhdChpbnB1dCwgXCJgOyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VuaWNvZGVUb2tlbnMubWRcIikpO1xuICB9IGVsc2UgaWYgKHRva2VuID09PSAnREQnKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJVc2UgYGRkYCBpbnN0ZWFkIG9mIGBERGAgKGluIGBcIi5jb25jYXQoZm9ybWF0LCBcImApIGZvciBmb3JtYXR0aW5nIGRheXMgb2YgdGhlIG1vbnRoIHRvIHRoZSBpbnB1dCBgXCIpLmNvbmNhdChpbnB1dCwgXCJgOyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VuaWNvZGVUb2tlbnMubWRcIikpO1xuICB9XG59IiwidmFyIGZvcm1hdERpc3RhbmNlTG9jYWxlID0ge1xuICBsZXNzVGhhblhTZWNvbmRzOiB7XG4gICAgb25lOiAnbGVzcyB0aGFuIGEgc2Vjb25kJyxcbiAgICBvdGhlcjogJ2xlc3MgdGhhbiB7e2NvdW50fX0gc2Vjb25kcydcbiAgfSxcbiAgeFNlY29uZHM6IHtcbiAgICBvbmU6ICcxIHNlY29uZCcsXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gc2Vjb25kcydcbiAgfSxcbiAgaGFsZkFNaW51dGU6ICdoYWxmIGEgbWludXRlJyxcbiAgbGVzc1RoYW5YTWludXRlczoge1xuICAgIG9uZTogJ2xlc3MgdGhhbiBhIG1pbnV0ZScsXG4gICAgb3RoZXI6ICdsZXNzIHRoYW4ge3tjb3VudH19IG1pbnV0ZXMnXG4gIH0sXG4gIHhNaW51dGVzOiB7XG4gICAgb25lOiAnMSBtaW51dGUnLFxuICAgIG90aGVyOiAne3tjb3VudH19IG1pbnV0ZXMnXG4gIH0sXG4gIGFib3V0WEhvdXJzOiB7XG4gICAgb25lOiAnYWJvdXQgMSBob3VyJyxcbiAgICBvdGhlcjogJ2Fib3V0IHt7Y291bnR9fSBob3VycydcbiAgfSxcbiAgeEhvdXJzOiB7XG4gICAgb25lOiAnMSBob3VyJyxcbiAgICBvdGhlcjogJ3t7Y291bnR9fSBob3VycydcbiAgfSxcbiAgeERheXM6IHtcbiAgICBvbmU6ICcxIGRheScsXG4gICAgb3RoZXI6ICd7e2NvdW50fX0gZGF5cydcbiAgfSxcbiAgYWJvdXRYV2Vla3M6IHtcbiAgICBvbmU6ICdhYm91dCAxIHdlZWsnLFxuICAgIG90aGVyOiAnYWJvdXQge3tjb3VudH19IHdlZWtzJ1xuICB9LFxuICB4V2Vla3M6IHtcbiAgICBvbmU6ICcxIHdlZWsnLFxuICAgIG90aGVyOiAne3tjb3VudH19IHdlZWtzJ1xuICB9LFxuICBhYm91dFhNb250aHM6IHtcbiAgICBvbmU6ICdhYm91dCAxIG1vbnRoJyxcbiAgICBvdGhlcjogJ2Fib3V0IHt7Y291bnR9fSBtb250aHMnXG4gIH0sXG4gIHhNb250aHM6IHtcbiAgICBvbmU6ICcxIG1vbnRoJyxcbiAgICBvdGhlcjogJ3t7Y291bnR9fSBtb250aHMnXG4gIH0sXG4gIGFib3V0WFllYXJzOiB7XG4gICAgb25lOiAnYWJvdXQgMSB5ZWFyJyxcbiAgICBvdGhlcjogJ2Fib3V0IHt7Y291bnR9fSB5ZWFycydcbiAgfSxcbiAgeFllYXJzOiB7XG4gICAgb25lOiAnMSB5ZWFyJyxcbiAgICBvdGhlcjogJ3t7Y291bnR9fSB5ZWFycydcbiAgfSxcbiAgb3ZlclhZZWFyczoge1xuICAgIG9uZTogJ292ZXIgMSB5ZWFyJyxcbiAgICBvdGhlcjogJ292ZXIge3tjb3VudH19IHllYXJzJ1xuICB9LFxuICBhbG1vc3RYWWVhcnM6IHtcbiAgICBvbmU6ICdhbG1vc3QgMSB5ZWFyJyxcbiAgICBvdGhlcjogJ2FsbW9zdCB7e2NvdW50fX0geWVhcnMnXG4gIH1cbn07XG5cbnZhciBmb3JtYXREaXN0YW5jZSA9IGZ1bmN0aW9uIGZvcm1hdERpc3RhbmNlKHRva2VuLCBjb3VudCwgb3B0aW9ucykge1xuICB2YXIgcmVzdWx0O1xuICB2YXIgdG9rZW5WYWx1ZSA9IGZvcm1hdERpc3RhbmNlTG9jYWxlW3Rva2VuXTtcblxuICBpZiAodHlwZW9mIHRva2VuVmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgcmVzdWx0ID0gdG9rZW5WYWx1ZTtcbiAgfSBlbHNlIGlmIChjb3VudCA9PT0gMSkge1xuICAgIHJlc3VsdCA9IHRva2VuVmFsdWUub25lO1xuICB9IGVsc2Uge1xuICAgIHJlc3VsdCA9IHRva2VuVmFsdWUub3RoZXIucmVwbGFjZSgne3tjb3VudH19JywgY291bnQudG9TdHJpbmcoKSk7XG4gIH1cblxuICBpZiAob3B0aW9ucyAhPT0gbnVsbCAmJiBvcHRpb25zICE9PSB2b2lkIDAgJiYgb3B0aW9ucy5hZGRTdWZmaXgpIHtcbiAgICBpZiAob3B0aW9ucy5jb21wYXJpc29uICYmIG9wdGlvbnMuY29tcGFyaXNvbiA+IDApIHtcbiAgICAgIHJldHVybiAnaW4gJyArIHJlc3VsdDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHJlc3VsdCArICcgYWdvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZm9ybWF0RGlzdGFuY2U7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYnVpbGRGb3JtYXRMb25nRm4oYXJncykge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgICAvLyBUT0RPOiBSZW1vdmUgU3RyaW5nKClcbiAgICB2YXIgd2lkdGggPSBvcHRpb25zLndpZHRoID8gU3RyaW5nKG9wdGlvbnMud2lkdGgpIDogYXJncy5kZWZhdWx0V2lkdGg7XG4gICAgdmFyIGZvcm1hdCA9IGFyZ3MuZm9ybWF0c1t3aWR0aF0gfHwgYXJncy5mb3JtYXRzW2FyZ3MuZGVmYXVsdFdpZHRoXTtcbiAgICByZXR1cm4gZm9ybWF0O1xuICB9O1xufSIsImltcG9ydCBidWlsZEZvcm1hdExvbmdGbiBmcm9tIFwiLi4vLi4vLi4vX2xpYi9idWlsZEZvcm1hdExvbmdGbi9pbmRleC5qc1wiO1xudmFyIGRhdGVGb3JtYXRzID0ge1xuICBmdWxsOiAnRUVFRSwgTU1NTSBkbywgeScsXG4gIGxvbmc6ICdNTU1NIGRvLCB5JyxcbiAgbWVkaXVtOiAnTU1NIGQsIHknLFxuICBzaG9ydDogJ01NL2RkL3l5eXknXG59O1xudmFyIHRpbWVGb3JtYXRzID0ge1xuICBmdWxsOiAnaDptbTpzcyBhIHp6enonLFxuICBsb25nOiAnaDptbTpzcyBhIHonLFxuICBtZWRpdW06ICdoOm1tOnNzIGEnLFxuICBzaG9ydDogJ2g6bW0gYSdcbn07XG52YXIgZGF0ZVRpbWVGb3JtYXRzID0ge1xuICBmdWxsOiBcInt7ZGF0ZX19ICdhdCcge3t0aW1lfX1cIixcbiAgbG9uZzogXCJ7e2RhdGV9fSAnYXQnIHt7dGltZX19XCIsXG4gIG1lZGl1bTogJ3t7ZGF0ZX19LCB7e3RpbWV9fScsXG4gIHNob3J0OiAne3tkYXRlfX0sIHt7dGltZX19J1xufTtcbnZhciBmb3JtYXRMb25nID0ge1xuICBkYXRlOiBidWlsZEZvcm1hdExvbmdGbih7XG4gICAgZm9ybWF0czogZGF0ZUZvcm1hdHMsXG4gICAgZGVmYXVsdFdpZHRoOiAnZnVsbCdcbiAgfSksXG4gIHRpbWU6IGJ1aWxkRm9ybWF0TG9uZ0ZuKHtcbiAgICBmb3JtYXRzOiB0aW1lRm9ybWF0cyxcbiAgICBkZWZhdWx0V2lkdGg6ICdmdWxsJ1xuICB9KSxcbiAgZGF0ZVRpbWU6IGJ1aWxkRm9ybWF0TG9uZ0ZuKHtcbiAgICBmb3JtYXRzOiBkYXRlVGltZUZvcm1hdHMsXG4gICAgZGVmYXVsdFdpZHRoOiAnZnVsbCdcbiAgfSlcbn07XG5leHBvcnQgZGVmYXVsdCBmb3JtYXRMb25nOyIsInZhciBmb3JtYXRSZWxhdGl2ZUxvY2FsZSA9IHtcbiAgbGFzdFdlZWs6IFwiJ2xhc3QnIGVlZWUgJ2F0JyBwXCIsXG4gIHllc3RlcmRheTogXCIneWVzdGVyZGF5IGF0JyBwXCIsXG4gIHRvZGF5OiBcIid0b2RheSBhdCcgcFwiLFxuICB0b21vcnJvdzogXCIndG9tb3Jyb3cgYXQnIHBcIixcbiAgbmV4dFdlZWs6IFwiZWVlZSAnYXQnIHBcIixcbiAgb3RoZXI6ICdQJ1xufTtcblxudmFyIGZvcm1hdFJlbGF0aXZlID0gZnVuY3Rpb24gZm9ybWF0UmVsYXRpdmUodG9rZW4sIF9kYXRlLCBfYmFzZURhdGUsIF9vcHRpb25zKSB7XG4gIHJldHVybiBmb3JtYXRSZWxhdGl2ZUxvY2FsZVt0b2tlbl07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmb3JtYXRSZWxhdGl2ZTsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBidWlsZExvY2FsaXplRm4oYXJncykge1xuICByZXR1cm4gZnVuY3Rpb24gKGRpcnR5SW5kZXgsIG9wdGlvbnMpIHtcbiAgICB2YXIgY29udGV4dCA9IG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwICYmIG9wdGlvbnMuY29udGV4dCA/IFN0cmluZyhvcHRpb25zLmNvbnRleHQpIDogJ3N0YW5kYWxvbmUnO1xuICAgIHZhciB2YWx1ZXNBcnJheTtcblxuICAgIGlmIChjb250ZXh0ID09PSAnZm9ybWF0dGluZycgJiYgYXJncy5mb3JtYXR0aW5nVmFsdWVzKSB7XG4gICAgICB2YXIgZGVmYXVsdFdpZHRoID0gYXJncy5kZWZhdWx0Rm9ybWF0dGluZ1dpZHRoIHx8IGFyZ3MuZGVmYXVsdFdpZHRoO1xuICAgICAgdmFyIHdpZHRoID0gb3B0aW9ucyAhPT0gbnVsbCAmJiBvcHRpb25zICE9PSB2b2lkIDAgJiYgb3B0aW9ucy53aWR0aCA/IFN0cmluZyhvcHRpb25zLndpZHRoKSA6IGRlZmF1bHRXaWR0aDtcbiAgICAgIHZhbHVlc0FycmF5ID0gYXJncy5mb3JtYXR0aW5nVmFsdWVzW3dpZHRoXSB8fCBhcmdzLmZvcm1hdHRpbmdWYWx1ZXNbZGVmYXVsdFdpZHRoXTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF9kZWZhdWx0V2lkdGggPSBhcmdzLmRlZmF1bHRXaWR0aDtcblxuICAgICAgdmFyIF93aWR0aCA9IG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwICYmIG9wdGlvbnMud2lkdGggPyBTdHJpbmcob3B0aW9ucy53aWR0aCkgOiBhcmdzLmRlZmF1bHRXaWR0aDtcblxuICAgICAgdmFsdWVzQXJyYXkgPSBhcmdzLnZhbHVlc1tfd2lkdGhdIHx8IGFyZ3MudmFsdWVzW19kZWZhdWx0V2lkdGhdO1xuICAgIH1cblxuICAgIHZhciBpbmRleCA9IGFyZ3MuYXJndW1lbnRDYWxsYmFjayA/IGFyZ3MuYXJndW1lbnRDYWxsYmFjayhkaXJ0eUluZGV4KSA6IGRpcnR5SW5kZXg7IC8vIEB0cy1pZ25vcmU6IEZvciBzb21lIHJlYXNvbiBUeXBlU2NyaXB0IGp1c3QgZG9uJ3Qgd2FudCB0byBtYXRjaCBpdCwgbm8gbWF0dGVyIGhvdyBoYXJkIHdlIHRyeS4gSSBjaGFsbGVuZ2UgeW91IHRvIHRyeSB0byByZW1vdmUgaXQhXG5cbiAgICByZXR1cm4gdmFsdWVzQXJyYXlbaW5kZXhdO1xuICB9O1xufSIsImltcG9ydCBidWlsZExvY2FsaXplRm4gZnJvbSBcIi4uLy4uLy4uL19saWIvYnVpbGRMb2NhbGl6ZUZuL2luZGV4LmpzXCI7XG52YXIgZXJhVmFsdWVzID0ge1xuICBuYXJyb3c6IFsnQicsICdBJ10sXG4gIGFiYnJldmlhdGVkOiBbJ0JDJywgJ0FEJ10sXG4gIHdpZGU6IFsnQmVmb3JlIENocmlzdCcsICdBbm5vIERvbWluaSddXG59O1xudmFyIHF1YXJ0ZXJWYWx1ZXMgPSB7XG4gIG5hcnJvdzogWycxJywgJzInLCAnMycsICc0J10sXG4gIGFiYnJldmlhdGVkOiBbJ1ExJywgJ1EyJywgJ1EzJywgJ1E0J10sXG4gIHdpZGU6IFsnMXN0IHF1YXJ0ZXInLCAnMm5kIHF1YXJ0ZXInLCAnM3JkIHF1YXJ0ZXInLCAnNHRoIHF1YXJ0ZXInXVxufTsgLy8gTm90ZTogaW4gRW5nbGlzaCwgdGhlIG5hbWVzIG9mIGRheXMgb2YgdGhlIHdlZWsgYW5kIG1vbnRocyBhcmUgY2FwaXRhbGl6ZWQuXG4vLyBJZiB5b3UgYXJlIG1ha2luZyBhIG5ldyBsb2NhbGUgYmFzZWQgb24gdGhpcyBvbmUsIGNoZWNrIGlmIHRoZSBzYW1lIGlzIHRydWUgZm9yIHRoZSBsYW5ndWFnZSB5b3UncmUgd29ya2luZyBvbi5cbi8vIEdlbmVyYWxseSwgZm9ybWF0dGVkIGRhdGVzIHNob3VsZCBsb29rIGxpa2UgdGhleSBhcmUgaW4gdGhlIG1pZGRsZSBvZiBhIHNlbnRlbmNlLFxuLy8gZS5nLiBpbiBTcGFuaXNoIGxhbmd1YWdlIHRoZSB3ZWVrZGF5cyBhbmQgbW9udGhzIHNob3VsZCBiZSBpbiB0aGUgbG93ZXJjYXNlLlxuXG52YXIgbW9udGhWYWx1ZXMgPSB7XG4gIG5hcnJvdzogWydKJywgJ0YnLCAnTScsICdBJywgJ00nLCAnSicsICdKJywgJ0EnLCAnUycsICdPJywgJ04nLCAnRCddLFxuICBhYmJyZXZpYXRlZDogWydKYW4nLCAnRmViJywgJ01hcicsICdBcHInLCAnTWF5JywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCcsICdPY3QnLCAnTm92JywgJ0RlYyddLFxuICB3aWRlOiBbJ0phbnVhcnknLCAnRmVicnVhcnknLCAnTWFyY2gnLCAnQXByaWwnLCAnTWF5JywgJ0p1bmUnLCAnSnVseScsICdBdWd1c3QnLCAnU2VwdGVtYmVyJywgJ09jdG9iZXInLCAnTm92ZW1iZXInLCAnRGVjZW1iZXInXVxufTtcbnZhciBkYXlWYWx1ZXMgPSB7XG4gIG5hcnJvdzogWydTJywgJ00nLCAnVCcsICdXJywgJ1QnLCAnRicsICdTJ10sXG4gIHNob3J0OiBbJ1N1JywgJ01vJywgJ1R1JywgJ1dlJywgJ1RoJywgJ0ZyJywgJ1NhJ10sXG4gIGFiYnJldmlhdGVkOiBbJ1N1bicsICdNb24nLCAnVHVlJywgJ1dlZCcsICdUaHUnLCAnRnJpJywgJ1NhdCddLFxuICB3aWRlOiBbJ1N1bmRheScsICdNb25kYXknLCAnVHVlc2RheScsICdXZWRuZXNkYXknLCAnVGh1cnNkYXknLCAnRnJpZGF5JywgJ1NhdHVyZGF5J11cbn07XG52YXIgZGF5UGVyaW9kVmFsdWVzID0ge1xuICBuYXJyb3c6IHtcbiAgICBhbTogJ2EnLFxuICAgIHBtOiAncCcsXG4gICAgbWlkbmlnaHQ6ICdtaScsXG4gICAgbm9vbjogJ24nLFxuICAgIG1vcm5pbmc6ICdtb3JuaW5nJyxcbiAgICBhZnRlcm5vb246ICdhZnRlcm5vb24nLFxuICAgIGV2ZW5pbmc6ICdldmVuaW5nJyxcbiAgICBuaWdodDogJ25pZ2h0J1xuICB9LFxuICBhYmJyZXZpYXRlZDoge1xuICAgIGFtOiAnQU0nLFxuICAgIHBtOiAnUE0nLFxuICAgIG1pZG5pZ2h0OiAnbWlkbmlnaHQnLFxuICAgIG5vb246ICdub29uJyxcbiAgICBtb3JuaW5nOiAnbW9ybmluZycsXG4gICAgYWZ0ZXJub29uOiAnYWZ0ZXJub29uJyxcbiAgICBldmVuaW5nOiAnZXZlbmluZycsXG4gICAgbmlnaHQ6ICduaWdodCdcbiAgfSxcbiAgd2lkZToge1xuICAgIGFtOiAnYS5tLicsXG4gICAgcG06ICdwLm0uJyxcbiAgICBtaWRuaWdodDogJ21pZG5pZ2h0JyxcbiAgICBub29uOiAnbm9vbicsXG4gICAgbW9ybmluZzogJ21vcm5pbmcnLFxuICAgIGFmdGVybm9vbjogJ2FmdGVybm9vbicsXG4gICAgZXZlbmluZzogJ2V2ZW5pbmcnLFxuICAgIG5pZ2h0OiAnbmlnaHQnXG4gIH1cbn07XG52YXIgZm9ybWF0dGluZ0RheVBlcmlvZFZhbHVlcyA9IHtcbiAgbmFycm93OiB7XG4gICAgYW06ICdhJyxcbiAgICBwbTogJ3AnLFxuICAgIG1pZG5pZ2h0OiAnbWknLFxuICAgIG5vb246ICduJyxcbiAgICBtb3JuaW5nOiAnaW4gdGhlIG1vcm5pbmcnLFxuICAgIGFmdGVybm9vbjogJ2luIHRoZSBhZnRlcm5vb24nLFxuICAgIGV2ZW5pbmc6ICdpbiB0aGUgZXZlbmluZycsXG4gICAgbmlnaHQ6ICdhdCBuaWdodCdcbiAgfSxcbiAgYWJicmV2aWF0ZWQ6IHtcbiAgICBhbTogJ0FNJyxcbiAgICBwbTogJ1BNJyxcbiAgICBtaWRuaWdodDogJ21pZG5pZ2h0JyxcbiAgICBub29uOiAnbm9vbicsXG4gICAgbW9ybmluZzogJ2luIHRoZSBtb3JuaW5nJyxcbiAgICBhZnRlcm5vb246ICdpbiB0aGUgYWZ0ZXJub29uJyxcbiAgICBldmVuaW5nOiAnaW4gdGhlIGV2ZW5pbmcnLFxuICAgIG5pZ2h0OiAnYXQgbmlnaHQnXG4gIH0sXG4gIHdpZGU6IHtcbiAgICBhbTogJ2EubS4nLFxuICAgIHBtOiAncC5tLicsXG4gICAgbWlkbmlnaHQ6ICdtaWRuaWdodCcsXG4gICAgbm9vbjogJ25vb24nLFxuICAgIG1vcm5pbmc6ICdpbiB0aGUgbW9ybmluZycsXG4gICAgYWZ0ZXJub29uOiAnaW4gdGhlIGFmdGVybm9vbicsXG4gICAgZXZlbmluZzogJ2luIHRoZSBldmVuaW5nJyxcbiAgICBuaWdodDogJ2F0IG5pZ2h0J1xuICB9XG59O1xuXG52YXIgb3JkaW5hbE51bWJlciA9IGZ1bmN0aW9uIG9yZGluYWxOdW1iZXIoZGlydHlOdW1iZXIsIF9vcHRpb25zKSB7XG4gIHZhciBudW1iZXIgPSBOdW1iZXIoZGlydHlOdW1iZXIpOyAvLyBJZiBvcmRpbmFsIG51bWJlcnMgZGVwZW5kIG9uIGNvbnRleHQsIGZvciBleGFtcGxlLFxuICAvLyBpZiB0aGV5IGFyZSBkaWZmZXJlbnQgZm9yIGRpZmZlcmVudCBncmFtbWF0aWNhbCBnZW5kZXJzLFxuICAvLyB1c2UgYG9wdGlvbnMudW5pdGAuXG4gIC8vXG4gIC8vIGB1bml0YCBjYW4gYmUgJ3llYXInLCAncXVhcnRlcicsICdtb250aCcsICd3ZWVrJywgJ2RhdGUnLCAnZGF5T2ZZZWFyJyxcbiAgLy8gJ2RheScsICdob3VyJywgJ21pbnV0ZScsICdzZWNvbmQnLlxuXG4gIHZhciByZW0xMDAgPSBudW1iZXIgJSAxMDA7XG5cbiAgaWYgKHJlbTEwMCA+IDIwIHx8IHJlbTEwMCA8IDEwKSB7XG4gICAgc3dpdGNoIChyZW0xMDAgJSAxMCkge1xuICAgICAgY2FzZSAxOlxuICAgICAgICByZXR1cm4gbnVtYmVyICsgJ3N0JztcblxuICAgICAgY2FzZSAyOlxuICAgICAgICByZXR1cm4gbnVtYmVyICsgJ25kJztcblxuICAgICAgY2FzZSAzOlxuICAgICAgICByZXR1cm4gbnVtYmVyICsgJ3JkJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVtYmVyICsgJ3RoJztcbn07XG5cbnZhciBsb2NhbGl6ZSA9IHtcbiAgb3JkaW5hbE51bWJlcjogb3JkaW5hbE51bWJlcixcbiAgZXJhOiBidWlsZExvY2FsaXplRm4oe1xuICAgIHZhbHVlczogZXJhVmFsdWVzLFxuICAgIGRlZmF1bHRXaWR0aDogJ3dpZGUnXG4gIH0pLFxuICBxdWFydGVyOiBidWlsZExvY2FsaXplRm4oe1xuICAgIHZhbHVlczogcXVhcnRlclZhbHVlcyxcbiAgICBkZWZhdWx0V2lkdGg6ICd3aWRlJyxcbiAgICBhcmd1bWVudENhbGxiYWNrOiBmdW5jdGlvbiBhcmd1bWVudENhbGxiYWNrKHF1YXJ0ZXIpIHtcbiAgICAgIHJldHVybiBxdWFydGVyIC0gMTtcbiAgICB9XG4gIH0pLFxuICBtb250aDogYnVpbGRMb2NhbGl6ZUZuKHtcbiAgICB2YWx1ZXM6IG1vbnRoVmFsdWVzLFxuICAgIGRlZmF1bHRXaWR0aDogJ3dpZGUnXG4gIH0pLFxuICBkYXk6IGJ1aWxkTG9jYWxpemVGbih7XG4gICAgdmFsdWVzOiBkYXlWYWx1ZXMsXG4gICAgZGVmYXVsdFdpZHRoOiAnd2lkZSdcbiAgfSksXG4gIGRheVBlcmlvZDogYnVpbGRMb2NhbGl6ZUZuKHtcbiAgICB2YWx1ZXM6IGRheVBlcmlvZFZhbHVlcyxcbiAgICBkZWZhdWx0V2lkdGg6ICd3aWRlJyxcbiAgICBmb3JtYXR0aW5nVmFsdWVzOiBmb3JtYXR0aW5nRGF5UGVyaW9kVmFsdWVzLFxuICAgIGRlZmF1bHRGb3JtYXR0aW5nV2lkdGg6ICd3aWRlJ1xuICB9KVxufTtcbmV4cG9ydCBkZWZhdWx0IGxvY2FsaXplOyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJ1aWxkTWF0Y2hGbihhcmdzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoc3RyaW5nKSB7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICAgIHZhciB3aWR0aCA9IG9wdGlvbnMud2lkdGg7XG4gICAgdmFyIG1hdGNoUGF0dGVybiA9IHdpZHRoICYmIGFyZ3MubWF0Y2hQYXR0ZXJuc1t3aWR0aF0gfHwgYXJncy5tYXRjaFBhdHRlcm5zW2FyZ3MuZGVmYXVsdE1hdGNoV2lkdGhdO1xuICAgIHZhciBtYXRjaFJlc3VsdCA9IHN0cmluZy5tYXRjaChtYXRjaFBhdHRlcm4pO1xuXG4gICAgaWYgKCFtYXRjaFJlc3VsdCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIG1hdGNoZWRTdHJpbmcgPSBtYXRjaFJlc3VsdFswXTtcbiAgICB2YXIgcGFyc2VQYXR0ZXJucyA9IHdpZHRoICYmIGFyZ3MucGFyc2VQYXR0ZXJuc1t3aWR0aF0gfHwgYXJncy5wYXJzZVBhdHRlcm5zW2FyZ3MuZGVmYXVsdFBhcnNlV2lkdGhdO1xuICAgIHZhciBrZXkgPSBBcnJheS5pc0FycmF5KHBhcnNlUGF0dGVybnMpID8gZmluZEluZGV4KHBhcnNlUGF0dGVybnMsIGZ1bmN0aW9uIChwYXR0ZXJuKSB7XG4gICAgICByZXR1cm4gcGF0dGVybi50ZXN0KG1hdGNoZWRTdHJpbmcpO1xuICAgIH0pIDogZmluZEtleShwYXJzZVBhdHRlcm5zLCBmdW5jdGlvbiAocGF0dGVybikge1xuICAgICAgcmV0dXJuIHBhdHRlcm4udGVzdChtYXRjaGVkU3RyaW5nKTtcbiAgICB9KTtcbiAgICB2YXIgdmFsdWU7XG4gICAgdmFsdWUgPSBhcmdzLnZhbHVlQ2FsbGJhY2sgPyBhcmdzLnZhbHVlQ2FsbGJhY2soa2V5KSA6IGtleTtcbiAgICB2YWx1ZSA9IG9wdGlvbnMudmFsdWVDYWxsYmFjayA/IG9wdGlvbnMudmFsdWVDYWxsYmFjayh2YWx1ZSkgOiB2YWx1ZTtcbiAgICB2YXIgcmVzdCA9IHN0cmluZy5zbGljZShtYXRjaGVkU3RyaW5nLmxlbmd0aCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIHJlc3Q6IHJlc3RcbiAgICB9O1xuICB9O1xufVxuXG5mdW5jdGlvbiBmaW5kS2V5KG9iamVjdCwgcHJlZGljYXRlKSB7XG4gIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcbiAgICBpZiAob2JqZWN0Lmhhc093blByb3BlcnR5KGtleSkgJiYgcHJlZGljYXRlKG9iamVjdFtrZXldKSkge1xuICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiBmaW5kSW5kZXgoYXJyYXksIHByZWRpY2F0ZSkge1xuICBmb3IgKHZhciBrZXkgPSAwOyBrZXkgPCBhcnJheS5sZW5ndGg7IGtleSsrKSB7XG4gICAgaWYgKHByZWRpY2F0ZShhcnJheVtrZXldKSkge1xuICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdW5kZWZpbmVkO1xufSIsImltcG9ydCBidWlsZE1hdGNoRm4gZnJvbSBcIi4uLy4uLy4uL19saWIvYnVpbGRNYXRjaEZuL2luZGV4LmpzXCI7XG5pbXBvcnQgYnVpbGRNYXRjaFBhdHRlcm5GbiBmcm9tIFwiLi4vLi4vLi4vX2xpYi9idWlsZE1hdGNoUGF0dGVybkZuL2luZGV4LmpzXCI7XG52YXIgbWF0Y2hPcmRpbmFsTnVtYmVyUGF0dGVybiA9IC9eKFxcZCspKHRofHN0fG5kfHJkKT8vaTtcbnZhciBwYXJzZU9yZGluYWxOdW1iZXJQYXR0ZXJuID0gL1xcZCsvaTtcbnZhciBtYXRjaEVyYVBhdHRlcm5zID0ge1xuICBuYXJyb3c6IC9eKGJ8YSkvaSxcbiAgYWJicmV2aWF0ZWQ6IC9eKGJcXC4/XFxzP2NcXC4/fGJcXC4/XFxzP2NcXC4/XFxzP2VcXC4/fGFcXC4/XFxzP2RcXC4/fGNcXC4/XFxzP2VcXC4/KS9pLFxuICB3aWRlOiAvXihiZWZvcmUgY2hyaXN0fGJlZm9yZSBjb21tb24gZXJhfGFubm8gZG9taW5pfGNvbW1vbiBlcmEpL2lcbn07XG52YXIgcGFyc2VFcmFQYXR0ZXJucyA9IHtcbiAgYW55OiBbL15iL2ksIC9eKGF8YykvaV1cbn07XG52YXIgbWF0Y2hRdWFydGVyUGF0dGVybnMgPSB7XG4gIG5hcnJvdzogL15bMTIzNF0vaSxcbiAgYWJicmV2aWF0ZWQ6IC9ecVsxMjM0XS9pLFxuICB3aWRlOiAvXlsxMjM0XSh0aHxzdHxuZHxyZCk/IHF1YXJ0ZXIvaVxufTtcbnZhciBwYXJzZVF1YXJ0ZXJQYXR0ZXJucyA9IHtcbiAgYW55OiBbLzEvaSwgLzIvaSwgLzMvaSwgLzQvaV1cbn07XG52YXIgbWF0Y2hNb250aFBhdHRlcm5zID0ge1xuICBuYXJyb3c6IC9eW2pmbWFzb25kXS9pLFxuICBhYmJyZXZpYXRlZDogL14oamFufGZlYnxtYXJ8YXByfG1heXxqdW58anVsfGF1Z3xzZXB8b2N0fG5vdnxkZWMpL2ksXG4gIHdpZGU6IC9eKGphbnVhcnl8ZmVicnVhcnl8bWFyY2h8YXByaWx8bWF5fGp1bmV8anVseXxhdWd1c3R8c2VwdGVtYmVyfG9jdG9iZXJ8bm92ZW1iZXJ8ZGVjZW1iZXIpL2lcbn07XG52YXIgcGFyc2VNb250aFBhdHRlcm5zID0ge1xuICBuYXJyb3c6IFsvXmovaSwgL15mL2ksIC9ebS9pLCAvXmEvaSwgL15tL2ksIC9eai9pLCAvXmovaSwgL15hL2ksIC9ecy9pLCAvXm8vaSwgL15uL2ksIC9eZC9pXSxcbiAgYW55OiBbL15qYS9pLCAvXmYvaSwgL15tYXIvaSwgL15hcC9pLCAvXm1heS9pLCAvXmp1bi9pLCAvXmp1bC9pLCAvXmF1L2ksIC9ecy9pLCAvXm8vaSwgL15uL2ksIC9eZC9pXVxufTtcbnZhciBtYXRjaERheVBhdHRlcm5zID0ge1xuICBuYXJyb3c6IC9eW3NtdHdmXS9pLFxuICBzaG9ydDogL14oc3V8bW98dHV8d2V8dGh8ZnJ8c2EpL2ksXG4gIGFiYnJldmlhdGVkOiAvXihzdW58bW9ufHR1ZXx3ZWR8dGh1fGZyaXxzYXQpL2ksXG4gIHdpZGU6IC9eKHN1bmRheXxtb25kYXl8dHVlc2RheXx3ZWRuZXNkYXl8dGh1cnNkYXl8ZnJpZGF5fHNhdHVyZGF5KS9pXG59O1xudmFyIHBhcnNlRGF5UGF0dGVybnMgPSB7XG4gIG5hcnJvdzogWy9ecy9pLCAvXm0vaSwgL150L2ksIC9edy9pLCAvXnQvaSwgL15mL2ksIC9ecy9pXSxcbiAgYW55OiBbL15zdS9pLCAvXm0vaSwgL150dS9pLCAvXncvaSwgL150aC9pLCAvXmYvaSwgL15zYS9pXVxufTtcbnZhciBtYXRjaERheVBlcmlvZFBhdHRlcm5zID0ge1xuICBuYXJyb3c6IC9eKGF8cHxtaXxufChpbiB0aGV8YXQpIChtb3JuaW5nfGFmdGVybm9vbnxldmVuaW5nfG5pZ2h0KSkvaSxcbiAgYW55OiAvXihbYXBdXFwuP1xccz9tXFwuP3xtaWRuaWdodHxub29ufChpbiB0aGV8YXQpIChtb3JuaW5nfGFmdGVybm9vbnxldmVuaW5nfG5pZ2h0KSkvaVxufTtcbnZhciBwYXJzZURheVBlcmlvZFBhdHRlcm5zID0ge1xuICBhbnk6IHtcbiAgICBhbTogL15hL2ksXG4gICAgcG06IC9ecC9pLFxuICAgIG1pZG5pZ2h0OiAvXm1pL2ksXG4gICAgbm9vbjogL15uby9pLFxuICAgIG1vcm5pbmc6IC9tb3JuaW5nL2ksXG4gICAgYWZ0ZXJub29uOiAvYWZ0ZXJub29uL2ksXG4gICAgZXZlbmluZzogL2V2ZW5pbmcvaSxcbiAgICBuaWdodDogL25pZ2h0L2lcbiAgfVxufTtcbnZhciBtYXRjaCA9IHtcbiAgb3JkaW5hbE51bWJlcjogYnVpbGRNYXRjaFBhdHRlcm5Gbih7XG4gICAgbWF0Y2hQYXR0ZXJuOiBtYXRjaE9yZGluYWxOdW1iZXJQYXR0ZXJuLFxuICAgIHBhcnNlUGF0dGVybjogcGFyc2VPcmRpbmFsTnVtYmVyUGF0dGVybixcbiAgICB2YWx1ZUNhbGxiYWNrOiBmdW5jdGlvbiB2YWx1ZUNhbGxiYWNrKHZhbHVlKSB7XG4gICAgICByZXR1cm4gcGFyc2VJbnQodmFsdWUsIDEwKTtcbiAgICB9XG4gIH0pLFxuICBlcmE6IGJ1aWxkTWF0Y2hGbih7XG4gICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hFcmFQYXR0ZXJucyxcbiAgICBkZWZhdWx0TWF0Y2hXaWR0aDogJ3dpZGUnLFxuICAgIHBhcnNlUGF0dGVybnM6IHBhcnNlRXJhUGF0dGVybnMsXG4gICAgZGVmYXVsdFBhcnNlV2lkdGg6ICdhbnknXG4gIH0pLFxuICBxdWFydGVyOiBidWlsZE1hdGNoRm4oe1xuICAgIG1hdGNoUGF0dGVybnM6IG1hdGNoUXVhcnRlclBhdHRlcm5zLFxuICAgIGRlZmF1bHRNYXRjaFdpZHRoOiAnd2lkZScsXG4gICAgcGFyc2VQYXR0ZXJuczogcGFyc2VRdWFydGVyUGF0dGVybnMsXG4gICAgZGVmYXVsdFBhcnNlV2lkdGg6ICdhbnknLFxuICAgIHZhbHVlQ2FsbGJhY2s6IGZ1bmN0aW9uIHZhbHVlQ2FsbGJhY2soaW5kZXgpIHtcbiAgICAgIHJldHVybiBpbmRleCArIDE7XG4gICAgfVxuICB9KSxcbiAgbW9udGg6IGJ1aWxkTWF0Y2hGbih7XG4gICAgbWF0Y2hQYXR0ZXJuczogbWF0Y2hNb250aFBhdHRlcm5zLFxuICAgIGRlZmF1bHRNYXRjaFdpZHRoOiAnd2lkZScsXG4gICAgcGFyc2VQYXR0ZXJuczogcGFyc2VNb250aFBhdHRlcm5zLFxuICAgIGRlZmF1bHRQYXJzZVdpZHRoOiAnYW55J1xuICB9KSxcbiAgZGF5OiBidWlsZE1hdGNoRm4oe1xuICAgIG1hdGNoUGF0dGVybnM6IG1hdGNoRGF5UGF0dGVybnMsXG4gICAgZGVmYXVsdE1hdGNoV2lkdGg6ICd3aWRlJyxcbiAgICBwYXJzZVBhdHRlcm5zOiBwYXJzZURheVBhdHRlcm5zLFxuICAgIGRlZmF1bHRQYXJzZVdpZHRoOiAnYW55J1xuICB9KSxcbiAgZGF5UGVyaW9kOiBidWlsZE1hdGNoRm4oe1xuICAgIG1hdGNoUGF0dGVybnM6IG1hdGNoRGF5UGVyaW9kUGF0dGVybnMsXG4gICAgZGVmYXVsdE1hdGNoV2lkdGg6ICdhbnknLFxuICAgIHBhcnNlUGF0dGVybnM6IHBhcnNlRGF5UGVyaW9kUGF0dGVybnMsXG4gICAgZGVmYXVsdFBhcnNlV2lkdGg6ICdhbnknXG4gIH0pXG59O1xuZXhwb3J0IGRlZmF1bHQgbWF0Y2g7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYnVpbGRNYXRjaFBhdHRlcm5GbihhcmdzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoc3RyaW5nKSB7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICAgIHZhciBtYXRjaFJlc3VsdCA9IHN0cmluZy5tYXRjaChhcmdzLm1hdGNoUGF0dGVybik7XG4gICAgaWYgKCFtYXRjaFJlc3VsdCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIG1hdGNoZWRTdHJpbmcgPSBtYXRjaFJlc3VsdFswXTtcbiAgICB2YXIgcGFyc2VSZXN1bHQgPSBzdHJpbmcubWF0Y2goYXJncy5wYXJzZVBhdHRlcm4pO1xuICAgIGlmICghcGFyc2VSZXN1bHQpIHJldHVybiBudWxsO1xuICAgIHZhciB2YWx1ZSA9IGFyZ3MudmFsdWVDYWxsYmFjayA/IGFyZ3MudmFsdWVDYWxsYmFjayhwYXJzZVJlc3VsdFswXSkgOiBwYXJzZVJlc3VsdFswXTtcbiAgICB2YWx1ZSA9IG9wdGlvbnMudmFsdWVDYWxsYmFjayA/IG9wdGlvbnMudmFsdWVDYWxsYmFjayh2YWx1ZSkgOiB2YWx1ZTtcbiAgICB2YXIgcmVzdCA9IHN0cmluZy5zbGljZShtYXRjaGVkU3RyaW5nLmxlbmd0aCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIHJlc3Q6IHJlc3RcbiAgICB9O1xuICB9O1xufSIsImltcG9ydCBmb3JtYXREaXN0YW5jZSBmcm9tIFwiLi9fbGliL2Zvcm1hdERpc3RhbmNlL2luZGV4LmpzXCI7XG5pbXBvcnQgZm9ybWF0TG9uZyBmcm9tIFwiLi9fbGliL2Zvcm1hdExvbmcvaW5kZXguanNcIjtcbmltcG9ydCBmb3JtYXRSZWxhdGl2ZSBmcm9tIFwiLi9fbGliL2Zvcm1hdFJlbGF0aXZlL2luZGV4LmpzXCI7XG5pbXBvcnQgbG9jYWxpemUgZnJvbSBcIi4vX2xpYi9sb2NhbGl6ZS9pbmRleC5qc1wiO1xuaW1wb3J0IG1hdGNoIGZyb20gXCIuL19saWIvbWF0Y2gvaW5kZXguanNcIjtcblxuLyoqXG4gKiBAdHlwZSB7TG9jYWxlfVxuICogQGNhdGVnb3J5IExvY2FsZXNcbiAqIEBzdW1tYXJ5IEVuZ2xpc2ggbG9jYWxlIChVbml0ZWQgU3RhdGVzKS5cbiAqIEBsYW5ndWFnZSBFbmdsaXNoXG4gKiBAaXNvLTYzOS0yIGVuZ1xuICogQGF1dGhvciBTYXNoYSBLb3NzIFtAa29zc25vY29ycF17QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2tvc3Nub2NvcnB9XG4gKiBAYXV0aG9yIExlc2hhIEtvc3MgW0BsZXNoYWtvc3Nde0BsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9sZXNoYWtvc3N9XG4gKi9cbnZhciBsb2NhbGUgPSB7XG4gIGNvZGU6ICdlbi1VUycsXG4gIGZvcm1hdERpc3RhbmNlOiBmb3JtYXREaXN0YW5jZSxcbiAgZm9ybWF0TG9uZzogZm9ybWF0TG9uZyxcbiAgZm9ybWF0UmVsYXRpdmU6IGZvcm1hdFJlbGF0aXZlLFxuICBsb2NhbGl6ZTogbG9jYWxpemUsXG4gIG1hdGNoOiBtYXRjaCxcbiAgb3B0aW9uczoge1xuICAgIHdlZWtTdGFydHNPbjogMFxuICAgIC8qIFN1bmRheSAqL1xuICAgICxcbiAgICBmaXJzdFdlZWtDb250YWluc0RhdGU6IDFcbiAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IGxvY2FsZTsiLCJpbXBvcnQgZGVmYXVsdExvY2FsZSBmcm9tIFwiLi4vLi4vbG9jYWxlL2VuLVVTL2luZGV4LmpzXCI7XG5leHBvcnQgZGVmYXVsdCBkZWZhdWx0TG9jYWxlOyIsImltcG9ydCBpc1ZhbGlkIGZyb20gXCIuLi9pc1ZhbGlkL2luZGV4LmpzXCI7XG5pbXBvcnQgc3ViTWlsbGlzZWNvbmRzIGZyb20gXCIuLi9zdWJNaWxsaXNlY29uZHMvaW5kZXguanNcIjtcbmltcG9ydCB0b0RhdGUgZnJvbSBcIi4uL3RvRGF0ZS9pbmRleC5qc1wiO1xuaW1wb3J0IGZvcm1hdHRlcnMgZnJvbSBcIi4uL19saWIvZm9ybWF0L2Zvcm1hdHRlcnMvaW5kZXguanNcIjtcbmltcG9ydCBsb25nRm9ybWF0dGVycyBmcm9tIFwiLi4vX2xpYi9mb3JtYXQvbG9uZ0Zvcm1hdHRlcnMvaW5kZXguanNcIjtcbmltcG9ydCBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzIGZyb20gXCIuLi9fbGliL2dldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMvaW5kZXguanNcIjtcbmltcG9ydCB7IGlzUHJvdGVjdGVkRGF5T2ZZZWFyVG9rZW4sIGlzUHJvdGVjdGVkV2Vla1llYXJUb2tlbiwgdGhyb3dQcm90ZWN0ZWRFcnJvciB9IGZyb20gXCIuLi9fbGliL3Byb3RlY3RlZFRva2Vucy9pbmRleC5qc1wiO1xuaW1wb3J0IHRvSW50ZWdlciBmcm9tIFwiLi4vX2xpYi90b0ludGVnZXIvaW5kZXguanNcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBnZXREZWZhdWx0T3B0aW9ucyB9IGZyb20gXCIuLi9fbGliL2RlZmF1bHRPcHRpb25zL2luZGV4LmpzXCI7XG5pbXBvcnQgZGVmYXVsdExvY2FsZSBmcm9tIFwiLi4vX2xpYi9kZWZhdWx0TG9jYWxlL2luZGV4LmpzXCI7IC8vIFRoaXMgUmVnRXhwIGNvbnNpc3RzIG9mIHRocmVlIHBhcnRzIHNlcGFyYXRlZCBieSBgfGA6XG4vLyAtIFt5WVFxTUx3SWREZWNpaEhLa21zXW8gbWF0Y2hlcyBhbnkgYXZhaWxhYmxlIG9yZGluYWwgbnVtYmVyIHRva2VuXG4vLyAgIChvbmUgb2YgdGhlIGNlcnRhaW4gbGV0dGVycyBmb2xsb3dlZCBieSBgb2ApXG4vLyAtIChcXHcpXFwxKiBtYXRjaGVzIGFueSBzZXF1ZW5jZXMgb2YgdGhlIHNhbWUgbGV0dGVyXG4vLyAtICcnIG1hdGNoZXMgdHdvIHF1b3RlIGNoYXJhY3RlcnMgaW4gYSByb3dcbi8vIC0gJygnJ3xbXiddKSsoJ3wkKSBtYXRjaGVzIGFueXRoaW5nIHN1cnJvdW5kZWQgYnkgdHdvIHF1b3RlIGNoYXJhY3RlcnMgKCcpLFxuLy8gICBleGNlcHQgYSBzaW5nbGUgcXVvdGUgc3ltYm9sLCB3aGljaCBlbmRzIHRoZSBzZXF1ZW5jZS5cbi8vICAgVHdvIHF1b3RlIGNoYXJhY3RlcnMgZG8gbm90IGVuZCB0aGUgc2VxdWVuY2UuXG4vLyAgIElmIHRoZXJlIGlzIG5vIG1hdGNoaW5nIHNpbmdsZSBxdW90ZVxuLy8gICB0aGVuIHRoZSBzZXF1ZW5jZSB3aWxsIGNvbnRpbnVlIHVudGlsIHRoZSBlbmQgb2YgdGhlIHN0cmluZy5cbi8vIC0gLiBtYXRjaGVzIGFueSBzaW5nbGUgY2hhcmFjdGVyIHVubWF0Y2hlZCBieSBwcmV2aW91cyBwYXJ0cyBvZiB0aGUgUmVnRXhwc1xuXG52YXIgZm9ybWF0dGluZ1Rva2Vuc1JlZ0V4cCA9IC9beVlRcU1Md0lkRGVjaWhIS2ttc11vfChcXHcpXFwxKnwnJ3wnKCcnfFteJ10pKygnfCQpfC4vZzsgLy8gVGhpcyBSZWdFeHAgY2F0Y2hlcyBzeW1ib2xzIGVzY2FwZWQgYnkgcXVvdGVzLCBhbmQgYWxzb1xuLy8gc2VxdWVuY2VzIG9mIHN5bWJvbHMgUCwgcCwgYW5kIHRoZSBjb21iaW5hdGlvbnMgbGlrZSBgUFBQUFBQUHBwcHBwYFxuXG52YXIgbG9uZ0Zvcm1hdHRpbmdUb2tlbnNSZWdFeHAgPSAvUCtwK3xQK3xwK3wnJ3wnKCcnfFteJ10pKygnfCQpfC4vZztcbnZhciBlc2NhcGVkU3RyaW5nUmVnRXhwID0gL14nKFteXSo/KSc/JC87XG52YXIgZG91YmxlUXVvdGVSZWdFeHAgPSAvJycvZztcbnZhciB1bmVzY2FwZWRMYXRpbkNoYXJhY3RlclJlZ0V4cCA9IC9bYS16QS1aXS87XG4vKipcbiAqIEBuYW1lIGZvcm1hdFxuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXG4gKiBAc3VtbWFyeSBGb3JtYXQgdGhlIGRhdGUuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBSZXR1cm4gdGhlIGZvcm1hdHRlZCBkYXRlIHN0cmluZyBpbiB0aGUgZ2l2ZW4gZm9ybWF0LiBUaGUgcmVzdWx0IG1heSB2YXJ5IGJ5IGxvY2FsZS5cbiAqXG4gKiA+IOKaoO+4jyBQbGVhc2Ugbm90ZSB0aGF0IHRoZSBgZm9ybWF0YCB0b2tlbnMgZGlmZmVyIGZyb20gTW9tZW50LmpzIGFuZCBvdGhlciBsaWJyYXJpZXMuXG4gKiA+IFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdW5pY29kZVRva2Vucy5tZFxuICpcbiAqIFRoZSBjaGFyYWN0ZXJzIHdyYXBwZWQgYmV0d2VlbiB0d28gc2luZ2xlIHF1b3RlcyBjaGFyYWN0ZXJzICgnKSBhcmUgZXNjYXBlZC5cbiAqIFR3byBzaW5nbGUgcXVvdGVzIGluIGEgcm93LCB3aGV0aGVyIGluc2lkZSBvciBvdXRzaWRlIGEgcXVvdGVkIHNlcXVlbmNlLCByZXByZXNlbnQgYSAncmVhbCcgc2luZ2xlIHF1b3RlLlxuICogKHNlZSB0aGUgbGFzdCBleGFtcGxlKVxuICpcbiAqIEZvcm1hdCBvZiB0aGUgc3RyaW5nIGlzIGJhc2VkIG9uIFVuaWNvZGUgVGVjaG5pY2FsIFN0YW5kYXJkICMzNTpcbiAqIGh0dHBzOi8vd3d3LnVuaWNvZGUub3JnL3JlcG9ydHMvdHIzNS90cjM1LWRhdGVzLmh0bWwjRGF0ZV9GaWVsZF9TeW1ib2xfVGFibGVcbiAqIHdpdGggYSBmZXcgYWRkaXRpb25zIChzZWUgbm90ZSA3IGJlbG93IHRoZSB0YWJsZSkuXG4gKlxuICogQWNjZXB0ZWQgcGF0dGVybnM6XG4gKiB8IFVuaXQgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBQYXR0ZXJuIHwgUmVzdWx0IGV4YW1wbGVzICAgICAgICAgICAgICAgICAgIHwgTm90ZXMgfFxuICogfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18LS0tLS0tLXxcbiAqIHwgRXJhICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEcuLkdHRyAgfCBBRCwgQkMgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBHR0dHICAgIHwgQW5ubyBEb21pbmksIEJlZm9yZSBDaHJpc3QgICAgICAgIHwgMiAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgR0dHR0cgICB8IEEsIEIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgQ2FsZW5kYXIgeWVhciAgICAgICAgICAgICAgICAgICB8IHkgICAgICAgfCA0NCwgMSwgMTkwMCwgMjAxNyAgICAgICAgICAgICAgICAgfCA1ICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB5byAgICAgIHwgNDR0aCwgMXN0LCAwdGgsIDE3dGggICAgICAgICAgICAgIHwgNSw3ICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgeXkgICAgICB8IDQ0LCAwMSwgMDAsIDE3ICAgICAgICAgICAgICAgICAgICB8IDUgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHl5eSAgICAgfCAwNDQsIDAwMSwgMTkwMCwgMjAxNyAgICAgICAgICAgICAgfCA1ICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB5eXl5ICAgIHwgMDA0NCwgMDAwMSwgMTkwMCwgMjAxNyAgICAgICAgICAgIHwgNSAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgeXl5eXkgICB8IC4uLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IDMsNSAgIHxcbiAqIHwgTG9jYWwgd2Vlay1udW1iZXJpbmcgeWVhciAgICAgICB8IFkgICAgICAgfCA0NCwgMSwgMTkwMCwgMjAxNyAgICAgICAgICAgICAgICAgfCA1ICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBZbyAgICAgIHwgNDR0aCwgMXN0LCAxOTAwdGgsIDIwMTd0aCAgICAgICAgIHwgNSw3ICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgWVkgICAgICB8IDQ0LCAwMSwgMDAsIDE3ICAgICAgICAgICAgICAgICAgICB8IDUsOCAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFlZWSAgICAgfCAwNDQsIDAwMSwgMTkwMCwgMjAxNyAgICAgICAgICAgICAgfCA1ICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBZWVlZICAgIHwgMDA0NCwgMDAwMSwgMTkwMCwgMjAxNyAgICAgICAgICAgIHwgNSw4ICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgWVlZWVkgICB8IC4uLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IDMsNSAgIHxcbiAqIHwgSVNPIHdlZWstbnVtYmVyaW5nIHllYXIgICAgICAgICB8IFIgICAgICAgfCAtNDMsIDAsIDEsIDE5MDAsIDIwMTcgICAgICAgICAgICAgfCA1LDcgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBSUiAgICAgIHwgLTQzLCAwMCwgMDEsIDE5MDAsIDIwMTcgICAgICAgICAgIHwgNSw3ICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgUlJSICAgICB8IC0wNDMsIDAwMCwgMDAxLCAxOTAwLCAyMDE3ICAgICAgICB8IDUsNyAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFJSUlIgICAgfCAtMDA0MywgMDAwMCwgMDAwMSwgMTkwMCwgMjAxNyAgICAgfCA1LDcgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBSUlJSUiAgIHwgLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMyw1LDcgfFxuICogfCBFeHRlbmRlZCB5ZWFyICAgICAgICAgICAgICAgICAgIHwgdSAgICAgICB8IC00MywgMCwgMSwgMTkwMCwgMjAxNyAgICAgICAgICAgICB8IDUgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHV1ICAgICAgfCAtNDMsIDAxLCAxOTAwLCAyMDE3ICAgICAgICAgICAgICAgfCA1ICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB1dXUgICAgIHwgLTA0MywgMDAxLCAxOTAwLCAyMDE3ICAgICAgICAgICAgIHwgNSAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgdXV1dSAgICB8IC0wMDQzLCAwMDAxLCAxOTAwLCAyMDE3ICAgICAgICAgICB8IDUgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHV1dXV1ICAgfCAuLi4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAzLDUgICB8XG4gKiB8IFF1YXJ0ZXIgKGZvcm1hdHRpbmcpICAgICAgICAgICAgfCBRICAgICAgIHwgMSwgMiwgMywgNCAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgUW8gICAgICB8IDFzdCwgMm5kLCAzcmQsIDR0aCAgICAgICAgICAgICAgICB8IDcgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFFRICAgICAgfCAwMSwgMDIsIDAzLCAwNCAgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBRUVEgICAgIHwgUTEsIFEyLCBRMywgUTQgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgUVFRUSAgICB8IDFzdCBxdWFydGVyLCAybmQgcXVhcnRlciwgLi4uICAgICB8IDIgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFFRUVFRICAgfCAxLCAyLCAzLCA0ICAgICAgICAgICAgICAgICAgICAgICAgfCA0ICAgICB8XG4gKiB8IFF1YXJ0ZXIgKHN0YW5kLWFsb25lKSAgICAgICAgICAgfCBxICAgICAgIHwgMSwgMiwgMywgNCAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgcW8gICAgICB8IDFzdCwgMm5kLCAzcmQsIDR0aCAgICAgICAgICAgICAgICB8IDcgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHFxICAgICAgfCAwMSwgMDIsIDAzLCAwNCAgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBxcXEgICAgIHwgUTEsIFEyLCBRMywgUTQgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgcXFxcSAgICB8IDFzdCBxdWFydGVyLCAybmQgcXVhcnRlciwgLi4uICAgICB8IDIgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHFxcXFxICAgfCAxLCAyLCAzLCA0ICAgICAgICAgICAgICAgICAgICAgICAgfCA0ICAgICB8XG4gKiB8IE1vbnRoIChmb3JtYXR0aW5nKSAgICAgICAgICAgICAgfCBNICAgICAgIHwgMSwgMiwgLi4uLCAxMiAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgTW8gICAgICB8IDFzdCwgMm5kLCAuLi4sIDEydGggICAgICAgICAgICAgICB8IDcgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IE1NICAgICAgfCAwMSwgMDIsIC4uLiwgMTIgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBNTU0gICAgIHwgSmFuLCBGZWIsIC4uLiwgRGVjICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgTU1NTSAgICB8IEphbnVhcnksIEZlYnJ1YXJ5LCAuLi4sIERlY2VtYmVyICB8IDIgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IE1NTU1NICAgfCBKLCBGLCAuLi4sIEQgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8IE1vbnRoIChzdGFuZC1hbG9uZSkgICAgICAgICAgICAgfCBMICAgICAgIHwgMSwgMiwgLi4uLCAxMiAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgTG8gICAgICB8IDFzdCwgMm5kLCAuLi4sIDEydGggICAgICAgICAgICAgICB8IDcgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IExMICAgICAgfCAwMSwgMDIsIC4uLiwgMTIgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBMTEwgICAgIHwgSmFuLCBGZWIsIC4uLiwgRGVjICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgTExMTCAgICB8IEphbnVhcnksIEZlYnJ1YXJ5LCAuLi4sIERlY2VtYmVyICB8IDIgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IExMTExMICAgfCBKLCBGLCAuLi4sIEQgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8IExvY2FsIHdlZWsgb2YgeWVhciAgICAgICAgICAgICAgfCB3ICAgICAgIHwgMSwgMiwgLi4uLCA1MyAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgd28gICAgICB8IDFzdCwgMm5kLCAuLi4sIDUzdGggICAgICAgICAgICAgICB8IDcgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHd3ICAgICAgfCAwMSwgMDIsIC4uLiwgNTMgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8IElTTyB3ZWVrIG9mIHllYXIgICAgICAgICAgICAgICAgfCBJICAgICAgIHwgMSwgMiwgLi4uLCA1MyAgICAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgSW8gICAgICB8IDFzdCwgMm5kLCAuLi4sIDUzdGggICAgICAgICAgICAgICB8IDcgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IElJICAgICAgfCAwMSwgMDIsIC4uLiwgNTMgICAgICAgICAgICAgICAgICAgfCA3ICAgICB8XG4gKiB8IERheSBvZiBtb250aCAgICAgICAgICAgICAgICAgICAgfCBkICAgICAgIHwgMSwgMiwgLi4uLCAzMSAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgZG8gICAgICB8IDFzdCwgMm5kLCAuLi4sIDMxc3QgICAgICAgICAgICAgICB8IDcgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGRkICAgICAgfCAwMSwgMDIsIC4uLiwgMzEgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8IERheSBvZiB5ZWFyICAgICAgICAgICAgICAgICAgICAgfCBEICAgICAgIHwgMSwgMiwgLi4uLCAzNjUsIDM2NiAgICAgICAgICAgICAgIHwgOSAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgRG8gICAgICB8IDFzdCwgMm5kLCAuLi4sIDM2NXRoLCAzNjZ0aCAgICAgICB8IDcgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEREICAgICAgfCAwMSwgMDIsIC4uLiwgMzY1LCAzNjYgICAgICAgICAgICAgfCA5ICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBEREQgICAgIHwgMDAxLCAwMDIsIC4uLiwgMzY1LCAzNjYgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgRERERCAgICB8IC4uLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IDMgICAgIHxcbiAqIHwgRGF5IG9mIHdlZWsgKGZvcm1hdHRpbmcpICAgICAgICB8IEUuLkVFRSAgfCBNb24sIFR1ZSwgV2VkLCAuLi4sIFN1biAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBFRUVFICAgIHwgTW9uZGF5LCBUdWVzZGF5LCAuLi4sIFN1bmRheSAgICAgIHwgMiAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgRUVFRUUgICB8IE0sIFQsIFcsIFQsIEYsIFMsIFMgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEVFRUVFRSAgfCBNbywgVHUsIFdlLCBUaCwgRnIsIFNhLCBTdSAgICAgICAgfCAgICAgICB8XG4gKiB8IElTTyBkYXkgb2Ygd2VlayAoZm9ybWF0dGluZykgICAgfCBpICAgICAgIHwgMSwgMiwgMywgLi4uLCA3ICAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgaW8gICAgICB8IDFzdCwgMm5kLCAuLi4sIDd0aCAgICAgICAgICAgICAgICB8IDcgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGlpICAgICAgfCAwMSwgMDIsIC4uLiwgMDcgICAgICAgICAgICAgICAgICAgfCA3ICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBpaWkgICAgIHwgTW9uLCBUdWUsIFdlZCwgLi4uLCBTdW4gICAgICAgICAgIHwgNyAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgaWlpaSAgICB8IE1vbmRheSwgVHVlc2RheSwgLi4uLCBTdW5kYXkgICAgICB8IDIsNyAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGlpaWlpICAgfCBNLCBULCBXLCBULCBGLCBTLCBTICAgICAgICAgICAgICAgfCA3ICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBpaWlpaWkgIHwgTW8sIFR1LCBXZSwgVGgsIEZyLCBTYSwgU3UgICAgICAgIHwgNyAgICAgfFxuICogfCBMb2NhbCBkYXkgb2Ygd2VlayAoZm9ybWF0dGluZykgIHwgZSAgICAgICB8IDIsIDMsIDQsIC4uLiwgMSAgICAgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGVvICAgICAgfCAybmQsIDNyZCwgLi4uLCAxc3QgICAgICAgICAgICAgICAgfCA3ICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBlZSAgICAgIHwgMDIsIDAzLCAuLi4sIDAxICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgZWVlICAgICB8IE1vbiwgVHVlLCBXZWQsIC4uLiwgU3VuICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGVlZWUgICAgfCBNb25kYXksIFR1ZXNkYXksIC4uLiwgU3VuZGF5ICAgICAgfCAyICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBlZWVlZSAgIHwgTSwgVCwgVywgVCwgRiwgUywgUyAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgZWVlZWVlICB8IE1vLCBUdSwgV2UsIFRoLCBGciwgU2EsIFN1ICAgICAgICB8ICAgICAgIHxcbiAqIHwgTG9jYWwgZGF5IG9mIHdlZWsgKHN0YW5kLWFsb25lKSB8IGMgICAgICAgfCAyLCAzLCA0LCAuLi4sIDEgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBjbyAgICAgIHwgMm5kLCAzcmQsIC4uLiwgMXN0ICAgICAgICAgICAgICAgIHwgNyAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgY2MgICAgICB8IDAyLCAwMywgLi4uLCAwMSAgICAgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGNjYyAgICAgfCBNb24sIFR1ZSwgV2VkLCAuLi4sIFN1biAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBjY2NjICAgIHwgTW9uZGF5LCBUdWVzZGF5LCAuLi4sIFN1bmRheSAgICAgIHwgMiAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgY2NjY2MgICB8IE0sIFQsIFcsIFQsIEYsIFMsIFMgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGNjY2NjYyAgfCBNbywgVHUsIFdlLCBUaCwgRnIsIFNhLCBTdSAgICAgICAgfCAgICAgICB8XG4gKiB8IEFNLCBQTSAgICAgICAgICAgICAgICAgICAgICAgICAgfCBhLi5hYSAgIHwgQU0sIFBNICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYWFhICAgICB8IGFtLCBwbSAgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGFhYWEgICAgfCBhLm0uLCBwLm0uICAgICAgICAgICAgICAgICAgICAgICAgfCAyICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBhYWFhYSAgIHwgYSwgcCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCBBTSwgUE0sIG5vb24sIG1pZG5pZ2h0ICAgICAgICAgIHwgYi4uYmIgICB8IEFNLCBQTSwgbm9vbiwgbWlkbmlnaHQgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGJiYiAgICAgfCBhbSwgcG0sIG5vb24sIG1pZG5pZ2h0ICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBiYmJiICAgIHwgYS5tLiwgcC5tLiwgbm9vbiwgbWlkbmlnaHQgICAgICAgIHwgMiAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYmJiYmIgICB8IGEsIHAsIG4sIG1pICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgRmxleGlibGUgZGF5IHBlcmlvZCAgICAgICAgICAgICB8IEIuLkJCQiAgfCBhdCBuaWdodCwgaW4gdGhlIG1vcm5pbmcsIC4uLiAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBCQkJCICAgIHwgYXQgbmlnaHQsIGluIHRoZSBtb3JuaW5nLCAuLi4gICAgIHwgMiAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgQkJCQkIgICB8IGF0IG5pZ2h0LCBpbiB0aGUgbW9ybmluZywgLi4uICAgICB8ICAgICAgIHxcbiAqIHwgSG91ciBbMS0xMl0gICAgICAgICAgICAgICAgICAgICB8IGggICAgICAgfCAxLCAyLCAuLi4sIDExLCAxMiAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBobyAgICAgIHwgMXN0LCAybmQsIC4uLiwgMTF0aCwgMTJ0aCAgICAgICAgIHwgNyAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgaGggICAgICB8IDAxLCAwMiwgLi4uLCAxMSwgMTIgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgSG91ciBbMC0yM10gICAgICAgICAgICAgICAgICAgICB8IEggICAgICAgfCAwLCAxLCAyLCAuLi4sIDIzICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBIbyAgICAgIHwgMHRoLCAxc3QsIDJuZCwgLi4uLCAyM3JkICAgICAgICAgIHwgNyAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgSEggICAgICB8IDAwLCAwMSwgMDIsIC4uLiwgMjMgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgSG91ciBbMC0xMV0gICAgICAgICAgICAgICAgICAgICB8IEsgICAgICAgfCAxLCAyLCAuLi4sIDExLCAwICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBLbyAgICAgIHwgMXN0LCAybmQsIC4uLiwgMTF0aCwgMHRoICAgICAgICAgIHwgNyAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgS0sgICAgICB8IDAxLCAwMiwgLi4uLCAxMSwgMDAgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgSG91ciBbMS0yNF0gICAgICAgICAgICAgICAgICAgICB8IGsgICAgICAgfCAyNCwgMSwgMiwgLi4uLCAyMyAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBrbyAgICAgIHwgMjR0aCwgMXN0LCAybmQsIC4uLiwgMjNyZCAgICAgICAgIHwgNyAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwga2sgICAgICB8IDI0LCAwMSwgMDIsIC4uLiwgMjMgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgTWludXRlICAgICAgICAgICAgICAgICAgICAgICAgICB8IG0gICAgICAgfCAwLCAxLCAuLi4sIDU5ICAgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBtbyAgICAgIHwgMHRoLCAxc3QsIC4uLiwgNTl0aCAgICAgICAgICAgICAgIHwgNyAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgbW0gICAgICB8IDAwLCAwMSwgLi4uLCA1OSAgICAgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgU2Vjb25kICAgICAgICAgICAgICAgICAgICAgICAgICB8IHMgICAgICAgfCAwLCAxLCAuLi4sIDU5ICAgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBzbyAgICAgIHwgMHRoLCAxc3QsIC4uLiwgNTl0aCAgICAgICAgICAgICAgIHwgNyAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgc3MgICAgICB8IDAwLCAwMSwgLi4uLCA1OSAgICAgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgRnJhY3Rpb24gb2Ygc2Vjb25kICAgICAgICAgICAgICB8IFMgICAgICAgfCAwLCAxLCAuLi4sIDkgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBTUyAgICAgIHwgMDAsIDAxLCAuLi4sIDk5ICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgU1NTICAgICB8IDAwMCwgMDAxLCAuLi4sIDk5OSAgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFNTU1MgICAgfCAuLi4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAzICAgICB8XG4gKiB8IFRpbWV6b25lIChJU08tODYwMSB3LyBaKSAgICAgICAgfCBYICAgICAgIHwgLTA4LCArMDUzMCwgWiAgICAgICAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgWFggICAgICB8IC0wODAwLCArMDUzMCwgWiAgICAgICAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFhYWCAgICAgfCAtMDg6MDAsICswNTozMCwgWiAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBYWFhYICAgIHwgLTA4MDAsICswNTMwLCBaLCArMTIzNDU2ICAgICAgICAgIHwgMiAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgWFhYWFggICB8IC0wODowMCwgKzA1OjMwLCBaLCArMTI6MzQ6NTYgICAgICB8ICAgICAgIHxcbiAqIHwgVGltZXpvbmUgKElTTy04NjAxIHcvbyBaKSAgICAgICB8IHggICAgICAgfCAtMDgsICswNTMwLCArMDAgICAgICAgICAgICAgICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB4eCAgICAgIHwgLTA4MDAsICswNTMwLCArMDAwMCAgICAgICAgICAgICAgIHwgICAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgeHh4ICAgICB8IC0wODowMCwgKzA1OjMwLCArMDA6MDAgICAgICAgICAgICB8IDIgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHh4eHggICAgfCAtMDgwMCwgKzA1MzAsICswMDAwLCArMTIzNDU2ICAgICAgfCAgICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB4eHh4eCAgIHwgLTA4OjAwLCArMDU6MzAsICswMDowMCwgKzEyOjM0OjU2IHwgICAgICAgfFxuICogfCBUaW1lem9uZSAoR01UKSAgICAgICAgICAgICAgICAgIHwgTy4uLk9PTyB8IEdNVC04LCBHTVQrNTozMCwgR01UKzAgICAgICAgICAgICB8ICAgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IE9PT08gICAgfCBHTVQtMDg6MDAsIEdNVCswNTozMCwgR01UKzAwOjAwICAgfCAyICAgICB8XG4gKiB8IFRpbWV6b25lIChzcGVjaWZpYyBub24tbG9jYXQuKSAgfCB6Li4uenp6IHwgR01ULTgsIEdNVCs1OjMwLCBHTVQrMCAgICAgICAgICAgIHwgNiAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgenp6eiAgICB8IEdNVC0wODowMCwgR01UKzA1OjMwLCBHTVQrMDA6MDAgICB8IDIsNiAgIHxcbiAqIHwgU2Vjb25kcyB0aW1lc3RhbXAgICAgICAgICAgICAgICB8IHQgICAgICAgfCA1MTI5Njk1MjAgICAgICAgICAgICAgICAgICAgICAgICAgfCA3ICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCB0dCAgICAgIHwgLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMyw3ICAgfFxuICogfCBNaWxsaXNlY29uZHMgdGltZXN0YW1wICAgICAgICAgIHwgVCAgICAgICB8IDUxMjk2OTUyMDkwMCAgICAgICAgICAgICAgICAgICAgICB8IDcgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFRUICAgICAgfCAuLi4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAzLDcgICB8XG4gKiB8IExvbmcgbG9jYWxpemVkIGRhdGUgICAgICAgICAgICAgfCBQICAgICAgIHwgMDQvMjkvMTQ1MyAgICAgICAgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgUFAgICAgICB8IEFwciAyOSwgMTQ1MyAgICAgICAgICAgICAgICAgICAgICB8IDcgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFBQUCAgICAgfCBBcHJpbCAyOXRoLCAxNDUzICAgICAgICAgICAgICAgICAgfCA3ICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBQUFBQICAgIHwgRnJpZGF5LCBBcHJpbCAyOXRoLCAxNDUzICAgICAgICAgIHwgMiw3ICAgfFxuICogfCBMb25nIGxvY2FsaXplZCB0aW1lICAgICAgICAgICAgIHwgcCAgICAgICB8IDEyOjAwIEFNICAgICAgICAgICAgICAgICAgICAgICAgICB8IDcgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IHBwICAgICAgfCAxMjowMDowMCBBTSAgICAgICAgICAgICAgICAgICAgICAgfCA3ICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBwcHAgICAgIHwgMTI6MDA6MDAgQU0gR01UKzIgICAgICAgICAgICAgICAgIHwgNyAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgcHBwcCAgICB8IDEyOjAwOjAwIEFNIEdNVCswMjowMCAgICAgICAgICAgICB8IDIsNyAgIHxcbiAqIHwgQ29tYmluYXRpb24gb2YgZGF0ZSBhbmQgdGltZSAgICB8IFBwICAgICAgfCAwNC8yOS8xNDUzLCAxMjowMCBBTSAgICAgICAgICAgICAgfCA3ICAgICB8XG4gKiB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBQUHBwICAgIHwgQXByIDI5LCAxNDUzLCAxMjowMDowMCBBTSAgICAgICAgIHwgNyAgICAgfFxuICogfCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgUFBQcHBwICB8IEFwcmlsIDI5dGgsIDE0NTMgYXQgLi4uICAgICAgICAgICB8IDcgICAgIHxcbiAqIHwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IFBQUFBwcHBwfCBGcmlkYXksIEFwcmlsIDI5dGgsIDE0NTMgYXQgLi4uICAgfCAyLDcgICB8XG4gKiBOb3RlczpcbiAqIDEuIFwiRm9ybWF0dGluZ1wiIHVuaXRzIChlLmcuIGZvcm1hdHRpbmcgcXVhcnRlcikgaW4gdGhlIGRlZmF1bHQgZW4tVVMgbG9jYWxlXG4gKiAgICBhcmUgdGhlIHNhbWUgYXMgXCJzdGFuZC1hbG9uZVwiIHVuaXRzLCBidXQgYXJlIGRpZmZlcmVudCBpbiBzb21lIGxhbmd1YWdlcy5cbiAqICAgIFwiRm9ybWF0dGluZ1wiIHVuaXRzIGFyZSBkZWNsaW5lZCBhY2NvcmRpbmcgdG8gdGhlIHJ1bGVzIG9mIHRoZSBsYW5ndWFnZVxuICogICAgaW4gdGhlIGNvbnRleHQgb2YgYSBkYXRlLiBcIlN0YW5kLWFsb25lXCIgdW5pdHMgYXJlIGFsd2F5cyBub21pbmF0aXZlIHNpbmd1bGFyOlxuICpcbiAqICAgIGBmb3JtYXQobmV3IERhdGUoMjAxNywgMTAsIDYpLCAnZG8gTExMTCcsIHtsb2NhbGU6IGNzfSkgLy89PiAnNi4gbGlzdG9wYWQnYFxuICpcbiAqICAgIGBmb3JtYXQobmV3IERhdGUoMjAxNywgMTAsIDYpLCAnZG8gTU1NTScsIHtsb2NhbGU6IGNzfSkgLy89PiAnNi4gbGlzdG9wYWR1J2BcbiAqXG4gKiAyLiBBbnkgc2VxdWVuY2Ugb2YgdGhlIGlkZW50aWNhbCBsZXR0ZXJzIGlzIGEgcGF0dGVybiwgdW5sZXNzIGl0IGlzIGVzY2FwZWQgYnlcbiAqICAgIHRoZSBzaW5nbGUgcXVvdGUgY2hhcmFjdGVycyAoc2VlIGJlbG93KS5cbiAqICAgIElmIHRoZSBzZXF1ZW5jZSBpcyBsb25nZXIgdGhhbiBsaXN0ZWQgaW4gdGFibGUgKGUuZy4gYEVFRUVFRUVFRUVFYClcbiAqICAgIHRoZSBvdXRwdXQgd2lsbCBiZSB0aGUgc2FtZSBhcyBkZWZhdWx0IHBhdHRlcm4gZm9yIHRoaXMgdW5pdCwgdXN1YWxseVxuICogICAgdGhlIGxvbmdlc3Qgb25lIChpbiBjYXNlIG9mIElTTyB3ZWVrZGF5cywgYEVFRUVgKS4gRGVmYXVsdCBwYXR0ZXJucyBmb3IgdW5pdHNcbiAqICAgIGFyZSBtYXJrZWQgd2l0aCBcIjJcIiBpbiB0aGUgbGFzdCBjb2x1bW4gb2YgdGhlIHRhYmxlLlxuICpcbiAqICAgIGBmb3JtYXQobmV3IERhdGUoMjAxNywgMTAsIDYpLCAnTU1NJykgLy89PiAnTm92J2BcbiAqXG4gKiAgICBgZm9ybWF0KG5ldyBEYXRlKDIwMTcsIDEwLCA2KSwgJ01NTU0nKSAvLz0+ICdOb3ZlbWJlcidgXG4gKlxuICogICAgYGZvcm1hdChuZXcgRGF0ZSgyMDE3LCAxMCwgNiksICdNTU1NTScpIC8vPT4gJ04nYFxuICpcbiAqICAgIGBmb3JtYXQobmV3IERhdGUoMjAxNywgMTAsIDYpLCAnTU1NTU1NJykgLy89PiAnTm92ZW1iZXInYFxuICpcbiAqICAgIGBmb3JtYXQobmV3IERhdGUoMjAxNywgMTAsIDYpLCAnTU1NTU1NTScpIC8vPT4gJ05vdmVtYmVyJ2BcbiAqXG4gKiAzLiBTb21lIHBhdHRlcm5zIGNvdWxkIGJlIHVubGltaXRlZCBsZW5ndGggKHN1Y2ggYXMgYHl5eXl5eXl5YCkuXG4gKiAgICBUaGUgb3V0cHV0IHdpbGwgYmUgcGFkZGVkIHdpdGggemVyb3MgdG8gbWF0Y2ggdGhlIGxlbmd0aCBvZiB0aGUgcGF0dGVybi5cbiAqXG4gKiAgICBgZm9ybWF0KG5ldyBEYXRlKDIwMTcsIDEwLCA2KSwgJ3l5eXl5eXl5JykgLy89PiAnMDAwMDIwMTcnYFxuICpcbiAqIDQuIGBRUVFRUWAgYW5kIGBxcXFxcWAgY291bGQgYmUgbm90IHN0cmljdGx5IG51bWVyaWNhbCBpbiBzb21lIGxvY2FsZXMuXG4gKiAgICBUaGVzZSB0b2tlbnMgcmVwcmVzZW50IHRoZSBzaG9ydGVzdCBmb3JtIG9mIHRoZSBxdWFydGVyLlxuICpcbiAqIDUuIFRoZSBtYWluIGRpZmZlcmVuY2UgYmV0d2VlbiBgeWAgYW5kIGB1YCBwYXR0ZXJucyBhcmUgQi5DLiB5ZWFyczpcbiAqXG4gKiAgICB8IFllYXIgfCBgeWAgfCBgdWAgfFxuICogICAgfC0tLS0tLXwtLS0tLXwtLS0tLXxcbiAqICAgIHwgQUMgMSB8ICAgMSB8ICAgMSB8XG4gKiAgICB8IEJDIDEgfCAgIDEgfCAgIDAgfFxuICogICAgfCBCQyAyIHwgICAyIHwgIC0xIHxcbiAqXG4gKiAgICBBbHNvIGB5eWAgYWx3YXlzIHJldHVybnMgdGhlIGxhc3QgdHdvIGRpZ2l0cyBvZiBhIHllYXIsXG4gKiAgICB3aGlsZSBgdXVgIHBhZHMgc2luZ2xlIGRpZ2l0IHllYXJzIHRvIDIgY2hhcmFjdGVycyBhbmQgcmV0dXJucyBvdGhlciB5ZWFycyB1bmNoYW5nZWQ6XG4gKlxuICogICAgfCBZZWFyIHwgYHl5YCB8IGB1dWAgfFxuICogICAgfC0tLS0tLXwtLS0tLS18LS0tLS0tfFxuICogICAgfCAxICAgIHwgICAwMSB8ICAgMDEgfFxuICogICAgfCAxNCAgIHwgICAxNCB8ICAgMTQgfFxuICogICAgfCAzNzYgIHwgICA3NiB8ICAzNzYgfFxuICogICAgfCAxNDUzIHwgICA1MyB8IDE0NTMgfFxuICpcbiAqICAgIFRoZSBzYW1lIGRpZmZlcmVuY2UgaXMgdHJ1ZSBmb3IgbG9jYWwgYW5kIElTTyB3ZWVrLW51bWJlcmluZyB5ZWFycyAoYFlgIGFuZCBgUmApLFxuICogICAgZXhjZXB0IGxvY2FsIHdlZWstbnVtYmVyaW5nIHllYXJzIGFyZSBkZXBlbmRlbnQgb24gYG9wdGlvbnMud2Vla1N0YXJ0c09uYFxuICogICAgYW5kIGBvcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZWAgKGNvbXBhcmUgW2dldElTT1dlZWtZZWFyXXtAbGluayBodHRwczovL2RhdGUtZm5zLm9yZy9kb2NzL2dldElTT1dlZWtZZWFyfVxuICogICAgYW5kIFtnZXRXZWVrWWVhcl17QGxpbmsgaHR0cHM6Ly9kYXRlLWZucy5vcmcvZG9jcy9nZXRXZWVrWWVhcn0pLlxuICpcbiAqIDYuIFNwZWNpZmljIG5vbi1sb2NhdGlvbiB0aW1lem9uZXMgYXJlIGN1cnJlbnRseSB1bmF2YWlsYWJsZSBpbiBgZGF0ZS1mbnNgLFxuICogICAgc28gcmlnaHQgbm93IHRoZXNlIHRva2VucyBmYWxsIGJhY2sgdG8gR01UIHRpbWV6b25lcy5cbiAqXG4gKiA3LiBUaGVzZSBwYXR0ZXJucyBhcmUgbm90IGluIHRoZSBVbmljb2RlIFRlY2huaWNhbCBTdGFuZGFyZCAjMzU6XG4gKiAgICAtIGBpYDogSVNPIGRheSBvZiB3ZWVrXG4gKiAgICAtIGBJYDogSVNPIHdlZWsgb2YgeWVhclxuICogICAgLSBgUmA6IElTTyB3ZWVrLW51bWJlcmluZyB5ZWFyXG4gKiAgICAtIGB0YDogc2Vjb25kcyB0aW1lc3RhbXBcbiAqICAgIC0gYFRgOiBtaWxsaXNlY29uZHMgdGltZXN0YW1wXG4gKiAgICAtIGBvYDogb3JkaW5hbCBudW1iZXIgbW9kaWZpZXJcbiAqICAgIC0gYFBgOiBsb25nIGxvY2FsaXplZCBkYXRlXG4gKiAgICAtIGBwYDogbG9uZyBsb2NhbGl6ZWQgdGltZVxuICpcbiAqIDguIGBZWWAgYW5kIGBZWVlZYCB0b2tlbnMgcmVwcmVzZW50IHdlZWstbnVtYmVyaW5nIHllYXJzIGJ1dCB0aGV5IGFyZSBvZnRlbiBjb25mdXNlZCB3aXRoIHllYXJzLlxuICogICAgWW91IHNob3VsZCBlbmFibGUgYG9wdGlvbnMudXNlQWRkaXRpb25hbFdlZWtZZWFyVG9rZW5zYCB0byB1c2UgdGhlbS4gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91bmljb2RlVG9rZW5zLm1kXG4gKlxuICogOS4gYERgIGFuZCBgRERgIHRva2VucyByZXByZXNlbnQgZGF5cyBvZiB0aGUgeWVhciBidXQgdGhleSBhcmUgb2Z0ZW4gY29uZnVzZWQgd2l0aCBkYXlzIG9mIHRoZSBtb250aC5cbiAqICAgIFlvdSBzaG91bGQgZW5hYmxlIGBvcHRpb25zLnVzZUFkZGl0aW9uYWxEYXlPZlllYXJUb2tlbnNgIHRvIHVzZSB0aGVtLiBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VuaWNvZGVUb2tlbnMubWRcbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlIC0gdGhlIG9yaWdpbmFsIGRhdGVcbiAqIEBwYXJhbSB7U3RyaW5nfSBmb3JtYXQgLSB0aGUgc3RyaW5nIG9mIHRva2Vuc1xuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIGFuIG9iamVjdCB3aXRoIG9wdGlvbnMuXG4gKiBAcGFyYW0ge0xvY2FsZX0gW29wdGlvbnMubG9jYWxlPWRlZmF1bHRMb2NhbGVdIC0gdGhlIGxvY2FsZSBvYmplY3QuIFNlZSBbTG9jYWxlXXtAbGluayBodHRwczovL2RhdGUtZm5zLm9yZy9kb2NzL0xvY2FsZX1cbiAqIEBwYXJhbSB7MHwxfDJ8M3w0fDV8Nn0gW29wdGlvbnMud2Vla1N0YXJ0c09uPTBdIC0gdGhlIGluZGV4IG9mIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsgKDAgLSBTdW5kYXkpXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMuZmlyc3RXZWVrQ29udGFpbnNEYXRlPTFdIC0gdGhlIGRheSBvZiBKYW51YXJ5LCB3aGljaCBpc1xuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy51c2VBZGRpdGlvbmFsV2Vla1llYXJUb2tlbnM9ZmFsc2VdIC0gaWYgdHJ1ZSwgYWxsb3dzIHVzYWdlIG9mIHRoZSB3ZWVrLW51bWJlcmluZyB5ZWFyIHRva2VucyBgWVlgIGFuZCBgWVlZWWA7XG4gKiAgIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdW5pY29kZVRva2Vucy5tZFxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy51c2VBZGRpdGlvbmFsRGF5T2ZZZWFyVG9rZW5zPWZhbHNlXSAtIGlmIHRydWUsIGFsbG93cyB1c2FnZSBvZiB0aGUgZGF5IG9mIHllYXIgdG9rZW5zIGBEYCBhbmQgYEREYDtcbiAqICAgc2VlOiBodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91bmljb2RlVG9rZW5zLm1kXG4gKiBAcmV0dXJucyB7U3RyaW5nfSB0aGUgZm9ybWF0dGVkIGRhdGUgc3RyaW5nXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDIgYXJndW1lbnRzIHJlcXVpcmVkXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBgZGF0ZWAgbXVzdCBub3QgYmUgSW52YWxpZCBEYXRlXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBgb3B0aW9ucy5sb2NhbGVgIG11c3QgY29udGFpbiBgbG9jYWxpemVgIHByb3BlcnR5XG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBgb3B0aW9ucy5sb2NhbGVgIG11c3QgY29udGFpbiBgZm9ybWF0TG9uZ2AgcHJvcGVydHlcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IGBvcHRpb25zLndlZWtTdGFydHNPbmAgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIDZcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IGBvcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZWAgbXVzdCBiZSBiZXR3ZWVuIDEgYW5kIDdcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IHVzZSBgeXl5eWAgaW5zdGVhZCBvZiBgWVlZWWAgZm9yIGZvcm1hdHRpbmcgeWVhcnMgdXNpbmcgW2Zvcm1hdCBwcm92aWRlZF0gdG8gdGhlIGlucHV0IFtpbnB1dCBwcm92aWRlZF07IHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdW5pY29kZVRva2Vucy5tZFxuICogQHRocm93cyB7UmFuZ2VFcnJvcn0gdXNlIGB5eWAgaW5zdGVhZCBvZiBgWVlgIGZvciBmb3JtYXR0aW5nIHllYXJzIHVzaW5nIFtmb3JtYXQgcHJvdmlkZWRdIHRvIHRoZSBpbnB1dCBbaW5wdXQgcHJvdmlkZWRdOyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VuaWNvZGVUb2tlbnMubWRcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IHVzZSBgZGAgaW5zdGVhZCBvZiBgRGAgZm9yIGZvcm1hdHRpbmcgZGF5cyBvZiB0aGUgbW9udGggdXNpbmcgW2Zvcm1hdCBwcm92aWRlZF0gdG8gdGhlIGlucHV0IFtpbnB1dCBwcm92aWRlZF07IHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdW5pY29kZVRva2Vucy5tZFxuICogQHRocm93cyB7UmFuZ2VFcnJvcn0gdXNlIGBkZGAgaW5zdGVhZCBvZiBgRERgIGZvciBmb3JtYXR0aW5nIGRheXMgb2YgdGhlIG1vbnRoIHVzaW5nIFtmb3JtYXQgcHJvdmlkZWRdIHRvIHRoZSBpbnB1dCBbaW5wdXQgcHJvdmlkZWRdOyBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VuaWNvZGVUb2tlbnMubWRcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IGZvcm1hdCBzdHJpbmcgY29udGFpbnMgYW4gdW5lc2NhcGVkIGxhdGluIGFscGhhYmV0IGNoYXJhY3RlclxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBSZXByZXNlbnQgMTEgRmVicnVhcnkgMjAxNCBpbiBtaWRkbGUtZW5kaWFuIGZvcm1hdDpcbiAqIGNvbnN0IHJlc3VsdCA9IGZvcm1hdChuZXcgRGF0ZSgyMDE0LCAxLCAxMSksICdNTS9kZC95eXl5JylcbiAqIC8vPT4gJzAyLzExLzIwMTQnXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFJlcHJlc2VudCAyIEp1bHkgMjAxNCBpbiBFc3BlcmFudG86XG4gKiBpbXBvcnQgeyBlb0xvY2FsZSB9IGZyb20gJ2RhdGUtZm5zL2xvY2FsZS9lbydcbiAqIGNvbnN0IHJlc3VsdCA9IGZvcm1hdChuZXcgRGF0ZSgyMDE0LCA2LCAyKSwgXCJkbyAnZGUnIE1NTU0geXl5eVwiLCB7XG4gKiAgIGxvY2FsZTogZW9Mb2NhbGVcbiAqIH0pXG4gKiAvLz0+ICcyLWEgZGUganVsaW8gMjAxNCdcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gRXNjYXBlIHN0cmluZyBieSBzaW5nbGUgcXVvdGUgY2hhcmFjdGVyczpcbiAqIGNvbnN0IHJlc3VsdCA9IGZvcm1hdChuZXcgRGF0ZSgyMDE0LCA2LCAyLCAxNSksIFwiaCAnbycnY2xvY2snXCIpXG4gKiAvLz0+IFwiMyBvJ2Nsb2NrXCJcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3JtYXQoZGlydHlEYXRlLCBkaXJ0eUZvcm1hdFN0ciwgb3B0aW9ucykge1xuICB2YXIgX3JlZiwgX29wdGlvbnMkbG9jYWxlLCBfcmVmMiwgX3JlZjMsIF9yZWY0LCBfb3B0aW9ucyRmaXJzdFdlZWtDb24sIF9vcHRpb25zJGxvY2FsZTIsIF9vcHRpb25zJGxvY2FsZTIkb3B0aSwgX2RlZmF1bHRPcHRpb25zJGxvY2FsLCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwyLCBfcmVmNSwgX3JlZjYsIF9yZWY3LCBfb3B0aW9ucyR3ZWVrU3RhcnRzT24sIF9vcHRpb25zJGxvY2FsZTMsIF9vcHRpb25zJGxvY2FsZTMkb3B0aSwgX2RlZmF1bHRPcHRpb25zJGxvY2FsMywgX2RlZmF1bHRPcHRpb25zJGxvY2FsNDtcblxuICByZXF1aXJlZEFyZ3MoMiwgYXJndW1lbnRzKTtcbiAgdmFyIGZvcm1hdFN0ciA9IFN0cmluZyhkaXJ0eUZvcm1hdFN0cik7XG4gIHZhciBkZWZhdWx0T3B0aW9ucyA9IGdldERlZmF1bHRPcHRpb25zKCk7XG4gIHZhciBsb2NhbGUgPSAoX3JlZiA9IChfb3B0aW9ucyRsb2NhbGUgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMubG9jYWxlKSAhPT0gbnVsbCAmJiBfb3B0aW9ucyRsb2NhbGUgIT09IHZvaWQgMCA/IF9vcHRpb25zJGxvY2FsZSA6IGRlZmF1bHRPcHRpb25zLmxvY2FsZSkgIT09IG51bGwgJiYgX3JlZiAhPT0gdm9pZCAwID8gX3JlZiA6IGRlZmF1bHRMb2NhbGU7XG4gIHZhciBmaXJzdFdlZWtDb250YWluc0RhdGUgPSB0b0ludGVnZXIoKF9yZWYyID0gKF9yZWYzID0gKF9yZWY0ID0gKF9vcHRpb25zJGZpcnN0V2Vla0NvbiA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5maXJzdFdlZWtDb250YWluc0RhdGUpICE9PSBudWxsICYmIF9vcHRpb25zJGZpcnN0V2Vla0NvbiAhPT0gdm9pZCAwID8gX29wdGlvbnMkZmlyc3RXZWVrQ29uIDogb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX29wdGlvbnMkbG9jYWxlMiA9IG9wdGlvbnMubG9jYWxlKSA9PT0gbnVsbCB8fCBfb3B0aW9ucyRsb2NhbGUyID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX29wdGlvbnMkbG9jYWxlMiRvcHRpID0gX29wdGlvbnMkbG9jYWxlMi5vcHRpb25zKSA9PT0gbnVsbCB8fCBfb3B0aW9ucyRsb2NhbGUyJG9wdGkgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9vcHRpb25zJGxvY2FsZTIkb3B0aS5maXJzdFdlZWtDb250YWluc0RhdGUpICE9PSBudWxsICYmIF9yZWY0ICE9PSB2b2lkIDAgPyBfcmVmNCA6IGRlZmF1bHRPcHRpb25zLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT09IG51bGwgJiYgX3JlZjMgIT09IHZvaWQgMCA/IF9yZWYzIDogKF9kZWZhdWx0T3B0aW9ucyRsb2NhbCA9IGRlZmF1bHRPcHRpb25zLmxvY2FsZSkgPT09IG51bGwgfHwgX2RlZmF1bHRPcHRpb25zJGxvY2FsID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX2RlZmF1bHRPcHRpb25zJGxvY2FsMiA9IF9kZWZhdWx0T3B0aW9ucyRsb2NhbC5vcHRpb25zKSA9PT0gbnVsbCB8fCBfZGVmYXVsdE9wdGlvbnMkbG9jYWwyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZGVmYXVsdE9wdGlvbnMkbG9jYWwyLmZpcnN0V2Vla0NvbnRhaW5zRGF0ZSkgIT09IG51bGwgJiYgX3JlZjIgIT09IHZvaWQgMCA/IF9yZWYyIDogMSk7IC8vIFRlc3QgaWYgd2Vla1N0YXJ0c09uIGlzIGJldHdlZW4gMSBhbmQgNyBfYW5kXyBpcyBub3QgTmFOXG5cbiAgaWYgKCEoZmlyc3RXZWVrQ29udGFpbnNEYXRlID49IDEgJiYgZmlyc3RXZWVrQ29udGFpbnNEYXRlIDw9IDcpKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ2ZpcnN0V2Vla0NvbnRhaW5zRGF0ZSBtdXN0IGJlIGJldHdlZW4gMSBhbmQgNyBpbmNsdXNpdmVseScpO1xuICB9XG5cbiAgdmFyIHdlZWtTdGFydHNPbiA9IHRvSW50ZWdlcigoX3JlZjUgPSAoX3JlZjYgPSAoX3JlZjcgPSAoX29wdGlvbnMkd2Vla1N0YXJ0c09uID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLndlZWtTdGFydHNPbikgIT09IG51bGwgJiYgX29wdGlvbnMkd2Vla1N0YXJ0c09uICE9PSB2b2lkIDAgPyBfb3B0aW9ucyR3ZWVrU3RhcnRzT24gOiBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfb3B0aW9ucyRsb2NhbGUzID0gb3B0aW9ucy5sb2NhbGUpID09PSBudWxsIHx8IF9vcHRpb25zJGxvY2FsZTMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfb3B0aW9ucyRsb2NhbGUzJG9wdGkgPSBfb3B0aW9ucyRsb2NhbGUzLm9wdGlvbnMpID09PSBudWxsIHx8IF9vcHRpb25zJGxvY2FsZTMkb3B0aSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29wdGlvbnMkbG9jYWxlMyRvcHRpLndlZWtTdGFydHNPbikgIT09IG51bGwgJiYgX3JlZjcgIT09IHZvaWQgMCA/IF9yZWY3IDogZGVmYXVsdE9wdGlvbnMud2Vla1N0YXJ0c09uKSAhPT0gbnVsbCAmJiBfcmVmNiAhPT0gdm9pZCAwID8gX3JlZjYgOiAoX2RlZmF1bHRPcHRpb25zJGxvY2FsMyA9IGRlZmF1bHRPcHRpb25zLmxvY2FsZSkgPT09IG51bGwgfHwgX2RlZmF1bHRPcHRpb25zJGxvY2FsMyA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kZWZhdWx0T3B0aW9ucyRsb2NhbDQgPSBfZGVmYXVsdE9wdGlvbnMkbG9jYWwzLm9wdGlvbnMpID09PSBudWxsIHx8IF9kZWZhdWx0T3B0aW9ucyRsb2NhbDQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kZWZhdWx0T3B0aW9ucyRsb2NhbDQud2Vla1N0YXJ0c09uKSAhPT0gbnVsbCAmJiBfcmVmNSAhPT0gdm9pZCAwID8gX3JlZjUgOiAwKTsgLy8gVGVzdCBpZiB3ZWVrU3RhcnRzT24gaXMgYmV0d2VlbiAwIGFuZCA2IF9hbmRfIGlzIG5vdCBOYU5cblxuICBpZiAoISh3ZWVrU3RhcnRzT24gPj0gMCAmJiB3ZWVrU3RhcnRzT24gPD0gNikpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignd2Vla1N0YXJ0c09uIG11c3QgYmUgYmV0d2VlbiAwIGFuZCA2IGluY2x1c2l2ZWx5Jyk7XG4gIH1cblxuICBpZiAoIWxvY2FsZS5sb2NhbGl6ZSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdsb2NhbGUgbXVzdCBjb250YWluIGxvY2FsaXplIHByb3BlcnR5Jyk7XG4gIH1cblxuICBpZiAoIWxvY2FsZS5mb3JtYXRMb25nKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ2xvY2FsZSBtdXN0IGNvbnRhaW4gZm9ybWF0TG9uZyBwcm9wZXJ0eScpO1xuICB9XG5cbiAgdmFyIG9yaWdpbmFsRGF0ZSA9IHRvRGF0ZShkaXJ0eURhdGUpO1xuXG4gIGlmICghaXNWYWxpZChvcmlnaW5hbERhdGUpKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0ludmFsaWQgdGltZSB2YWx1ZScpO1xuICB9IC8vIENvbnZlcnQgdGhlIGRhdGUgaW4gc3lzdGVtIHRpbWV6b25lIHRvIHRoZSBzYW1lIGRhdGUgaW4gVVRDKzAwOjAwIHRpbWV6b25lLlxuICAvLyBUaGlzIGVuc3VyZXMgdGhhdCB3aGVuIFVUQyBmdW5jdGlvbnMgd2lsbCBiZSBpbXBsZW1lbnRlZCwgbG9jYWxlcyB3aWxsIGJlIGNvbXBhdGlibGUgd2l0aCB0aGVtLlxuICAvLyBTZWUgYW4gaXNzdWUgYWJvdXQgVVRDIGZ1bmN0aW9uczogaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2lzc3Vlcy8zNzZcblxuXG4gIHZhciB0aW1lem9uZU9mZnNldCA9IGdldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMob3JpZ2luYWxEYXRlKTtcbiAgdmFyIHV0Y0RhdGUgPSBzdWJNaWxsaXNlY29uZHMob3JpZ2luYWxEYXRlLCB0aW1lem9uZU9mZnNldCk7XG4gIHZhciBmb3JtYXR0ZXJPcHRpb25zID0ge1xuICAgIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZTogZmlyc3RXZWVrQ29udGFpbnNEYXRlLFxuICAgIHdlZWtTdGFydHNPbjogd2Vla1N0YXJ0c09uLFxuICAgIGxvY2FsZTogbG9jYWxlLFxuICAgIF9vcmlnaW5hbERhdGU6IG9yaWdpbmFsRGF0ZVxuICB9O1xuICB2YXIgcmVzdWx0ID0gZm9ybWF0U3RyLm1hdGNoKGxvbmdGb3JtYXR0aW5nVG9rZW5zUmVnRXhwKS5tYXAoZnVuY3Rpb24gKHN1YnN0cmluZykge1xuICAgIHZhciBmaXJzdENoYXJhY3RlciA9IHN1YnN0cmluZ1swXTtcblxuICAgIGlmIChmaXJzdENoYXJhY3RlciA9PT0gJ3AnIHx8IGZpcnN0Q2hhcmFjdGVyID09PSAnUCcpIHtcbiAgICAgIHZhciBsb25nRm9ybWF0dGVyID0gbG9uZ0Zvcm1hdHRlcnNbZmlyc3RDaGFyYWN0ZXJdO1xuICAgICAgcmV0dXJuIGxvbmdGb3JtYXR0ZXIoc3Vic3RyaW5nLCBsb2NhbGUuZm9ybWF0TG9uZyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN1YnN0cmluZztcbiAgfSkuam9pbignJykubWF0Y2goZm9ybWF0dGluZ1Rva2Vuc1JlZ0V4cCkubWFwKGZ1bmN0aW9uIChzdWJzdHJpbmcpIHtcbiAgICAvLyBSZXBsYWNlIHR3byBzaW5nbGUgcXVvdGUgY2hhcmFjdGVycyB3aXRoIG9uZSBzaW5nbGUgcXVvdGUgY2hhcmFjdGVyXG4gICAgaWYgKHN1YnN0cmluZyA9PT0gXCInJ1wiKSB7XG4gICAgICByZXR1cm4gXCInXCI7XG4gICAgfVxuXG4gICAgdmFyIGZpcnN0Q2hhcmFjdGVyID0gc3Vic3RyaW5nWzBdO1xuXG4gICAgaWYgKGZpcnN0Q2hhcmFjdGVyID09PSBcIidcIikge1xuICAgICAgcmV0dXJuIGNsZWFuRXNjYXBlZFN0cmluZyhzdWJzdHJpbmcpO1xuICAgIH1cblxuICAgIHZhciBmb3JtYXR0ZXIgPSBmb3JtYXR0ZXJzW2ZpcnN0Q2hhcmFjdGVyXTtcblxuICAgIGlmIChmb3JtYXR0ZXIpIHtcbiAgICAgIGlmICghKG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwICYmIG9wdGlvbnMudXNlQWRkaXRpb25hbFdlZWtZZWFyVG9rZW5zKSAmJiBpc1Byb3RlY3RlZFdlZWtZZWFyVG9rZW4oc3Vic3RyaW5nKSkge1xuICAgICAgICB0aHJvd1Byb3RlY3RlZEVycm9yKHN1YnN0cmluZywgZGlydHlGb3JtYXRTdHIsIFN0cmluZyhkaXJ0eURhdGUpKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCEob3B0aW9ucyAhPT0gbnVsbCAmJiBvcHRpb25zICE9PSB2b2lkIDAgJiYgb3B0aW9ucy51c2VBZGRpdGlvbmFsRGF5T2ZZZWFyVG9rZW5zKSAmJiBpc1Byb3RlY3RlZERheU9mWWVhclRva2VuKHN1YnN0cmluZykpIHtcbiAgICAgICAgdGhyb3dQcm90ZWN0ZWRFcnJvcihzdWJzdHJpbmcsIGRpcnR5Rm9ybWF0U3RyLCBTdHJpbmcoZGlydHlEYXRlKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmb3JtYXR0ZXIodXRjRGF0ZSwgc3Vic3RyaW5nLCBsb2NhbGUubG9jYWxpemUsIGZvcm1hdHRlck9wdGlvbnMpO1xuICAgIH1cblxuICAgIGlmIChmaXJzdENoYXJhY3Rlci5tYXRjaCh1bmVzY2FwZWRMYXRpbkNoYXJhY3RlclJlZ0V4cCkpIHtcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdGb3JtYXQgc3RyaW5nIGNvbnRhaW5zIGFuIHVuZXNjYXBlZCBsYXRpbiBhbHBoYWJldCBjaGFyYWN0ZXIgYCcgKyBmaXJzdENoYXJhY3RlciArICdgJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN1YnN0cmluZztcbiAgfSkuam9pbignJyk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIGNsZWFuRXNjYXBlZFN0cmluZyhpbnB1dCkge1xuICB2YXIgbWF0Y2hlZCA9IGlucHV0Lm1hdGNoKGVzY2FwZWRTdHJpbmdSZWdFeHApO1xuXG4gIGlmICghbWF0Y2hlZCkge1xuICAgIHJldHVybiBpbnB1dDtcbiAgfVxuXG4gIHJldHVybiBtYXRjaGVkWzFdLnJlcGxhY2UoZG91YmxlUXVvdGVSZWdFeHAsIFwiJ1wiKTtcbn0iLCJpbXBvcnQgXCIuL3RvZG9JdGVtLmNzc1wiO1xuaW1wb3J0IHBlbkljb24gZnJvbSBcIi4vcGVuY2lsLW91dGxpbmUuc3ZnXCI7XG5pbXBvcnQgYXJyb3dJY29uIGZyb20gXCIuL2Fycm93LXJpZ2h0LXRoaW4tY2lyY2xlLW91dGxpbmUuc3ZnXCI7XG5pbXBvcnQgZGVsZXRlSWNvbiBmcm9tIFwiLi9kZWxldGUuc3ZnXCI7XG5pbXBvcnQgeyBjcmVhdGVUb2RvRGV0YWlsc1VJIH0gZnJvbSBcIi4uL3RvZG9EZXRhaWxzL3RvZG9EZXRhaWxzXCI7XG5pbXBvcnQgeyBjcmVhdGVGb3JtVUkgfSBmcm9tIFwiLi4vdG9kb0Zvcm0vdG9kb0Zvcm1cIjtcbmltcG9ydCB7IGNyZWF0ZURlbENvbmZpcm1hdGlvblVJIH0gZnJvbSBcIi4uL2RlbENvbmZpcm1hdGlvbi9kZWxDb25maXJtYXRpb25cIjtcbmltcG9ydCB7IGNyZWF0ZVByb2plY3RTZWxlY3RvclVJIH0gZnJvbSBcIi4uL3Byb2plY3RTZWxlY3Rvci9wcm9qZWN0U2VsZWN0b3JcIjtcbmltcG9ydCAqIGFzIGRvbUNvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2RvbUNvbnRyb2xsZXIvZG9tQ29udHJvbGxlclwiO1xuaW1wb3J0ICogYXMgdXRpbGl0eUZ1bmN0aW9ucyBmcm9tIFwiLi4vLi4vdXRpbGl0eUZ1bmN0aW9ucy91dGlsaXR5RnVuY3Rpb25zXCI7XG5pbXBvcnQgZm9ybWF0IGZyb20gXCJkYXRlLWZucy9mb3JtYXRcIjtcblxuY29uc3QgdG9kb0l0ZW1GYWN0b3J5ID0gKGNoZWNrZWQsIHRpdGxlLCBub3RlcywgZHVlRGF0ZSwgcHJpb3JpdHksIGlkRnJvbURhdGEpID0+IHtcbiAgY29uc3QgaWQgPSBpZEZyb21EYXRhID8gaWRGcm9tRGF0YSA6IHV0aWxpdHlGdW5jdGlvbnMuZ2VuZXJhdGVSYW5kb21JRCh0aXRsZSk7XG5cbiAgLy8gR2V0dGluZ1xuICBjb25zdCBnZXRDaGVja2VkID0gKCkgPT4gY2hlY2tlZDtcbiAgY29uc3QgZ2V0VGl0bGUgPSAoKSA9PiB0aXRsZTtcbiAgY29uc3QgZ2V0Tm90ZXMgPSAoKSA9PiBub3RlcztcbiAgY29uc3QgZ2V0RHVlRGF0ZSA9ICgpID0+IGR1ZURhdGU7XG4gIGNvbnN0IGdldFByaW9yaXR5ID0gKCkgPT4gcHJpb3JpdHk7XG4gIGNvbnN0IGdldElkID0gKCkgPT4gaWQ7XG5cbiAgLy8gRWRpdGluZ1xuICBjb25zdCBlZGl0Q2hlY2tlZCA9ICgpID0+IHtcbiAgICBjaGVja2VkID0gIWNoZWNrZWQ7XG4gIH07XG4gIGNvbnN0IGVkaXRUaXRsZSA9IChuZXdUaXRsZSkgPT4ge1xuICAgIHRpdGxlID0gbmV3VGl0bGU7XG4gIH07XG4gIGNvbnN0IGVkaXROb3RlcyA9IChuZXdOb3RlcykgPT4ge1xuICAgIG5vdGVzID0gbmV3Tm90ZXM7XG4gIH07XG4gIGNvbnN0IGVkaXREdWVEYXRlID0gKG5ld0R1ZURhdGUpID0+IHtcbiAgICBkdWVEYXRlID0gbmV3RHVlRGF0ZTtcbiAgfTtcbiAgY29uc3QgZWRpdFByaW9yaXR5ID0gKG5ld1ByaW9yaXR5KSA9PiB7XG4gICAgcHJpb3JpdHkgPSBuZXdQcmlvcml0eTtcbiAgfTtcblxuICAvLyBHZW5lcmF0aW5nIGRhdGFcbiAgLy8gY29uc3QgZ2VuZXJhdGVUb2RvRGF0YSA9ICgpID0+ICh7XG4gIC8vICAgaWQsXG4gIC8vICAgY2hlY2tlZCxcbiAgLy8gICB0aXRsZSxcbiAgLy8gICBub3RlcyxcbiAgLy8gICBkdWVEYXRlLFxuICAvLyAgIHByaW9yaXR5XG4gIC8vIH0pO1xuXG4gIHJldHVybiB7XG4gICAgaWQsXG4gICAgZ2V0Q2hlY2tlZCxcbiAgICBnZXRUaXRsZSxcbiAgICBnZXROb3RlcyxcbiAgICBnZXREdWVEYXRlLFxuICAgIGdldFByaW9yaXR5LFxuICAgIGdldElkLFxuICAgIGVkaXRDaGVja2VkLFxuICAgIGVkaXRUaXRsZSxcbiAgICBlZGl0Tm90ZXMsXG4gICAgZWRpdER1ZURhdGUsXG4gICAgZWRpdFByaW9yaXR5XG4gIH07XG59O1xuXG5jb25zdCBjcmVhdGVUb2RvSXRlbVVJID0gKHRvZG9JdGVtLCBhcHAsIHByb2plY3RJZCkgPT4ge1xuICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb25zdCBsZWZ0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgY29uc3QgcmlnaHRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb25zdCBjaGVja2JveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIGNvbnN0IHN1cCA9ICBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3VwXCIpO1xuICBjb25zdCBkdWVEYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIGNvbnN0IGVkaXRJY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgY29uc3QgbW92ZUljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICBjb25zdCB0cmFzaEljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuXG4gIGNvbnN0IHByb2Nlc3NlZER1ZURhdGUgPSBmb3JtYXREdWVEYXRlKHRvZG9JdGVtLmdldER1ZURhdGUoKSk7XG5cbiAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJpdGVtLWNvbnRhaW5lclwiLCBcImZsZXhcIik7XG4gIGNvbnRhaW5lci5kYXRhc2V0LmlkID0gdG9kb0l0ZW0uZ2V0SWQoKTtcbiAgY29udGFpbmVyLmRhdGFzZXQucHJvamVjdElkID0gcHJvamVjdElkO1xuICBjb250YWluZXIuc3R5bGUuYm9yZGVyTGVmdCA9IGA1cHggc29saWQgdmFyKC0tJHt0b2RvSXRlbS5nZXRQcmlvcml0eSgpfS1wcmlvKWA7XG4gIGNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcnVwXCIsIChlKSA9PiB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBcbiAgICBkb21Db250cm9sbGVyLmFwcGVuZFRvUm9vdChjcmVhdGVUb2RvRGV0YWlsc1VJKHRvZG9JdGVtKSk7XG4gICAgZG9tQ29udHJvbGxlci5nZXRBcHBDb250YWluZXIoKS5jbGFzc0xpc3QuYWRkKFwiZGlzYWJsZWRcIik7XG4gIH0pO1xuXG4gIGxlZnRDb250YWluZXIuY2xhc3NMaXN0LmFkZChcIml0ZW0tbGVmdC1jb250YWluZXJcIiwgXCJmbGV4XCIsIFwiY2VudGVyXCIpO1xuXG4gIHJpZ2h0Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJpdGVtLXJpZ2h0LWNvbnRhaW5lclwiLCBcImZsZXhcIiwgXCJjZW50ZXJcIik7XG5cbiAgY2hlY2tib3guY2xhc3NMaXN0LmFkZChcIml0ZW0tY2hlY2tib3hcIiwgXCJmbGV4XCIsIFwiY2VudGVyXCIpO1xuICBpZiAodG9kb0l0ZW0uZ2V0Q2hlY2tlZCgpKSB7XG4gICAgY2hlY2tib3guY2xhc3NMaXN0LmFkZChcImNoZWNrZWRcIik7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJuby1wb2ludGVyLWV2ZW50c1wiKTtcbiAgfVxuICBjaGVja2JveC5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcnVwXCIsIChlKSA9PiB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgIGNoZWNrYm94LmNsYXNzTGlzdC50b2dnbGUoXCJjaGVja2VkXCIpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QudG9nZ2xlKFwibm8tcG9pbnRlci1ldmVudHNcIik7XG4gICAgXG4gICAgdG9kb0l0ZW0uZWRpdENoZWNrZWQoKTtcbiAgICB1dGlsaXR5RnVuY3Rpb25zLnVwZGF0ZUxvY2FsU3RvcmFnZShhcHApO1xuICB9KTtcblxuICB0aXRsZS5jbGFzc0xpc3QuYWRkKFwiaXRlbS10aXRsZVwiKTtcbiAgdGl0bGUuaW5uZXJUZXh0ID0gdG9kb0l0ZW0uZ2V0VGl0bGUoKTtcblxuICBzdXAuaW5uZXJUZXh0ID0gcHJvY2Vzc2VkRHVlRGF0ZS5zbGljZSgtNiwgLTQpO1xuXG4gIGR1ZURhdGUuY2xhc3NMaXN0LmFkZChcIml0ZW0tZHVlLWRhdGVcIik7XG4gIGR1ZURhdGUuYXBwZW5kKHByb2Nlc3NlZER1ZURhdGUuc2xpY2UoMCwgLTYpLCBzdXAsIHByb2Nlc3NlZER1ZURhdGUuc2xpY2UoLTQpKTtcblxuICBlZGl0SWNvbi5jbGFzc0xpc3QuYWRkKFwiaXRlbS1lZGl0LWljb25cIik7XG4gIGVkaXRJY29uLnRpdGxlID0gXCJFZGl0IFRvZG9cIjtcbiAgZWRpdEljb24uc3JjID0gcGVuSWNvbjtcbiAgZWRpdEljb24uYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCAoZSkgPT4ge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgXG4gICAgY29uc3QgbmF2YmFyTW9kZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5uYXZiYXItY29udGFpbmVyW2RhdGEtbW9kZV1gKS5kYXRhc2V0Lm1vZGU7XG4gICAgY29uc3QgcHJvamVjdElkID0gY29udGFpbmVyLmRhdGFzZXQucHJvamVjdElkID09PSBcIm51bGxcIiA/IG51bGwgOiBjb250YWluZXIuZGF0YXNldC5wcm9qZWN0SWQ7XG5cbiAgICBkb21Db250cm9sbGVyLmFwcGVuZFRvUm9vdChjcmVhdGVGb3JtVUkoYXBwLCBuYXZiYXJNb2RlLCBcImVkaXQtdG9kb1wiLCB0b2RvSXRlbSwgbnVsbCwgcHJvamVjdElkKSk7XG4gICAgZG9tQ29udHJvbGxlci5nZXRBcHBDb250YWluZXIoKS5jbGFzc0xpc3QuYWRkKFwiZGlzYWJsZWRcIik7XG4gIH0pXG5cbiAgbW92ZUljb24uY2xhc3NMaXN0LmFkZChcIml0ZW0tbW92ZS1pY29uXCIpO1xuICBtb3ZlSWNvbi50aXRsZSA9IFwiTW92ZSB0byBQcm9qZWN0XCI7XG4gIG1vdmVJY29uLnNyYyA9IGFycm93SWNvbjtcbiAgbW92ZUljb24uYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCAoZSkgPT4ge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgXG4gICAgZG9tQ29udHJvbGxlci5hcHBlbmRUb1Jvb3QoY3JlYXRlUHJvamVjdFNlbGVjdG9yVUkoYXBwLCB0b2RvSXRlbSkpO1xuICAgIGRvbUNvbnRyb2xsZXIuZ2V0QXBwQ29udGFpbmVyKCkuY2xhc3NMaXN0LmFkZChcImRpc2FibGVkXCIpO1xuICB9KVxuXG4gIHRyYXNoSWNvbi5jbGFzc0xpc3QuYWRkKFwiaXRlbS10cmFzaC1pY29uXCIpO1xuICB0cmFzaEljb24udGl0bGUgPSBcIkRlbGV0ZSBUb2RvXCI7XG4gIHRyYXNoSWNvbi5zcmMgPSBkZWxldGVJY29uO1xuICB0cmFzaEljb24uYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCAoZSkgPT4ge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgZG9tQ29udHJvbGxlci5hcHBlbmRUb1Jvb3QoY3JlYXRlRGVsQ29uZmlybWF0aW9uVUkoYXBwLCBcInRvZG9cIiwgdG9kb0l0ZW0sIGNvbnRhaW5lcikpO1xuICAgIGRvbUNvbnRyb2xsZXIuZ2V0QXBwQ29udGFpbmVyKCkuY2xhc3NMaXN0LmFkZChcImRpc2FibGVkXCIpO1xuICB9KVxuXG4gIGxlZnRDb250YWluZXIuYXBwZW5kKGNoZWNrYm94LCB0aXRsZSk7XG4gIHJpZ2h0Q29udGFpbmVyLmFwcGVuZChkdWVEYXRlLCBlZGl0SWNvbiwgbW92ZUljb24sIHRyYXNoSWNvbik7XG4gIGNvbnRhaW5lci5hcHBlbmQobGVmdENvbnRhaW5lciwgcmlnaHRDb250YWluZXIpO1xuXG4gIHJldHVybiBjb250YWluZXI7XG59XG5cbi8vIEZvcm1hdCBcIjIwMjItMTItMzBcIiB0byBcIjMwdGggRGVjXCJcbmNvbnN0IGZvcm1hdER1ZURhdGUgPSAoZHVlRGF0ZSkgPT4ge1xuICBjb25zdCBbIHksIG0sIGQgXSA9IGR1ZURhdGUuc3BsaXQoXCItXCIpO1xuICBjb25zdCBwcm9jZXNzZWRNID0gTnVtYmVyKG0pIC0gMTtcblxuICByZXR1cm4gZm9ybWF0KG5ldyBEYXRlKHksIHByb2Nlc3NlZE0sIGQpLCAnZG8gTU1NJyk7XG59XG5cbmV4cG9ydCB7IHRvZG9JdGVtRmFjdG9yeSwgY3JlYXRlVG9kb0l0ZW1VSSB9OyIsImltcG9ydCBcIi4vdG9kb0RldGFpbHMuY3NzXCI7XG5pbXBvcnQgKiBhcyBkb21Db250cm9sbGVyIGZyb20gXCIuLi8uLi9kb21Db250cm9sbGVyL2RvbUNvbnRyb2xsZXJcIjtcblxuY29uc3QgY3JlYXRlVG9kb0RldGFpbHNVSSA9ICh7IGdldFByaW9yaXR5LCBnZXREdWVEYXRlLCBnZXRUaXRsZSwgZ2V0Tm90ZXMgfSkgPT4ge1xuICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb25zdCB0b3BDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb25zdCBib3R0b21Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb25zdCBwcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IGR1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgY29uc3Qgbm90ZXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgY29uc3QgY2xvc2VCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuXG4gIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiZGV0YWlscy1jb250YWluZXJcIik7XG5cbiAgdG9wQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJkZXRhaWxzLXRvcC1jb250YWluZXJcIiwgXCJmbGV4XCIpO1xuXG4gIGJvdHRvbUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiZGV0YWlscy1ib3R0b20tY29udGFpbmVyXCIpO1xuXG4gIHByaW9yaXR5LmNsYXNzTGlzdC5hZGQoXCJkZXRhaWxzLXByaW9yaXR5XCIsIFwiZmxleFwiLCBcImNlbnRlclwiKTtcbiAgaWYgKGdldFByaW9yaXR5KCkgPT09IFwibG93XCIpIHtcbiAgICBwcmlvcml0eS5jbGFzc0xpc3QuYWRkKFwiZGV0YWlscy1wcmlvcml0eS1sXCIpO1xuICB9IGVsc2UgaWYgKGdldFByaW9yaXR5KCkgPT09IFwibWVkaXVtXCIpIHtcbiAgICBwcmlvcml0eS5jbGFzc0xpc3QuYWRkKFwiZGV0YWlscy1wcmlvcml0eS1tXCIpO1xuICB9IGVsc2Uge1xuICAgIHByaW9yaXR5LmNsYXNzTGlzdC5hZGQoXCJkZXRhaWxzLXByaW9yaXR5LWhcIik7XG4gIH1cbiAgcHJpb3JpdHkuaW5uZXJUZXh0ID0gZ2V0UHJpb3JpdHkoKVswXS50b1VwcGVyQ2FzZSgpICsgZ2V0UHJpb3JpdHkoKS5zbGljZSgxKTtcblxuICBkdWVEYXRlLmNsYXNzTGlzdC5hZGQoXCJkZXRhaWxzLWR1ZS1kYXRlXCIsIFwiZmxleFwiLCBcImNlbnRlclwiKTtcbiAgZHVlRGF0ZS5pbm5lclRleHQgPSBgRHVlOiAke2dldER1ZURhdGUoKX1gO1xuXG4gIHRpdGxlLmNsYXNzTGlzdC5hZGQoXCJkZXRhaWxzLXRpdGxlXCIsIFwiZmxleFwiLCAnY2VudGVyJyk7XG4gIHRpdGxlLmlubmVyVGV4dCA9IGdldFRpdGxlKCk7XG5cbiAgbm90ZXMuY2xhc3NMaXN0LmFkZChcImRldGFpbHMtbm90ZXNcIik7XG4gIG5vdGVzLmlubmVyVGV4dCA9IGdldE5vdGVzKCkgfHwgXCJObyBOb3Rlc1wiO1xuXG4gIGNsb3NlQnRuLmNsYXNzTGlzdC5hZGQoXCJkZXRhaWxzLWNsb3NlLWJ0blwiKTtcbiAgY2xvc2VCdG4uaW5uZXJUZXh0ID0gXCJDTE9TRVwiO1xuICBjbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcnVwXCIsICgpID0+IHtcbiAgICBjb250YWluZXIucmVtb3ZlKCk7XG4gICAgZG9tQ29udHJvbGxlci5nZXRBcHBDb250YWluZXIoKS5jbGFzc0xpc3QucmVtb3ZlKFwiZGlzYWJsZWRcIik7XG4gIH0pXG5cbiAgdG9wQ29udGFpbmVyLmFwcGVuZChwcmlvcml0eSwgZHVlRGF0ZSk7XG4gIGJvdHRvbUNvbnRhaW5lci5hcHBlbmQodGl0bGUsIG5vdGVzLCBjbG9zZUJ0bik7XG4gIGNvbnRhaW5lci5hcHBlbmQodG9wQ29udGFpbmVyLCBib3R0b21Db250YWluZXIpO1xuXG4gIHJldHVybiBjb250YWluZXI7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVRvZG9EZXRhaWxzVUkgfTsiLCJpbXBvcnQgXCIuL3Byb2plY3RTZWxlY3Rvci5jc3NcIjtcbmltcG9ydCAqIGFzIGRvbUNvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2RvbUNvbnRyb2xsZXIvZG9tQ29udHJvbGxlclwiO1xuaW1wb3J0IHsgdXBkYXRlTG9jYWxTdG9yYWdlIH0gZnJvbSBcIi4uLy4uL3V0aWxpdHlGdW5jdGlvbnMvdXRpbGl0eUZ1bmN0aW9uc1wiO1xuXG5jb25zdCBjcmVhdGVQcm9qZWN0U2VsZWN0b3JVSSA9IChhcHAsIHRvZG9JdGVtKSA9PiB7XG4gIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIGNvbnN0IHByb2plY3RzQm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgY29uc3QgYnRuc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IGNhbmNlbEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gIGNvbnN0IG9rQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcblxuICBjb250YWluZXIuY2xhc3NMaXN0LmFkZChcInByb2plY3Qtc2VsZWN0b3ItY29udGFpbmVyXCIpO1xuXG4gIHRpdGxlLmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0LXNlbGVjdG9yLXRpdGxlXCIsIFwiZmxleFwiLCBcImNlbnRlclwiKTtcbiAgdGl0bGUuaW5uZXJUZXh0ID0gXCJBZGQgVG8gUHJvamVjdFwiO1xuXG4gIHByb2plY3RzQm94LmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0LXNlbGVjdG9yLXByb2plY3RzLWJveFwiLCBcImZsZXgtY29sdW1uXCIpO1xuXG4gIGJ0bnNDb250YWluZXIuY2xhc3NMaXN0LmFkZChcInByb2plY3Qtc2VsZWN0b3ItYnRucy1jb250YWluZXJcIiwgXCJmbGV4XCIsIFwiY2VudGVyXCIpO1xuXG4gIGNhbmNlbEJ0bi5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC1zZWxlY3Rvci1jYW5jZWwtYnRuXCIpO1xuICBjYW5jZWxCdG4uaW5uZXJUZXh0ID0gXCJDQU5DRUxcIjtcbiAgY2FuY2VsQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVydXBcIiwgKCkgPT4ge1xuICAgIGNvbnRhaW5lci5yZW1vdmUoKTtcbiAgICBkb21Db250cm9sbGVyLmdldEFwcENvbnRhaW5lcigpLmNsYXNzTGlzdC5yZW1vdmUoXCJkaXNhYmxlZFwiKTtcbiAgfSlcblxuICBva0J0bi5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC1zZWxlY3Rvci1vay1idG5cIik7XG4gIG9rQnRuLmlubmVyVGV4dCA9IFwiT0tcIjtcbiAgb2tCdG4uYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCAoKSA9PiB7XG4gICAgY29uc3Qgc2VsZWN0ZWRQcm9qZWN0cyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5wcm9qZWN0LW9wdGlvbi5zZWxlY3RlZFwiKSk7XG5cbiAgICBpZiAoIXNlbGVjdGVkUHJvamVjdHMubGVuZ3RoKSB7XG4gICAgICBkb21Db250cm9sbGVyLmdldEFwcENvbnRhaW5lcigpLmNsYXNzTGlzdC5yZW1vdmUoXCJkaXNhYmxlZFwiKTtcbiAgICAgIGNvbnRhaW5lci5yZW1vdmUoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBzZWxlY3RlZFByb2plY3RzSWQgPSBzZWxlY3RlZFByb2plY3RzLm1hcChwcm9qZWN0ID0+IHByb2plY3QuZGF0YXNldC5pZCk7XG4gICAgY29uc29sZS5sb2coXCJpZHM6XCIsIHNlbGVjdGVkUHJvamVjdHNJZCk7XG5cbiAgICBzZWxlY3RlZFByb2plY3RzSWQuZm9yRWFjaChpZCA9PiB7XG4gICAgICBhcHAuZ2V0UHJvamVjdHNBcnIoKS5mb3JFYWNoKHByb2plY3QgPT4ge1xuICAgICAgICBpZiAoaWQgPT09IHByb2plY3QuZ2V0SWQoKSkge1xuICAgICAgICAgIHByb2plY3QucHVzaFRvVG9kb3NBcnIodG9kb0l0ZW0pO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0pO1xuXG4gICAgdXBkYXRlTG9jYWxTdG9yYWdlKGFwcCk7XG4gICAgZG9tQ29udHJvbGxlci5nZXRBcHBDb250YWluZXIoKS5jbGFzc0xpc3QucmVtb3ZlKFwiZGlzYWJsZWRcIik7XG4gICAgY29udGFpbmVyLnJlbW92ZSgpO1xuICB9KVxuXG4gIGNvbnN0IGZpbHRlcmVkUHJvamVjdHMgPSBhcHAuZ2V0UHJvamVjdHNBcnIoKS5maWx0ZXIocHJvamVjdCA9PiB7XG4gICAgcmV0dXJuIHByb2plY3QuZ2V0VG9kb3NBcnIoKS5ldmVyeSh0b2RvID0+IHRvZG8uZ2V0SWQoKSAhPT0gdG9kb0l0ZW0uZ2V0SWQoKSk7XG4gIH0pO1xuXG4gIGNvbnN0IHByb2plY3RPcHRpb25VSXMgPSBmaWx0ZXJlZFByb2plY3RzLm1hcChwcm9qZWN0ID0+IGNyZWF0ZVByb2plY3RPcHRpb25VSShwcm9qZWN0KSk7XG5cbiAgaWYgKCFwcm9qZWN0T3B0aW9uVUlzLmxlbmd0aCkge1xuICAgIHByb2plY3RzQm94LmFwcGVuZChcIk5vIFByb2plY3RzXCIpO1xuICB9IGVsc2Uge1xuICAgIHByb2plY3RzQm94LmFwcGVuZCguLi5wcm9qZWN0T3B0aW9uVUlzKTtcbiAgfVxuXG4gIGJ0bnNDb250YWluZXIuYXBwZW5kKGNhbmNlbEJ0biwgb2tCdG4pO1xuICBjb250YWluZXIuYXBwZW5kKHRpdGxlLCBwcm9qZWN0c0JveCwgYnRuc0NvbnRhaW5lcik7XG5cbiAgcmV0dXJuIGNvbnRhaW5lcjtcbn1cblxuY29uc3QgY3JlYXRlUHJvamVjdE9wdGlvblVJID0gKHByb2plY3QpID0+IHtcbiAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgY29uc3QgY2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC1vcHRpb25cIiwgXCJmbGV4XCIsIFwiY2VudGVyXCIpO1xuICBjb250YWluZXIuZGF0YXNldC5pZCA9IHByb2plY3QuZ2V0SWQoKTtcbiAgY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVydXBcIiwgKCkgPT4ge1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QudG9nZ2xlKFwic2VsZWN0ZWRcIik7XG4gIH0pXG5cbiAgdGl0bGUuY2xhc3NMaXN0LmFkZChcInByb2plY3Qtb3B0aW9uLXRpdGxlXCIpO1xuICB0aXRsZS5pbm5lclRleHQgPSBwcm9qZWN0LmdldFRpdGxlKCk7XG5cbiAgY2hlY2tib3guY2xhc3NMaXN0LmFkZChcInByb2plY3Qtb3B0aW9uLWNoZWNrYm94XCIpO1xuXG4gIGNvbnRhaW5lci5hcHBlbmQodGl0bGUsIGNoZWNrYm94KTtcblxuICByZXR1cm4gY29udGFpbmVyO1xufVxuXG5leHBvcnQgeyBjcmVhdGVQcm9qZWN0U2VsZWN0b3JVSSB9OyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9wcm9qZWN0LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcHJvamVjdC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaG9sZGVyQm94LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaG9sZGVyQm94LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB0b0RhdGUgZnJvbSBcIi4uL3RvRGF0ZS9pbmRleC5qc1wiO1xuaW1wb3J0IHRvSW50ZWdlciBmcm9tIFwiLi4vX2xpYi90b0ludGVnZXIvaW5kZXguanNcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBnZXREZWZhdWx0T3B0aW9ucyB9IGZyb20gXCIuLi9fbGliL2RlZmF1bHRPcHRpb25zL2luZGV4LmpzXCI7XG4vKipcbiAqIEBuYW1lIHN0YXJ0T2ZXZWVrXG4gKiBAY2F0ZWdvcnkgV2VlayBIZWxwZXJzXG4gKiBAc3VtbWFyeSBSZXR1cm4gdGhlIHN0YXJ0IG9mIGEgd2VlayBmb3IgdGhlIGdpdmVuIGRhdGUuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBSZXR1cm4gdGhlIHN0YXJ0IG9mIGEgd2VlayBmb3IgdGhlIGdpdmVuIGRhdGUuXG4gKiBUaGUgcmVzdWx0IHdpbGwgYmUgaW4gdGhlIGxvY2FsIHRpbWV6b25lLlxuICpcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGUgLSB0aGUgb3JpZ2luYWwgZGF0ZVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIGFuIG9iamVjdCB3aXRoIG9wdGlvbnMuXG4gKiBAcGFyYW0ge0xvY2FsZX0gW29wdGlvbnMubG9jYWxlPWRlZmF1bHRMb2NhbGVdIC0gdGhlIGxvY2FsZSBvYmplY3QuIFNlZSBbTG9jYWxlXXtAbGluayBodHRwczovL2RhdGUtZm5zLm9yZy9kb2NzL0xvY2FsZX1cbiAqIEBwYXJhbSB7MHwxfDJ8M3w0fDV8Nn0gW29wdGlvbnMud2Vla1N0YXJ0c09uPTBdIC0gdGhlIGluZGV4IG9mIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsgKDAgLSBTdW5kYXkpXG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIHN0YXJ0IG9mIGEgd2Vla1xuICogQHRocm93cyB7VHlwZUVycm9yfSAxIGFyZ3VtZW50IHJlcXVpcmVkXG4gKiBAdGhyb3dzIHtSYW5nZUVycm9yfSBgb3B0aW9ucy53ZWVrU3RhcnRzT25gIG11c3QgYmUgYmV0d2VlbiAwIGFuZCA2XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFRoZSBzdGFydCBvZiBhIHdlZWsgZm9yIDIgU2VwdGVtYmVyIDIwMTQgMTE6NTU6MDA6XG4gKiBjb25zdCByZXN1bHQgPSBzdGFydE9mV2VlayhuZXcgRGF0ZSgyMDE0LCA4LCAyLCAxMSwgNTUsIDApKVxuICogLy89PiBTdW4gQXVnIDMxIDIwMTQgMDA6MDA6MDBcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSWYgdGhlIHdlZWsgc3RhcnRzIG9uIE1vbmRheSwgdGhlIHN0YXJ0IG9mIHRoZSB3ZWVrIGZvciAyIFNlcHRlbWJlciAyMDE0IDExOjU1OjAwOlxuICogY29uc3QgcmVzdWx0ID0gc3RhcnRPZldlZWsobmV3IERhdGUoMjAxNCwgOCwgMiwgMTEsIDU1LCAwKSwgeyB3ZWVrU3RhcnRzT246IDEgfSlcbiAqIC8vPT4gTW9uIFNlcCAwMSAyMDE0IDAwOjAwOjAwXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3RhcnRPZldlZWsoZGlydHlEYXRlLCBvcHRpb25zKSB7XG4gIHZhciBfcmVmLCBfcmVmMiwgX3JlZjMsIF9vcHRpb25zJHdlZWtTdGFydHNPbiwgX29wdGlvbnMkbG9jYWxlLCBfb3B0aW9ucyRsb2NhbGUkb3B0aW8sIF9kZWZhdWx0T3B0aW9ucyRsb2NhbCwgX2RlZmF1bHRPcHRpb25zJGxvY2FsMjtcblxuICByZXF1aXJlZEFyZ3MoMSwgYXJndW1lbnRzKTtcbiAgdmFyIGRlZmF1bHRPcHRpb25zID0gZ2V0RGVmYXVsdE9wdGlvbnMoKTtcbiAgdmFyIHdlZWtTdGFydHNPbiA9IHRvSW50ZWdlcigoX3JlZiA9IChfcmVmMiA9IChfcmVmMyA9IChfb3B0aW9ucyR3ZWVrU3RhcnRzT24gPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMud2Vla1N0YXJ0c09uKSAhPT0gbnVsbCAmJiBfb3B0aW9ucyR3ZWVrU3RhcnRzT24gIT09IHZvaWQgMCA/IF9vcHRpb25zJHdlZWtTdGFydHNPbiA6IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9vcHRpb25zJGxvY2FsZSA9IG9wdGlvbnMubG9jYWxlKSA9PT0gbnVsbCB8fCBfb3B0aW9ucyRsb2NhbGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfb3B0aW9ucyRsb2NhbGUkb3B0aW8gPSBfb3B0aW9ucyRsb2NhbGUub3B0aW9ucykgPT09IG51bGwgfHwgX29wdGlvbnMkbG9jYWxlJG9wdGlvID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfb3B0aW9ucyRsb2NhbGUkb3B0aW8ud2Vla1N0YXJ0c09uKSAhPT0gbnVsbCAmJiBfcmVmMyAhPT0gdm9pZCAwID8gX3JlZjMgOiBkZWZhdWx0T3B0aW9ucy53ZWVrU3RhcnRzT24pICE9PSBudWxsICYmIF9yZWYyICE9PSB2b2lkIDAgPyBfcmVmMiA6IChfZGVmYXVsdE9wdGlvbnMkbG9jYWwgPSBkZWZhdWx0T3B0aW9ucy5sb2NhbGUpID09PSBudWxsIHx8IF9kZWZhdWx0T3B0aW9ucyRsb2NhbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kZWZhdWx0T3B0aW9ucyRsb2NhbDIgPSBfZGVmYXVsdE9wdGlvbnMkbG9jYWwub3B0aW9ucykgPT09IG51bGwgfHwgX2RlZmF1bHRPcHRpb25zJGxvY2FsMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2RlZmF1bHRPcHRpb25zJGxvY2FsMi53ZWVrU3RhcnRzT24pICE9PSBudWxsICYmIF9yZWYgIT09IHZvaWQgMCA/IF9yZWYgOiAwKTsgLy8gVGVzdCBpZiB3ZWVrU3RhcnRzT24gaXMgYmV0d2VlbiAwIGFuZCA2IF9hbmRfIGlzIG5vdCBOYU5cblxuICBpZiAoISh3ZWVrU3RhcnRzT24gPj0gMCAmJiB3ZWVrU3RhcnRzT24gPD0gNikpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignd2Vla1N0YXJ0c09uIG11c3QgYmUgYmV0d2VlbiAwIGFuZCA2IGluY2x1c2l2ZWx5Jyk7XG4gIH1cblxuICB2YXIgZGF0ZSA9IHRvRGF0ZShkaXJ0eURhdGUpO1xuICB2YXIgZGF5ID0gZGF0ZS5nZXREYXkoKTtcbiAgdmFyIGRpZmYgPSAoZGF5IDwgd2Vla1N0YXJ0c09uID8gNyA6IDApICsgZGF5IC0gd2Vla1N0YXJ0c09uO1xuICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgLSBkaWZmKTtcbiAgZGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgcmV0dXJuIGRhdGU7XG59IiwiaW1wb3J0IHN0YXJ0T2ZXZWVrIGZyb20gXCIuLi9zdGFydE9mV2Vlay9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcblxuLyoqXG4gKiBAbmFtZSBpc1NhbWVXZWVrXG4gKiBAY2F0ZWdvcnkgV2VlayBIZWxwZXJzXG4gKiBAc3VtbWFyeSBBcmUgdGhlIGdpdmVuIGRhdGVzIGluIHRoZSBzYW1lIHdlZWsgKGFuZCBtb250aCBhbmQgeWVhcik/XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBBcmUgdGhlIGdpdmVuIGRhdGVzIGluIHRoZSBzYW1lIHdlZWsgKGFuZCBtb250aCBhbmQgeWVhcik/XG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZUxlZnQgLSB0aGUgZmlyc3QgZGF0ZSB0byBjaGVja1xuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZVJpZ2h0IC0gdGhlIHNlY29uZCBkYXRlIHRvIGNoZWNrXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gYW4gb2JqZWN0IHdpdGggb3B0aW9ucy5cbiAqIEBwYXJhbSB7TG9jYWxlfSBbb3B0aW9ucy5sb2NhbGU9ZGVmYXVsdExvY2FsZV0gLSB0aGUgbG9jYWxlIG9iamVjdC4gU2VlIFtMb2NhbGVde0BsaW5rIGh0dHBzOi8vZGF0ZS1mbnMub3JnL2RvY3MvTG9jYWxlfVxuICogQHBhcmFtIHswfDF8MnwzfDR8NXw2fSBbb3B0aW9ucy53ZWVrU3RhcnRzT249MF0gLSB0aGUgaW5kZXggb2YgdGhlIGZpcnN0IGRheSBvZiB0aGUgd2VlayAoMCAtIFN1bmRheSlcbiAqIEByZXR1cm5zIHtCb29sZWFufSB0aGUgZGF0ZXMgYXJlIGluIHRoZSBzYW1lIHdlZWsgKGFuZCBtb250aCBhbmQgeWVhcilcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMiBhcmd1bWVudHMgcmVxdWlyZWRcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IGBvcHRpb25zLndlZWtTdGFydHNPbmAgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIDZcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQXJlIDMxIEF1Z3VzdCAyMDE0IGFuZCA0IFNlcHRlbWJlciAyMDE0IGluIHRoZSBzYW1lIHdlZWs/XG4gKiBjb25zdCByZXN1bHQgPSBpc1NhbWVXZWVrKG5ldyBEYXRlKDIwMTQsIDcsIDMxKSwgbmV3IERhdGUoMjAxNCwgOCwgNCkpXG4gKiAvLz0+IHRydWVcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSWYgd2VlayBzdGFydHMgd2l0aCBNb25kYXksXG4gKiAvLyBhcmUgMzEgQXVndXN0IDIwMTQgYW5kIDQgU2VwdGVtYmVyIDIwMTQgaW4gdGhlIHNhbWUgd2Vlaz9cbiAqIGNvbnN0IHJlc3VsdCA9IGlzU2FtZVdlZWsobmV3IERhdGUoMjAxNCwgNywgMzEpLCBuZXcgRGF0ZSgyMDE0LCA4LCA0KSwge1xuICogICB3ZWVrU3RhcnRzT246IDFcbiAqIH0pXG4gKiAvLz0+IGZhbHNlXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEFyZSAxIEphbnVhcnkgMjAxNCBhbmQgMSBKYW51YXJ5IDIwMTUgaW4gdGhlIHNhbWUgd2Vlaz9cbiAqIGNvbnN0IHJlc3VsdCA9IGlzU2FtZVdlZWsobmV3IERhdGUoMjAxNCwgMCwgMSksIG5ldyBEYXRlKDIwMTUsIDAsIDEpKVxuICogLy89PiBmYWxzZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc1NhbWVXZWVrKGRpcnR5RGF0ZUxlZnQsIGRpcnR5RGF0ZVJpZ2h0LCBvcHRpb25zKSB7XG4gIHJlcXVpcmVkQXJncygyLCBhcmd1bWVudHMpO1xuICB2YXIgZGF0ZUxlZnRTdGFydE9mV2VlayA9IHN0YXJ0T2ZXZWVrKGRpcnR5RGF0ZUxlZnQsIG9wdGlvbnMpO1xuICB2YXIgZGF0ZVJpZ2h0U3RhcnRPZldlZWsgPSBzdGFydE9mV2VlayhkaXJ0eURhdGVSaWdodCwgb3B0aW9ucyk7XG4gIHJldHVybiBkYXRlTGVmdFN0YXJ0T2ZXZWVrLmdldFRpbWUoKSA9PT0gZGF0ZVJpZ2h0U3RhcnRPZldlZWsuZ2V0VGltZSgpO1xufSIsImltcG9ydCBpc1NhbWVXZWVrIGZyb20gXCIuLi9pc1NhbWVXZWVrL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuXG4vKipcbiAqIEBuYW1lIGlzVGhpc1dlZWtcbiAqIEBjYXRlZ29yeSBXZWVrIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IElzIHRoZSBnaXZlbiBkYXRlIGluIHRoZSBzYW1lIHdlZWsgYXMgdGhlIGN1cnJlbnQgZGF0ZT9cbiAqIEBwdXJlIGZhbHNlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBJcyB0aGUgZ2l2ZW4gZGF0ZSBpbiB0aGUgc2FtZSB3ZWVrIGFzIHRoZSBjdXJyZW50IGRhdGU/XG4gKlxuICogPiDimqDvuI8gUGxlYXNlIG5vdGUgdGhhdCB0aGlzIGZ1bmN0aW9uIGlzIG5vdCBwcmVzZW50IGluIHRoZSBGUCBzdWJtb2R1bGUgYXNcbiAqID4gaXQgdXNlcyBgRGF0ZS5ub3coKWAgaW50ZXJuYWxseSBoZW5jZSBpbXB1cmUgYW5kIGNhbid0IGJlIHNhZmVseSBjdXJyaWVkLlxuICpcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGUgLSB0aGUgZGF0ZSB0byBjaGVja1xuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIHRoZSBvYmplY3Qgd2l0aCBvcHRpb25zXG4gKiBAcGFyYW0ge0xvY2FsZX0gW29wdGlvbnMubG9jYWxlPWRlZmF1bHRMb2NhbGVdIC0gdGhlIGxvY2FsZSBvYmplY3QuIFNlZSBbTG9jYWxlXXtAbGluayBodHRwczovL2RhdGUtZm5zLm9yZy9kb2NzL0xvY2FsZX1cbiAqIEBwYXJhbSB7MHwxfDJ8M3w0fDV8Nn0gW29wdGlvbnMud2Vla1N0YXJ0c09uPTBdIC0gdGhlIGluZGV4IG9mIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsgKDAgLSBTdW5kYXkpXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gdGhlIGRhdGUgaXMgaW4gdGhpcyB3ZWVrXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDEgYXJndW1lbnQgcmVxdWlyZWRcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IGBvcHRpb25zLndlZWtTdGFydHNPbmAgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIDZcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gSWYgdG9kYXkgaXMgMjUgU2VwdGVtYmVyIDIwMTQsIGlzIDIxIFNlcHRlbWJlciAyMDE0IGluIHRoaXMgd2Vlaz9cbiAqIGNvbnN0IHJlc3VsdCA9IGlzVGhpc1dlZWsobmV3IERhdGUoMjAxNCwgOCwgMjEpKVxuICogLy89PiB0cnVlXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIElmIHRvZGF5IGlzIDI1IFNlcHRlbWJlciAyMDE0IGFuZCB3ZWVrIHN0YXJ0cyB3aXRoIE1vbmRheVxuICogLy8gaXMgMjEgU2VwdGVtYmVyIDIwMTQgaW4gdGhpcyB3ZWVrP1xuICogY29uc3QgcmVzdWx0ID0gaXNUaGlzV2VlayhuZXcgRGF0ZSgyMDE0LCA4LCAyMSksIHsgd2Vla1N0YXJ0c09uOiAxIH0pXG4gKiAvLz0+IGZhbHNlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzVGhpc1dlZWsoZGlydHlEYXRlLCBvcHRpb25zKSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICByZXR1cm4gaXNTYW1lV2VlayhkaXJ0eURhdGUsIERhdGUubm93KCksIG9wdGlvbnMpO1xufSIsImltcG9ydCBcIi4vaG9sZGVyQm94LmNzc1wiO1xuaW1wb3J0IHsgY3JlYXRlVG9kb0l0ZW1VSSB9IGZyb20gXCIuLi90b2RvSXRlbS90b2RvSXRlbVwiO1xuaW1wb3J0IHsgY3JlYXRlUHJvamVjdFVJIH0gZnJvbSBcIi4uL3Byb2plY3QvcHJvamVjdFwiO1xuaW1wb3J0ICogYXMgdXRpbGl0eUZ1bmN0aW9ucyBmcm9tIFwiLi4vLi4vdXRpbGl0eUZ1bmN0aW9ucy91dGlsaXR5RnVuY3Rpb25zXCI7XG5pbXBvcnQgKiBhcyBkb21Db250cm9sbGVyIGZyb20gXCIuLi8uLi9kb21Db250cm9sbGVyL2RvbUNvbnRyb2xsZXJcIjtcbmltcG9ydCBjb21wYXJlQXNjIGZyb20gXCJkYXRlLWZucy9jb21wYXJlQXNjXCI7XG5pbXBvcnQgaXNUaGlzV2VlayBmcm9tIFwiZGF0ZS1mbnMvaXNUaGlzV2Vla1wiO1xuXG5jb25zdCBjcmVhdGVIb2xkZXJCb3hVSSA9IChhcHAsIHR5cGUsIGFyciwgcHJvamVjdElkKSA9PiB7XG4gIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJob2xkZXItYm94LWNvbnRhaW5lclwiLCBcImZsZXgtY29sdW1uXCIpO1xuXG4gIGlmIChkb21Db250cm9sbGVyLmdldENvbnRlbnRCb3goKSkge1xuICAgIGRvbUNvbnRyb2xsZXIuZ2V0Q29udGVudEJveCgpLmxhc3RFbGVtZW50Q2hpbGQucmVtb3ZlKCk7XG4gIH1cblxuICBpZiAoIWFyci5sZW5ndGggJiYgdHlwZSA9PT0gXCJwcm9qZWN0c1wiKSB7XG4gICAgY29udGFpbmVyLmFwcGVuZChcIk5vIFByb2plY3RzXCIpO1xuICAgIHJldHVybiBjb250YWluZXI7XG4gIH1cbiAgXG4gIGlmICghYXJyLmxlbmd0aCkge1xuICAgIGNvbnRhaW5lci5hcHBlbmQoXCJObyBUb2Rvc1wiKTtcbiAgICByZXR1cm4gY29udGFpbmVyO1xuICB9XG5cbiAgaWYgKHR5cGUgPT09IFwidG9kb3NcIikge1xuICAgIGNvbnN0IHNvcnRlZEFyciA9IHNvcnRPYmpzQnlEYXRlQXNjKGFycik7XG5cbiAgICBjb250YWluZXIuYXBwZW5kKC4uLnNvcnRlZEFyci5tYXAoZSA9PiBjcmVhdGVUb2RvSXRlbVVJKGUsIGFwcCwgcHJvamVjdElkKSkpO1xuICB9IGVsc2UgaWYgKHR5cGUgPT09IFwicHJvamVjdHNcIikge1xuICAgIGNvbnRhaW5lci5hcHBlbmQoLi4uYXJyLm1hcChlID0+IGNyZWF0ZVByb2plY3RVSShlLCBhcHApKSk7XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJkYXlcIikge1xuICAgIGNvbnN0IGZpbHRlcmVkQXJyID0gZ2V0T2Jqc0R1ZVRvZGF5KGFycik7XG5cbiAgICBjb250YWluZXIuYXBwZW5kKC4uLmZpbHRlcmVkQXJyLm1hcChlID0+IGNyZWF0ZVRvZG9JdGVtVUkoZSwgYXBwLCBwcm9qZWN0SWQpKSk7XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJ3ZWVrXCIpIHtcbiAgICBjb25zdCBmaWx0ZXJlZEFyciA9IGdldE9ianNEdWVUaGlzV2VlayhhcnIpO1xuICAgIGNvbnN0IHNvcnRlZEFyciA9IHNvcnRPYmpzQnlEYXRlQXNjKGZpbHRlcmVkQXJyKTtcblxuICAgIGNvbnRhaW5lci5hcHBlbmQoLi4uc29ydGVkQXJyLm1hcChlID0+IGNyZWF0ZVRvZG9JdGVtVUkoZSwgYXBwLCBwcm9qZWN0SWQpKSk7XG4gIH1cblxuICByZXR1cm4gY29udGFpbmVyO1xufVxuXG5jb25zdCBzb3J0T2Jqc0J5RGF0ZUFzYyA9IChvYmpzQXJyKSA9PiB7XG4gIHJldHVybiBvYmpzQXJyLnNvcnQoKGEsIGIpID0+IGNvbXBhcmVBc2MobmV3IERhdGUoYS5nZXREdWVEYXRlKCkpLCBuZXcgRGF0ZShiLmdldER1ZURhdGUoKSkpKTtcbn1cblxuLy8gR2V0IG9iamVjdHMgdGhhdCBhcmUgZHVlIHRvZGF5XG5jb25zdCBnZXRPYmpzRHVlVG9kYXkgPSAoYXJyKSA9PiB7XG4gIGNvbnN0IHRvZGF5ID0gdXRpbGl0eUZ1bmN0aW9ucy5nZXRUb2RheUluWVlZWU1NREQoKTtcbiAgcmV0dXJuIGFyci5maWx0ZXIoZSA9PiBlLmdldER1ZURhdGUoKSA9PT0gdG9kYXkpO1xufVxuXG4vLyBHZXQgb2JqZWN0cyB0aGF0IGFyZSBkdWUgdGhpcyB3ZWVrIChNb24gLSBTdW4pXG5jb25zdCBnZXRPYmpzRHVlVGhpc1dlZWsgPSAoYXJyKSA9PiB7XG4gIHJldHVybiBhcnIuZmlsdGVyKGUgPT4ge1xuICAgIGNvbnN0IHByb2Nlc3NlZER1ZURhdGUgPSBgJHtlLmdldER1ZURhdGUoKX1UMDA6MDA6MDBgO1xuXG4gICAgcmV0dXJuIGlzVGhpc1dlZWsobmV3IERhdGUocHJvY2Vzc2VkRHVlRGF0ZSksIHsgd2Vla1N0YXJ0c09uOiAxIH0pO1xuICB9KVxufVxuXG5leHBvcnQgeyBjcmVhdGVIb2xkZXJCb3hVSSB9O1xuXG4iLCJpbXBvcnQgdG9EYXRlIGZyb20gXCIuLi90b0RhdGUvaW5kZXguanNcIjtcbmltcG9ydCByZXF1aXJlZEFyZ3MgZnJvbSBcIi4uL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzXCI7XG4vKipcbiAqIEBuYW1lIGNvbXBhcmVBc2NcbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgQ29tcGFyZSB0aGUgdHdvIGRhdGVzIGFuZCByZXR1cm4gLTEsIDAgb3IgMS5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbXBhcmUgdGhlIHR3byBkYXRlcyBhbmQgcmV0dXJuIDEgaWYgdGhlIGZpcnN0IGRhdGUgaXMgYWZ0ZXIgdGhlIHNlY29uZCxcbiAqIC0xIGlmIHRoZSBmaXJzdCBkYXRlIGlzIGJlZm9yZSB0aGUgc2Vjb25kIG9yIDAgaWYgZGF0ZXMgYXJlIGVxdWFsLlxuICpcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGVMZWZ0IC0gdGhlIGZpcnN0IGRhdGUgdG8gY29tcGFyZVxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZVJpZ2h0IC0gdGhlIHNlY29uZCBkYXRlIHRvIGNvbXBhcmVcbiAqIEByZXR1cm5zIHtOdW1iZXJ9IHRoZSByZXN1bHQgb2YgdGhlIGNvbXBhcmlzb25cbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMiBhcmd1bWVudHMgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ29tcGFyZSAxMSBGZWJydWFyeSAxOTg3IGFuZCAxMCBKdWx5IDE5ODk6XG4gKiBjb25zdCByZXN1bHQgPSBjb21wYXJlQXNjKG5ldyBEYXRlKDE5ODcsIDEsIDExKSwgbmV3IERhdGUoMTk4OSwgNiwgMTApKVxuICogLy89PiAtMVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTb3J0IHRoZSBhcnJheSBvZiBkYXRlczpcbiAqIGNvbnN0IHJlc3VsdCA9IFtcbiAqICAgbmV3IERhdGUoMTk5NSwgNiwgMiksXG4gKiAgIG5ldyBEYXRlKDE5ODcsIDEsIDExKSxcbiAqICAgbmV3IERhdGUoMTk4OSwgNiwgMTApXG4gKiBdLnNvcnQoY29tcGFyZUFzYylcbiAqIC8vPT4gW1xuICogLy8gICBXZWQgRmViIDExIDE5ODcgMDA6MDA6MDAsXG4gKiAvLyAgIE1vbiBKdWwgMTAgMTk4OSAwMDowMDowMCxcbiAqIC8vICAgU3VuIEp1bCAwMiAxOTk1IDAwOjAwOjAwXG4gKiAvLyBdXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29tcGFyZUFzYyhkaXJ0eURhdGVMZWZ0LCBkaXJ0eURhdGVSaWdodCkge1xuICByZXF1aXJlZEFyZ3MoMiwgYXJndW1lbnRzKTtcbiAgdmFyIGRhdGVMZWZ0ID0gdG9EYXRlKGRpcnR5RGF0ZUxlZnQpO1xuICB2YXIgZGF0ZVJpZ2h0ID0gdG9EYXRlKGRpcnR5RGF0ZVJpZ2h0KTtcbiAgdmFyIGRpZmYgPSBkYXRlTGVmdC5nZXRUaW1lKCkgLSBkYXRlUmlnaHQuZ2V0VGltZSgpO1xuXG4gIGlmIChkaWZmIDwgMCkge1xuICAgIHJldHVybiAtMTtcbiAgfSBlbHNlIGlmIChkaWZmID4gMCkge1xuICAgIHJldHVybiAxOyAvLyBSZXR1cm4gMCBpZiBkaWZmIGlzIDA7IHJldHVybiBOYU4gaWYgZGlmZiBpcyBOYU5cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZGlmZjtcbiAgfVxufSIsImltcG9ydCBcIi4vcHJvamVjdC5jc3NcIjtcbmltcG9ydCBwbHVzSWNvbiBmcm9tIFwiLi9wbHVzLnN2Z1wiO1xuaW1wb3J0IHBlbkljb24gZnJvbSBcIi4vcGVuY2lsLW91dGxpbmUuc3ZnXCI7XG5pbXBvcnQgZGVsZXRlSWNvbiBmcm9tIFwiLi9kZWxldGUuc3ZnXCI7XG5pbXBvcnQgeyBjcmVhdGVGb3JtVUkgfSBmcm9tIFwiLi4vdG9kb0Zvcm0vdG9kb0Zvcm1cIjtcbmltcG9ydCB7IGNyZWF0ZURlbENvbmZpcm1hdGlvblVJIH0gZnJvbSBcIi4uL2RlbENvbmZpcm1hdGlvbi9kZWxDb25maXJtYXRpb25cIjtcbmltcG9ydCB7IGNyZWF0ZUhvbGRlckJveFVJIH0gZnJvbSBcIi4uL2hvbGRlckJveC9ob2xkZXJCb3hcIjtcbmltcG9ydCAqIGFzIGRvbUNvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2RvbUNvbnRyb2xsZXIvZG9tQ29udHJvbGxlclwiO1xuaW1wb3J0ICogYXMgdXRpbGl0eUZ1bmN0aW9ucyBmcm9tIFwiLi4vLi4vdXRpbGl0eUZ1bmN0aW9ucy91dGlsaXR5RnVuY3Rpb25zXCI7XG5cbmNvbnN0IHByb2plY3RGYWN0b3J5ID0gKHRpdGxlLCBpZEZyb21EYXRhLCB0b2Rvc0FyckZyb21EYXRhKSA9PiB7XG4gIGNvbnN0IGlkID0gaWRGcm9tRGF0YSA/IGlkRnJvbURhdGEgOiB1dGlsaXR5RnVuY3Rpb25zLmdlbmVyYXRlUmFuZG9tSUQodGl0bGUpO1xuICBsZXQgdG9kb3NBcnIgPSB0b2Rvc0FyckZyb21EYXRhID8gdG9kb3NBcnJGcm9tRGF0YSA6IFtdO1xuXG4gIC8vIEdldHRpbmdcbiAgY29uc3QgZ2V0VGl0bGUgPSAoKSA9PiB0aXRsZTtcbiAgY29uc3QgZ2V0VG9kb3NBcnIgPSAoKSA9PiB0b2Rvc0FycjtcbiAgY29uc3QgZ2V0SWQgPSAoKSA9PiBpZDtcblxuICAvLyBFZGl0aW5nXG4gIGNvbnN0IGVkaXRUaXRsZSA9IChuZXdUaXRsZSkgPT4ge1xuICAgIHRpdGxlID0gbmV3VGl0bGU7XG4gIH1cblxuICBjb25zdCBwdXNoVG9Ub2Rvc0FyciA9ICh0b2RvSXRlbSkgPT4ge1xuICAgIHRvZG9zQXJyLnB1c2godG9kb0l0ZW0pO1xuICB9XG5cbiAgY29uc3QgcmVtb3ZlRnJvbVRvZG9zQXJyID0gKGlkKSA9PiB7XG4gICAgdG9kb3NBcnIgPSB0b2Rvc0Fyci5maWx0ZXIoZSA9PiBlLmlkICE9PSBpZCk7XG4gIH1cblxuICAvLyBVcGRhdGluZ1xuICAvLyBjb25zdCBwdXNoVG9Ub2Rvc0RhdGEgPSAodG9kb0RhdGEpID0+IHtcbiAgLy8gICB0b2Rvc0RhdGEucHVzaCh0b2RvRGF0YSk7XG4gIC8vIH1cblxuICAvLyBjb25zdCByZW1vdmVGcm9tVG9kb3NEYXRhID0gKGlkKSA9PiB7XG4gIC8vICAgdG9kb3NEYXRhID0gdG9kb3NEYXRhLmZpbHRlcihlID0+IGUuaWQgIT09IGlkKTtcbiAgLy8gfVxuXG4gIHJldHVybiB7XG4gICAgaWQsXG4gICAgZ2V0VGl0bGUsXG4gICAgZ2V0VG9kb3NBcnIsXG4gICAgZ2V0SWQsXG4gICAgZWRpdFRpdGxlLFxuICAgIHB1c2hUb1RvZG9zQXJyLFxuICAgIHJlbW92ZUZyb21Ub2Rvc0FyclxuICB9O1xufVxuXG5jb25zdCBjcmVhdGVQcm9qZWN0VUkgPSAocHJvamVjdCwgYXBwKSA9PiB7XG4gIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIGNvbnN0IGFkZEljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICBjb25zdCBlZGl0SWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gIGNvbnN0IHRyYXNoSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG5cbiAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0LWNvbnRhaW5lclwiLCBcImZsZXhcIiwgXCJjZW50ZXJcIik7XG4gIGNvbnRhaW5lci5kYXRhc2V0LmlkID0gcHJvamVjdC5nZXRJZCgpO1xuICBjb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCAoZSkgPT4ge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICBjb25zdCB0b2Rvc0FyciA9IHByb2plY3QuZ2V0VG9kb3NBcnIoKTtcbiAgICBjb25zdCBwcm9qZWN0SWQgPSBjb250YWluZXIuZGF0YXNldC5pZDtcblxuICAgIGNvbnNvbGUubG9nKFwidG9kb3NBcnI6XCIsIHRvZG9zQXJyKTtcblxuICAgIGRvbUNvbnRyb2xsZXIuZ2V0Q29udGVudEJveCgpLmFwcGVuZChjcmVhdGVIb2xkZXJCb3hVSShhcHAsIFwidG9kb3NcIiwgdG9kb3NBcnIsIHByb2plY3RJZCkpO1xuICB9KVxuXG4gIHRpdGxlLmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0LXRpdGxlXCIpO1xuICB0aXRsZS5pbm5lclRleHQgPSBwcm9qZWN0LmdldFRpdGxlKCk7XG5cbiAgYWRkSWNvbi5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC1hZGQtaWNvblwiKTtcbiAgYWRkSWNvbi5zcmMgPSBwbHVzSWNvbjtcbiAgYWRkSWNvbi5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcnVwXCIsIChlKSA9PiB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgIGRvbUNvbnRyb2xsZXIuYXBwZW5kVG9Sb290KGNyZWF0ZUZvcm1VSShhcHAsIG51bGwsIFwiYWRkLXRvLXByb2plY3RcIiwgbnVsbCwgcHJvamVjdCkpO1xuICAgIGRvbUNvbnRyb2xsZXIuZ2V0QXBwQ29udGFpbmVyKCkuY2xhc3NMaXN0LmFkZChcImRpc2FibGVkXCIpO1xuICB9KVxuXG4gIGVkaXRJY29uLmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0LWVkaXQtaWNvblwiKTtcbiAgZWRpdEljb24uc3JjID0gcGVuSWNvbjtcbiAgZWRpdEljb24uYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCAoZSkgPT4ge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICBjb25zdCBuYXZiYXJNb2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLm5hdmJhci1jb250YWluZXJbZGF0YS1tb2RlXWApLmRhdGFzZXQubW9kZTtcblxuICAgIGRvbUNvbnRyb2xsZXIuYXBwZW5kVG9Sb290KGNyZWF0ZUZvcm1VSShhcHAsIG5hdmJhck1vZGUsIFwiZWRpdC1wcm9qZWN0XCIsIG51bGwsIHByb2plY3QpKTtcbiAgICBkb21Db250cm9sbGVyLmdldEFwcENvbnRhaW5lcigpLmNsYXNzTGlzdC5hZGQoXCJkaXNhYmxlZFwiKTtcbiAgfSlcblxuICB0cmFzaEljb24uY2xhc3NMaXN0LmFkZChcInByb2plY3QtdHJhc2gtaWNvblwiKTtcbiAgdHJhc2hJY29uLnNyYyA9IGRlbGV0ZUljb247XG4gIHRyYXNoSWNvbi5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcnVwXCIsIChlKSA9PiB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgIGRvbUNvbnRyb2xsZXIuYXBwZW5kVG9Sb290KGNyZWF0ZURlbENvbmZpcm1hdGlvblVJKGFwcCwgXCJwcm9qZWN0XCIsIHByb2plY3QsIGNvbnRhaW5lcikpO1xuICAgIGRvbUNvbnRyb2xsZXIuZ2V0QXBwQ29udGFpbmVyKCkuY2xhc3NMaXN0LmFkZChcImRpc2FibGVkXCIpO1xuICB9KVxuXG4gIGNvbnRhaW5lci5hcHBlbmQodGl0bGUsIGFkZEljb24sIGVkaXRJY29uLCB0cmFzaEljb24pO1xuXG4gIHJldHVybiBjb250YWluZXI7XG59XG5cbmV4cG9ydCB7IHByb2plY3RGYWN0b3J5LCBjcmVhdGVQcm9qZWN0VUkgfTsiLCJpbXBvcnQgXCIuL3RvZG9Gb3JtLmNzc1wiO1xuaW1wb3J0IHsgc2V0QXR0cmlidXRlcyB9IGZyb20gXCIuLi8uLi91dGlsaXR5RnVuY3Rpb25zL3V0aWxpdHlGdW5jdGlvbnNcIjtcbmltcG9ydCAqIGFzIGRvbUNvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2RvbUNvbnRyb2xsZXIvZG9tQ29udHJvbGxlclwiO1xuaW1wb3J0IHsgdG9kb0l0ZW1GYWN0b3J5LCBjcmVhdGVUb2RvSXRlbVVJIH0gZnJvbSBcIi4uL3RvZG9JdGVtL3RvZG9JdGVtXCI7XG5pbXBvcnQgeyBwcm9qZWN0RmFjdG9yeSwgY3JlYXRlUHJvamVjdFVJIH0gZnJvbSBcIi4uL3Byb2plY3QvcHJvamVjdFwiO1xuaW1wb3J0IHsgY3JlYXRlSG9sZGVyQm94VUkgfSBmcm9tIFwiLi4vaG9sZGVyQm94L2hvbGRlckJveFwiO1xuaW1wb3J0ICogYXMgdXRpbGl0eUZ1bmN0aW9ucyBmcm9tIFwiLi4vLi4vdXRpbGl0eUZ1bmN0aW9ucy91dGlsaXR5RnVuY3Rpb25zXCI7XG5pbXBvcnQgaXNUaGlzV2VlayBmcm9tIFwiZGF0ZS1mbnMvaXNUaGlzV2Vla1wiO1xuXG5jb25zdCBjcmVhdGVGb3JtVUkgPSAoYXBwLCBuYXZiYXJNb2RlLCBtb2RlLCB0b2RvSXRlbSwgcHJvamVjdCwgcHJvamVjdElkKSA9PiB7XG4gIGNvbnN0IGJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IHRvcENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IHRvZG9CdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBjb25zdCBwcm9qZWN0QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcblxuICBib3guY2xhc3NMaXN0LmFkZChcImJveFwiLCBcImZsZXhcIiwgXCJjZW50ZXJcIik7XG5cbiAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJmb3JtLWNvbnRhaW5lclwiKTtcblxuICB0b3BDb250YWluZXIuY2xhc3NMaXN0LmFkZChcImZvcm0tdG9wLWNvbnRhaW5lclwiLCBcImZsZXhcIiwgXCJjZW50ZXJcIik7XG5cbiAgdG9kb0J0bi5jbGFzc0xpc3QuYWRkKFwiZm9ybS10b2RvLWJ0blwiKTtcbiAgdG9kb0J0bi5pbm5lclRleHQgPSBtb2RlID09PSBcImVkaXQtdG9kb1wiID8gXCJFZGl0IFRvZG9cIiA6IFwiTmV3IFRvZG9cIjtcblxuICBwcm9qZWN0QnRuLmNsYXNzTGlzdC5hZGQoXCJmb3JtLXByb2plY3QtYnRuXCIpO1xuICBwcm9qZWN0QnRuLmlubmVyVGV4dCA9IG1vZGUgPT09IFwiZWRpdC1wcm9qZWN0XCIgPyBcIkVkaXQgUHJvamVjdFwiIDogXCJOZXcgUHJvamVjdFwiO1xuXG4gIGlmIChtb2RlID09PSBcImVkaXQtdG9kb1wiKSB7XG4gICAgdG9kb0J0bi5jbGFzc0xpc3QuYWRkKFwiYm9yZGVyLWJ0bS13XCIsIFwibm8tcG9pbnRlci1ldmVudHNcIik7XG5cbiAgICB0b3BDb250YWluZXIuYXBwZW5kKHRvZG9CdG4pO1xuXG4gICAgY29udGFpbmVyLmFwcGVuZCh0b3BDb250YWluZXIsIGNyZWF0ZVRvZG9GaWVsZHNVSShhcHAsIG5hdmJhck1vZGUsIG1vZGUsIGJveCwgdG9kb0l0ZW0sIG51bGwsIHByb2plY3RJZCkpO1xuICAgIGJveC5hcHBlbmQoY29udGFpbmVyKTtcbiAgfSBlbHNlIGlmIChtb2RlID09PSBcImVkaXQtcHJvamVjdFwiKSB7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0LWZpZWxkcy1oZWlnaHRcIik7XG4gICAgcHJvamVjdEJ0bi5jbGFzc0xpc3QuYWRkKFwiYm9yZGVyLWJ0bS13XCIsIFwibm8tcG9pbnRlci1ldmVudHNcIik7XG5cbiAgICB0b3BDb250YWluZXIuYXBwZW5kKHByb2plY3RCdG4pO1xuICAgIGNvbnRhaW5lci5hcHBlbmQodG9wQ29udGFpbmVyLCBjcmVhdGVQcm9qZWN0RmllbGRzVUkoYXBwLCBuYXZiYXJNb2RlLCBtb2RlLCBib3gsIHByb2plY3QpKTtcbiAgICBib3guYXBwZW5kKGNvbnRhaW5lcik7XG4gIH0gZWxzZSBpZiAobW9kZSA9PT0gXCJhZGQtdG8tcHJvamVjdFwiKSB7XG4gICAgdG9kb0J0bi5jbGFzc0xpc3QuYWRkKFwiYm9yZGVyLWJ0bS13XCIsIFwibm8tcG9pbnRlci1ldmVudHNcIik7XG5cbiAgICB0b3BDb250YWluZXIuYXBwZW5kKHRvZG9CdG4pO1xuICAgIGNvbnRhaW5lci5hcHBlbmQodG9wQ29udGFpbmVyLCBjcmVhdGVUb2RvRmllbGRzVUkoYXBwLCBuYXZiYXJNb2RlLCBtb2RlLCBib3gsIG51bGwsIHByb2plY3QsIG51bGwpKTtcbiAgICBib3guYXBwZW5kKGNvbnRhaW5lcik7XG4gIH0gZWxzZSB7XG4gICAgdG9kb0J0bi5jbGFzc0xpc3QuYWRkKFwiYm9yZGVyLWJ0bS1iXCIpO1xuXG4gICAgdG9wQ29udGFpbmVyLmFwcGVuZCh0b2RvQnRuLCBwcm9qZWN0QnRuKTtcbiAgICBjb250YWluZXIuYXBwZW5kKHRvcENvbnRhaW5lciwgY3JlYXRlVG9kb0ZpZWxkc1VJKGFwcCwgbmF2YmFyTW9kZSwgbW9kZSwgYm94LCBudWxsLCBudWxsLCBudWxsKSk7XG4gICAgYm94LmFwcGVuZChjb250YWluZXIpO1xuXG4gICAgdG9kb0J0bi5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcnVwXCIsICgpID0+IHtcbiAgICAgIGNvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKFwicHJvamVjdC1maWVsZHMtaGVpZ2h0XCIpO1xuICAgICAgdG9kb0J0bi5jbGFzc0xpc3QuYWRkKFwiYm9yZGVyLWJ0bS1iXCIpO1xuICAgICAgcHJvamVjdEJ0bi5jbGFzc0xpc3QucmVtb3ZlKFwiYm9yZGVyLWJ0bS1iXCIpO1xuXG4gICAgICBjb250YWluZXIubGFzdEVsZW1lbnRDaGlsZC5yZW1vdmUoKTtcbiAgICAgIGNvbnRhaW5lci5hcHBlbmQoY3JlYXRlVG9kb0ZpZWxkc1VJKGFwcCwgbmF2YmFyTW9kZSwgbW9kZSwgYm94LCBudWxsLCBudWxsLCBudWxsKSk7XG4gICAgICBib3guYXBwZW5kKGNvbnRhaW5lcik7XG4gICAgfSlcblxuICAgIHByb2plY3RCdG4uYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCAoKSA9PiB7XG4gICAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZChcInByb2plY3QtZmllbGRzLWhlaWdodFwiKTtcbiAgICAgIHRvZG9CdG4uY2xhc3NMaXN0LnJlbW92ZShcImJvcmRlci1idG0tYlwiKTtcbiAgICAgIHByb2plY3RCdG4uY2xhc3NMaXN0LmFkZChcImJvcmRlci1idG0tYlwiKTtcblxuICAgICAgY29udGFpbmVyLmxhc3RFbGVtZW50Q2hpbGQucmVtb3ZlKCk7XG4gICAgICBjb250YWluZXIuYXBwZW5kKGNyZWF0ZVByb2plY3RGaWVsZHNVSShhcHAsIG5hdmJhck1vZGUsIG1vZGUsIGJveCwgbnVsbCkpO1xuICAgICAgYm94LmFwcGVuZChjb250YWluZXIpO1xuICAgIH0pXG4gIH1cblxuICByZXR1cm4gYm94O1xufVxuXG5jb25zdCBjcmVhdGVUb2RvRmllbGRzVUkgPSAoYXBwLCBuYXZiYXJNb2RlLCBtb2RlLCBib3gsIHRvZG9JdGVtLCBwcm9qZWN0LCBwcm9qZWN0SWQpID0+IHtcbiAgY29uc3QgZmllbGRzQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgY29uc3QgbWlkZGxlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvcm1cIik7XG4gIGNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGV4dGFyZWFcIik7XG4gIGNvbnN0IG5vdGVzSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGV4dGFyZWFcIik7XG4gIGNvbnN0IGR1ZURhdGVDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb25zdCBkdWVEYXRlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gIGNvbnN0IGR1ZURhdGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgY29uc3QgcHJpb3JpdHlDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb25zdCBwcmlvcml0eVRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIGNvbnN0IHByaW9yaXR5T3B0aW9uc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IGxvd1ByaW9yaXR5SW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gIGNvbnN0IGxvd1ByaW9yaXR5TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gIGNvbnN0IG1pZFByaW9yaXR5SW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gIGNvbnN0IG1pZFByaW9yaXR5TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gIGNvbnN0IGhpZ2hQcmlvcml0eUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICBjb25zdCBoaWdoUHJpb3JpdHlMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcblxuICBmaWVsZHNDb250YWluZXIuY2xhc3NMaXN0LmFkZChcImZvcm0tZmllbGRzLWNvbnRhaW5lclwiLCBcImZsZXgtY29sdW1uXCIpO1xuXG4gIC8vIE1pZGRsZVxuICBtaWRkbGVDb250YWluZXIuY2xhc3NMaXN0LmFkZChcImZvcm0tbWlkZGxlLWNvbnRhaW5lclwiLCBcImZsZXgtY29sdW1uXCIpO1xuICBtaWRkbGVDb250YWluZXIuaWQgPSBcImZvcm1cIjtcbiAgbWlkZGxlQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBpZiAobW9kZSA9PT0gXCJhZGRcIikge1xuICAgICAgYWRkVG9kbyhhcHAsIG5hdmJhck1vZGUpO1xuICAgIH0gZWxzZSBpZiAobW9kZSA9PT0gXCJlZGl0LXRvZG9cIikge1xuICAgICAgZWRpdFRvZG8oYXBwLCBuYXZiYXJNb2RlLCB0b2RvSXRlbSwgcHJvamVjdElkKTtcbiAgICB9IGVsc2UgaWYgKG1vZGUgPT09IFwiYWRkLXRvLXByb2plY3RcIikge1xuICAgICAgYWRkVG9Qcm9qZWN0KGFwcCwgcHJvamVjdCk7XG4gICAgfVxuXG4gICAgZG9tQ29udHJvbGxlci5nZXRBcHBDb250YWluZXIoKS5jbGFzc0xpc3QucmVtb3ZlKFwiZGlzYWJsZWRcIik7XG4gICAgYm94LnJlbW92ZSgpO1xuICB9KTtcblxuICB0aXRsZUlucHV0LmNsYXNzTGlzdC5hZGQoXCJmb3JtLXRpdGxlLWlucHV0XCIpO1xuICB0aXRsZUlucHV0LnBsYWNlaG9sZGVyID0gXCJFbnRlciBUaXRsZVwiO1xuICB0aXRsZUlucHV0LmlubmVyVGV4dCA9IHRvZG9JdGVtID8gdG9kb0l0ZW0uZ2V0VGl0bGUoKSA6IFwiXCI7XG4gIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKFwibWF4bGVuZ3RoXCIsIFwiNTBcIik7XG4gIHRpdGxlSW5wdXQucmVxdWlyZWQgPSB0cnVlO1xuXG4gIG5vdGVzSW5wdXQuY2xhc3NMaXN0LmFkZChcImZvcm0tbm90ZXMtaW5wdXRcIik7XG4gIG5vdGVzSW5wdXQucGxhY2Vob2xkZXIgPSBcIkVudGVyIE5vdGVzXCI7XG4gIG5vdGVzSW5wdXQuaW5uZXJUZXh0ID0gdG9kb0l0ZW0gPyB0b2RvSXRlbS5nZXROb3RlcygpIDogXCJcIjtcbiAgbm90ZXNJbnB1dC5zZXRBdHRyaWJ1dGUoXCJtYXhsZW5ndGhcIiwgXCIzMDBcIik7XG5cbiAgZHVlRGF0ZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiZm9ybS1kdWUtZGF0ZS1jb250YWluZXJcIiwgXCJmbGV4LWNvbHVtblwiLCBcImNlbnRlclwiKTtcblxuICBkdWVEYXRlTGFiZWwuY2xhc3NMaXN0LmFkZChcImZvcm0tZHVlLWRhdGUtbGFiZWxcIik7XG4gIGR1ZURhdGVMYWJlbC5pbm5lclRleHQgPSAnRHVlIERhdGUnO1xuXG4gIGR1ZURhdGVJbnB1dC5jbGFzc0xpc3QuYWRkKFwiZm9ybS1kdWUtZGF0ZS1pbnB1dFwiKTtcbiAgZHVlRGF0ZUlucHV0LnR5cGUgPSBcImRhdGVcIjtcbiAgZHVlRGF0ZUlucHV0LnZhbHVlID0gdG9kb0l0ZW0gPyB0b2RvSXRlbS5nZXREdWVEYXRlKCkgOiBcIjIyLTExLTExXCI7XG4gIGR1ZURhdGVJbnB1dC5yZXF1aXJlZCA9IHRydWU7XG5cbiAgcHJpb3JpdHlDb250YWluZXIuY2xhc3NMaXN0LmFkZChcImZvcm0tcHJpb3JpdHktY29udGFpbmVyXCIsIFwiZmxleC1jb2x1bW5cIiwgXCJjZW50ZXJcIik7XG5cbiAgcHJpb3JpdHlUaXRsZS5jbGFzc0xpc3QuYWRkKFwiZm9ybS1wcmlvcml0eS10aXRsZVwiKTtcbiAgcHJpb3JpdHlUaXRsZS5pbm5lclRleHQgPSBcIlByaW9yaXR5XCI7XG5cbiAgcHJpb3JpdHlPcHRpb25zQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJmb3JtLXByaW9yaXR5LW9wdGlvbnMtY29udGFpbmVyXCIsIFwiZmxleFwiKTtcblxuICBzZXRBdHRyaWJ1dGVzKGxvd1ByaW9yaXR5SW5wdXQsIHtcbiAgICB0eXBlOiBcInJhZGlvXCIsXG4gICAgaWQ6IFwibC1wcmlvXCIsXG4gICAgdmFsdWU6IFwibG93XCIsXG4gICAgbmFtZTogXCJwcmlvcml0eVwiLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIGNoZWNrZWQ6IHRvZG9JdGVtICYmIHRvZG9JdGVtLmdldFByaW9yaXR5KCkgPT09IFwibG93XCIgPyB0cnVlIDogZmFsc2VcbiAgfSk7XG4gIGxvd1ByaW9yaXR5SW5wdXQuY2xhc3NMaXN0LmFkZChcImZvcm0tcHJpb3JpdHktcmFkaW9cIiwgXCJoaWRkZW5cIik7XG5cbiAgbG93UHJpb3JpdHlMYWJlbC5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgXCJsLXByaW9cIik7XG4gIGxvd1ByaW9yaXR5TGFiZWwuaW5uZXJUZXh0ID0gXCJMb3dcIjtcbiAgbG93UHJpb3JpdHlMYWJlbC5jbGFzc0xpc3QuYWRkKFwiZm9ybS1wcmlvcml0eS1sYWJlbFwiLCBcImwtcHJpby1sYWJlbFwiKTtcblxuICBzZXRBdHRyaWJ1dGVzKG1pZFByaW9yaXR5SW5wdXQsIHtcbiAgICB0eXBlOiBcInJhZGlvXCIsXG4gICAgaWQ6IFwibS1wcmlvXCIsXG4gICAgdmFsdWU6IFwibWVkaXVtXCIsXG4gICAgbmFtZTogXCJwcmlvcml0eVwiLFxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIGNoZWNrZWQ6IHRvZG9JdGVtICYmIHRvZG9JdGVtLmdldFByaW9yaXR5KCkgPT09IFwibWVkaXVtXCIgPyB0cnVlIDogZmFsc2VcbiAgfSk7XG4gIG1pZFByaW9yaXR5SW5wdXQuY2xhc3NMaXN0LmFkZChcImZvcm0tcHJpb3JpdHktcmFkaW9cIiwgXCJoaWRkZW5cIik7XG5cbiAgbWlkUHJpb3JpdHlMYWJlbC5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgXCJtLXByaW9cIik7XG4gIG1pZFByaW9yaXR5TGFiZWwuaW5uZXJUZXh0ID0gXCJNZWRpdW1cIjtcbiAgbWlkUHJpb3JpdHlMYWJlbC5jbGFzc0xpc3QuYWRkKFwiZm9ybS1wcmlvcml0eS1sYWJlbFwiLCBcIm0tcHJpby1sYWJlbFwiKTtcblxuICBzZXRBdHRyaWJ1dGVzKGhpZ2hQcmlvcml0eUlucHV0LCB7XG4gICAgdHlwZTogXCJyYWRpb1wiLFxuICAgIGlkOiBcImgtcHJpb1wiLFxuICAgIHZhbHVlOiBcImhpZ2hcIixcbiAgICBuYW1lOiBcInByaW9yaXR5XCIsXG4gICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgY2hlY2tlZDogdG9kb0l0ZW0gJiYgdG9kb0l0ZW0uZ2V0UHJpb3JpdHkoKSA9PT0gXCJoaWdoXCIgPyB0cnVlIDogZmFsc2VcbiAgfSlcbiAgaGlnaFByaW9yaXR5SW5wdXQuY2xhc3NMaXN0LmFkZChcImZvcm0tcHJpb3JpdHktcmFkaW9cIiwgXCJoaWRkZW5cIik7XG5cbiAgaGlnaFByaW9yaXR5TGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIFwiaC1wcmlvXCIpO1xuICBoaWdoUHJpb3JpdHlMYWJlbC5pbm5lclRleHQgPSBcIkhpZ2hcIjtcbiAgaGlnaFByaW9yaXR5TGFiZWwuY2xhc3NMaXN0LmFkZChcImZvcm0tcHJpb3JpdHktbGFiZWxcIiwgXCJoLXByaW8tbGFiZWxcIik7XG5cbiAgZmllbGRzQ29udGFpbmVyLmFwcGVuZChtaWRkbGVDb250YWluZXIsIGNyZWF0ZUJvdHRvbUNvbnRhaW5lclVJKGJveCkpO1xuICBtaWRkbGVDb250YWluZXIuYXBwZW5kKHRpdGxlSW5wdXQsIG5vdGVzSW5wdXQsIGR1ZURhdGVDb250YWluZXIsIHByaW9yaXR5Q29udGFpbmVyKTtcbiAgZHVlRGF0ZUNvbnRhaW5lci5hcHBlbmQoZHVlRGF0ZUxhYmVsLCBkdWVEYXRlSW5wdXQpO1xuICBwcmlvcml0eUNvbnRhaW5lci5hcHBlbmQocHJpb3JpdHlUaXRsZSwgcHJpb3JpdHlPcHRpb25zQ29udGFpbmVyKTtcbiAgcHJpb3JpdHlPcHRpb25zQ29udGFpbmVyLmFwcGVuZChsb3dQcmlvcml0eUlucHV0LCBsb3dQcmlvcml0eUxhYmVsLCBtaWRQcmlvcml0eUlucHV0LCBtaWRQcmlvcml0eUxhYmVsLCBoaWdoUHJpb3JpdHlJbnB1dCwgaGlnaFByaW9yaXR5TGFiZWwpO1xuXG4gIHJldHVybiBmaWVsZHNDb250YWluZXI7XG59XG5cbmNvbnN0IGNyZWF0ZVByb2plY3RGaWVsZHNVSSA9IChhcHAsIG5hdmJhck1vZGUsIG1vZGUsIGJveCwgcHJvamVjdCkgPT4ge1xuICBjb25zdCBmaWVsZHNDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb25zdCBtaWRkbGVDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKTtcbiAgY29uc3QgdGl0bGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiKTtcblxuICBmaWVsZHNDb250YWluZXIuY2xhc3NMaXN0LmFkZChcImZvcm0tZmllbGRzLWNvbnRhaW5lclwiLCBcImZsZXgtY29sdW1uXCIpO1xuXG4gIC8vIE1pZGRsZVxuICBtaWRkbGVDb250YWluZXIuY2xhc3NMaXN0LmFkZChcImZvcm0tbWlkZGxlLWNvbnRhaW5lclwiLCBcImZsZXgtY29sdW1uXCIpO1xuICBtaWRkbGVDb250YWluZXIuaWQgPSBcImZvcm1cIjtcbiAgbWlkZGxlQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBpZiAobW9kZSA9PT0gXCJhZGRcIikge1xuICAgICAgYWRkUHJvamVjdChhcHAsIG5hdmJhck1vZGUpO1xuICAgIH0gZWxzZSBpZiAobW9kZSA9PT0gXCJlZGl0LXByb2plY3RcIikge1xuICAgICAgZWRpdFByb2plY3QoYXBwLCBuYXZiYXJNb2RlLCBwcm9qZWN0KTtcbiAgICB9XG5cbiAgICBkb21Db250cm9sbGVyLmdldEFwcENvbnRhaW5lcigpLmNsYXNzTGlzdC5yZW1vdmUoXCJkaXNhYmxlZFwiKTtcbiAgICBib3gucmVtb3ZlKCk7XG4gIH0pO1xuXG4gIHRpdGxlSW5wdXQuY2xhc3NMaXN0LmFkZChcImZvcm0tdGl0bGUtaW5wdXRcIik7XG4gIHRpdGxlSW5wdXQucGxhY2Vob2xkZXIgPSBcIkVudGVyIFRpdGxlXCI7XG4gIHRpdGxlSW5wdXQuaW5uZXJUZXh0ID0gcHJvamVjdCA/IHByb2plY3QuZ2V0VGl0bGUoKSA6IFwiXCI7XG4gIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKFwibWF4bGVuZ3RoXCIsIFwiNTBcIik7XG4gIHRpdGxlSW5wdXQucmVxdWlyZWQgPSB0cnVlO1xuXG4gIGZpZWxkc0NvbnRhaW5lci5hcHBlbmQobWlkZGxlQ29udGFpbmVyLCBjcmVhdGVCb3R0b21Db250YWluZXJVSShib3gpKTtcbiAgbWlkZGxlQ29udGFpbmVyLmFwcGVuZCh0aXRsZUlucHV0KTtcblxuICByZXR1cm4gZmllbGRzQ29udGFpbmVyO1xufVxuXG5jb25zdCBjcmVhdGVCb3R0b21Db250YWluZXJVSSA9IChib3gpID0+IHtcbiAgY29uc3QgYm90dG9tQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgY29uc3QgY2FuY2VsQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgY29uc3Qgb2tCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuXG4gIGJvdHRvbUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiZm9ybS1ib3R0b20tY29udGFpbmVyXCIsIFwiZmxleFwiLCBcImNlbnRlclwiKTtcblxuICBjYW5jZWxCdG4uY2xhc3NMaXN0LmFkZChcImZvcm0tY2FuY2VsLWJ0blwiKTtcbiAgY2FuY2VsQnRuLmlubmVyVGV4dCA9IFwiQ0FOQ0VMXCI7XG4gIGNhbmNlbEJ0bi5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcnVwXCIsICgpID0+IHtcbiAgICBib3gucmVtb3ZlKCk7XG4gICAgZG9tQ29udHJvbGxlci5nZXRBcHBDb250YWluZXIoKS5jbGFzc0xpc3QucmVtb3ZlKFwiZGlzYWJsZWRcIik7XG4gIH0pXG5cbiAgb2tCdG4uY2xhc3NMaXN0LmFkZChcImZvcm0tb2stYnRuXCIpO1xuICBva0J0bi5pbm5lclRleHQgPSBcIk9LXCI7XG4gIG9rQnRuLnNldEF0dHJpYnV0ZShcImZvcm1cIiwgXCJmb3JtXCIpO1xuXG4gIGJvdHRvbUNvbnRhaW5lci5hcHBlbmQoY2FuY2VsQnRuLCBva0J0bik7XG5cbiAgcmV0dXJuIGJvdHRvbUNvbnRhaW5lcjtcbn1cblxuY29uc3QgZ2V0SW5wdXRWYWx1ZXMgPSAoKSA9PiB7XG4gIGNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm0tdGl0bGUtaW5wdXRcIik7XG4gIGNvbnN0IG5vdGVzSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm0tbm90ZXMtaW5wdXRcIik7XG4gIGNvbnN0IGR1ZURhdGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybS1kdWUtZGF0ZS1pbnB1dFwiKTtcbiAgY29uc3QgcHJpb3JpdHlJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dFtuYW1lPSdwcmlvcml0eSddOmNoZWNrZWRcIik7XG5cbiAgY29uc29sZS5sb2coe1xuICAgIHRpdGxlVmFsOiB0aXRsZUlucHV0LnZhbHVlLFxuICAgIG5vdGVzVmFsOiBub3Rlc0lucHV0ID8gbm90ZXNJbnB1dC52YWx1ZSA6IG51bGwsXG4gICAgZHVlRGF0ZVZhbDogZHVlRGF0ZUlucHV0ID8gZHVlRGF0ZUlucHV0LnZhbHVlIDogbnVsbCxcbiAgICBwcmlvcml0eVZhbDogcHJpb3JpdHlJbnB1dCA/IHByaW9yaXR5SW5wdXQudmFsdWUgOiBudWxsXG4gIH0pXG5cbiAgcmV0dXJuIHtcbiAgICB0aXRsZVZhbDogdGl0bGVJbnB1dC52YWx1ZSxcbiAgICBub3Rlc1ZhbDogbm90ZXNJbnB1dCA/IG5vdGVzSW5wdXQudmFsdWUgOiBudWxsLFxuICAgIGR1ZURhdGVWYWw6IGR1ZURhdGVJbnB1dCA/IGR1ZURhdGVJbnB1dC52YWx1ZSA6IG51bGwsXG4gICAgcHJpb3JpdHlWYWw6IHByaW9yaXR5SW5wdXQgPyBwcmlvcml0eUlucHV0LnZhbHVlIDogbnVsbFxuICB9O1xufVxuXG5jb25zdCBhZGRUb2RvID0gKGFwcCwgbmF2YmFyTW9kZSkgPT4ge1xuICBjb25zdCB0b2RvSXRlbSA9IGNyZWF0ZVRvZG9JdGVtKCk7XG5cbiAgY29uc3QgeyBpc0R1ZVRvZGF5LCBpc0R1ZVRoaXNXZWVrIH0gPSBjaGVja0R1ZURhdGUodG9kb0l0ZW0pO1xuXG4gIGFwcC5wdXNoVG9Ub2Rvc0Fycih0b2RvSXRlbSk7XG4gIHV0aWxpdHlGdW5jdGlvbnMudXBkYXRlTG9jYWxTdG9yYWdlKGFwcCk7XG5cbiAgY29uc3QgdG9kb3NBcnIgPSBhcHAuZ2V0VG9kb3NBcnIoKTtcblxuICByZW5kZXJUb2RvcyhhcHAsIG5hdmJhck1vZGUsIHRvZG9zQXJyLCBpc0R1ZVRvZGF5LCBpc0R1ZVRoaXNXZWVrLCBudWxsKTtcbn1cblxuY29uc3QgZWRpdFRvZG8gPSAoYXBwLCBuYXZiYXJNb2RlLCB0b2RvSXRlbSwgcHJvamVjdElkKSA9PiB7XG4gIGNvbnN0IHsgdGl0bGVWYWwsIG5vdGVzVmFsLCBkdWVEYXRlVmFsLCBwcmlvcml0eVZhbCB9ID0gZ2V0SW5wdXRWYWx1ZXMoKTtcblxuICB0b2RvSXRlbS5lZGl0VGl0bGUodGl0bGVWYWwpO1xuICB0b2RvSXRlbS5lZGl0Tm90ZXMobm90ZXNWYWwpO1xuICB0b2RvSXRlbS5lZGl0RHVlRGF0ZShkdWVEYXRlVmFsKTtcbiAgdG9kb0l0ZW0uZWRpdFByaW9yaXR5KHByaW9yaXR5VmFsKTtcblxuICBhcHAudXBkYXRlVG9kb3NBcnIodG9kb0l0ZW0pOyAvLyBSZWZhY3RvclxuICB1dGlsaXR5RnVuY3Rpb25zLnVwZGF0ZUxvY2FsU3RvcmFnZShhcHApO1xuXG4gIGNvbnN0IHsgaXNEdWVUb2RheSwgaXNEdWVUaGlzV2VlayB9ID0gY2hlY2tEdWVEYXRlKHRvZG9JdGVtKTtcblxuICBpZiAocHJvamVjdElkKSB7XG4gICAgY29uc3QgcHJvamVjdCA9IGFwcC5nZXRQcm9qZWN0c0FycigpLmZpbHRlcihwcm9qZWN0ID0+IHByb2plY3QuZ2V0SWQoKSA9PT0gcHJvamVjdElkKVswXTtcbiAgICBjb25zdCB0b2Rvc0FyciA9IHByb2plY3QuZ2V0VG9kb3NBcnIoKTtcblxuICAgIHJlbmRlclRvZG9zKGFwcCwgbmF2YmFyTW9kZSwgdG9kb3NBcnIsIG51bGwsIG51bGwsIHByb2plY3RJZCk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgdG9kb3NBcnIgPSBhcHAuZ2V0VG9kb3NBcnIoKTtcblxuICAgIHJlbmRlclRvZG9zKGFwcCwgbmF2YmFyTW9kZSwgdG9kb3NBcnIsIGlzRHVlVG9kYXksIGlzRHVlVGhpc1dlZWssIG51bGwpO1xuICB9ICBcbn1cblxuY29uc3QgYWRkUHJvamVjdCA9IChhcHAsIG5hdmJhck1vZGUpID0+IHtcbiAgY29uc3QgeyB0aXRsZVZhbCB9ID0gZ2V0SW5wdXRWYWx1ZXMoKTtcbiAgY29uc3QgcHJvamVjdCA9IHByb2plY3RGYWN0b3J5KHRpdGxlVmFsLCBudWxsLCBudWxsKTtcblxuICBhcHAucHVzaFRvUHJvamVjdHNBcnIocHJvamVjdCk7XG4gIHV0aWxpdHlGdW5jdGlvbnMudXBkYXRlTG9jYWxTdG9yYWdlKGFwcCk7XG5cbiAgY29uc3QgcHJvamVjdHNBcnIgPSBhcHAuZ2V0UHJvamVjdHNBcnIoKTtcblxuICByZW5kZXJQcm9qZWN0cyhhcHAsIG5hdmJhck1vZGUsIHByb2plY3RzQXJyKTtcbn1cblxuY29uc3QgZWRpdFByb2plY3QgPSAoYXBwLCBuYXZiYXJNb2RlLCBwcm9qZWN0KSA9PiB7XG4gIGNvbnN0IHsgdGl0bGVWYWwgfSA9IGdldElucHV0VmFsdWVzKCk7XG5cbiAgcHJvamVjdC5lZGl0VGl0bGUodGl0bGVWYWwpO1xuXG4gIC8vIFVwZGF0ZSBwcm9qZWN0IGluIGFwcCBhcnJcbiAgYXBwLnVwZGF0ZVByb2plY3RzQXJyKHByb2plY3QpO1xuICB1dGlsaXR5RnVuY3Rpb25zLnVwZGF0ZUxvY2FsU3RvcmFnZShhcHApO1xuXG4gIC8vIEdldCBsYXRlc3QgcHJvamVjdHNBcnIgJiByZXJlbmRlciBwcm9qZWN0c1xuICBjb25zdCBwcm9qZWN0c0FyciA9IGFwcC5nZXRQcm9qZWN0c0FycigpO1xuXG4gIHJlbmRlclByb2plY3RzKGFwcCwgbmF2YmFyTW9kZSwgcHJvamVjdHNBcnIpO1xufVxuXG5jb25zdCBjaGVja0R1ZURhdGUgPSAodG9kb0l0ZW0pID0+IHtcbiAgY29uc3QgdG9kYXkgPSB1dGlsaXR5RnVuY3Rpb25zLmdldFRvZGF5SW5ZWVlZTU1ERCgpO1xuICBjb25zdCBwcm9jZXNzZWREdWVEYXRlID0gYCR7dG9kb0l0ZW0uZ2V0RHVlRGF0ZSgpfVQwMDowMDowMGA7XG4gIGNvbnN0IGlzRHVlVG9kYXkgPSB0b2RvSXRlbS5nZXREdWVEYXRlKCkgPT09IHRvZGF5O1xuICBjb25zdCBpc0R1ZVRoaXNXZWVrID0gaXNUaGlzV2VlayhuZXcgRGF0ZShwcm9jZXNzZWREdWVEYXRlKSwgeyB3ZWVrU3RhcnRzT246IDEgfSk7XG5cbiAgcmV0dXJuIHtcbiAgICBpc0R1ZVRvZGF5LFxuICAgIGlzRHVlVGhpc1dlZWtcbiAgfTtcbn1cblxuY29uc3QgcmVuZGVyVG9kb3MgPSAoYXBwLCBuYXZiYXJNb2RlLCB0b2Rvc0FyciwgaXNEdWVUb2RheSwgaXNEdWVUaGlzV2VlaywgcHJvamVjdElkKSA9PiB7XG4gIGlmIChuYXZiYXJNb2RlID09PSBcInRvZG9zXCIpIHtcbiAgICBkb21Db250cm9sbGVyLmdldENvbnRlbnRCb3goKS5hcHBlbmQoY3JlYXRlSG9sZGVyQm94VUkoYXBwLCBcInRvZG9zXCIsIHRvZG9zQXJyLCBwcm9qZWN0SWQpKTtcbiAgfSBlbHNlIGlmIChuYXZiYXJNb2RlID09PSBcImRheVwiICYmIGlzRHVlVG9kYXkpIHtcbiAgICBkb21Db250cm9sbGVyLmdldENvbnRlbnRCb3goKS5hcHBlbmQoY3JlYXRlSG9sZGVyQm94VUkoYXBwLCBcImRheVwiLCB0b2Rvc0FyciwgcHJvamVjdElkKSk7XG4gIH0gZWxzZSBpZiAobmF2YmFyTW9kZSA9PT0gXCJ3ZWVrXCIgJiYgaXNEdWVUaGlzV2Vlaykge1xuICAgIGRvbUNvbnRyb2xsZXIuZ2V0Q29udGVudEJveCgpLmFwcGVuZChjcmVhdGVIb2xkZXJCb3hVSShhcHAsIFwid2Vla1wiLCB0b2Rvc0FyciwgcHJvamVjdElkKSk7XG4gIH0gZWxzZSBpZiAobmF2YmFyTW9kZSA9PT0gXCJwcm9qZWN0c1wiKSB7XG4gICAgZG9tQ29udHJvbGxlci5nZXRDb250ZW50Qm94KCkuYXBwZW5kKGNyZWF0ZUhvbGRlckJveFVJKGFwcCwgXCJ0b2Rvc1wiLCB0b2Rvc0FyciwgcHJvamVjdElkKSk7XG4gIH1cbn1cblxuY29uc3QgcmVuZGVyUHJvamVjdHMgPSAoYXBwLCBuYXZiYXJNb2RlLCBwcm9qZWN0c0FycikgPT4ge1xuICBpZiAobmF2YmFyTW9kZSA9PT0gXCJwcm9qZWN0c1wiKSB7XG4gICAgZG9tQ29udHJvbGxlci5nZXRDb250ZW50Qm94KCkuYXBwZW5kKGNyZWF0ZUhvbGRlckJveFVJKGFwcCwgXCJwcm9qZWN0c1wiLCBwcm9qZWN0c0FycikpO1xuICB9XG59XG5cbmNvbnN0IGFkZFRvUHJvamVjdCA9IChhcHAsIHByb2plY3QpID0+IHtcbiAgY29uc3QgdG9kb0l0ZW0gPSBjcmVhdGVUb2RvSXRlbSgpO1xuXG4gIC8vIFVwZGF0ZSBwcm9qZWN0IG9ialxuICBwcm9qZWN0LnB1c2hUb1RvZG9zQXJyKHRvZG9JdGVtKTtcblxuICAvLyBVcGRhdGUgYXBwIG9ialxuICBhcHAucHVzaFRvVG9kb3NBcnIodG9kb0l0ZW0pO1xuICBhcHAudXBkYXRlUHJvamVjdHNBcnIocHJvamVjdCk7XG4gIHV0aWxpdHlGdW5jdGlvbnMudXBkYXRlTG9jYWxTdG9yYWdlKGFwcCk7XG59XG5cbmNvbnN0IGNyZWF0ZVRvZG9JdGVtID0gKCkgPT4ge1xuICBjb25zdCB7IHRpdGxlVmFsLCBub3Rlc1ZhbCwgZHVlRGF0ZVZhbCwgcHJpb3JpdHlWYWwgfSA9IGdldElucHV0VmFsdWVzKCk7XG4gIHJldHVybiB0b2RvSXRlbUZhY3RvcnkoZmFsc2UsIHRpdGxlVmFsLCBub3Rlc1ZhbCwgZHVlRGF0ZVZhbCwgcHJpb3JpdHlWYWwsIG51bGwpO1xufVxuXG5leHBvcnQgeyBjcmVhdGVGb3JtVUkgfTtcbiIsImltcG9ydCAnLi9hcHAuY3NzJztcbmltcG9ydCB7IGNyZWF0ZUNvbnRlbnRCb3hVSSB9IGZyb20gXCIuLi9jb21wb25lbnRzL2NvbnRlbnRCb3gvY29udGVudEJveFwiO1xuaW1wb3J0IHsgdG9kb0l0ZW1GYWN0b3J5IH0gZnJvbSAnLi4vY29tcG9uZW50cy90b2RvSXRlbS90b2RvSXRlbSc7XG5pbXBvcnQgeyBwcm9qZWN0RmFjdG9yeSB9IGZyb20gJy4uL2NvbXBvbmVudHMvcHJvamVjdC9wcm9qZWN0JztcbmltcG9ydCB7IHVwZGF0ZUxvY2FsU3RvcmFnZSB9IGZyb20gXCIuLi91dGlsaXR5RnVuY3Rpb25zL3V0aWxpdHlGdW5jdGlvbnNcIjtcblxuY29uc3QgYXBwRmFjdG9yeSA9ICgpID0+IHtcbiAgbGV0IHRvZG9zQXJyID0gW107XG4gIGxldCBwcm9qZWN0c0FyciA9IFtdO1xuXG4gIC8vIEdldHRpbmdcbiAgY29uc3QgZ2V0VG9kb3NBcnIgPSAoKSA9PiB0b2Rvc0FycjtcbiAgY29uc3QgZ2V0UHJvamVjdHNBcnIgPSAoKSA9PiBwcm9qZWN0c0FycjtcblxuICAvLyBJbml0aWFsaXppbmdcbiAgY29uc3QgaW5pdGlhbGl6ZVRvZG9zQXJyID0gKGFycikgPT4ge1xuICAgIHRvZG9zQXJyID0gYXJyO1xuICB9XG4gIGNvbnN0IGluaXRpYWxpemVQcm9qZWN0c0FyciA9IChhcnIpID0+IHtcbiAgICBwcm9qZWN0c0FyciA9IGFycjtcbiAgfVxuXG4gIC8vIEFkZGluZ1xuICBjb25zdCBwdXNoVG9Ub2Rvc0FyciA9ICh0b2RvSXRlbSkgPT4ge1xuICAgIHRvZG9zQXJyLnB1c2godG9kb0l0ZW0pO1xuICB9XG4gIGNvbnN0IHB1c2hUb1Byb2plY3RzQXJyID0gKHByb2plY3QpID0+IHtcbiAgICBwcm9qZWN0c0Fyci5wdXNoKHByb2plY3QpO1xuICB9XG5cbiAgLy8gUmVtb3ZpbmdcbiAgY29uc3QgcmVtb3ZlRnJvbVRvZG9zQXJyID0gKGlkKSA9PiB7XG4gICAgdG9kb3NBcnIgPSB0b2Rvc0Fyci5maWx0ZXIoZSA9PiBlLmlkICE9PSBpZCk7XG4gIH1cbiAgY29uc3QgcmVtb3ZlRnJvbVByb2plY3RzQXJyID0gKGlkKSA9PiB7XG4gICAgcHJvamVjdHNBcnIgPSBwcm9qZWN0c0Fyci5maWx0ZXIoZSA9PiBlLmlkICE9PSBpZCk7XG4gIH1cblxuICAvLyBVcGRhdGluZ1xuICBjb25zdCB1cGRhdGVUb2Rvc0FyciA9ICh0b2RvSXRlbSkgPT4ge1xuICAgIHRvZG9zQXJyID0gdG9kb3NBcnIubWFwKGUgPT4gZS5nZXRJZCgpID09PSB0b2RvSXRlbS5nZXRJZCgpID8gdG9kb0l0ZW0gOiBlKTtcbiAgfVxuICBjb25zdCB1cGRhdGVQcm9qZWN0c0FyciA9IChwcm9qZWN0KSA9PiB7XG4gICAgcHJvamVjdHNBcnIgPSBwcm9qZWN0c0Fyci5tYXAoZSA9PiBlLmdldElkKCkgPT09IHByb2plY3QuZ2V0SWQoKSA/IHByb2plY3QgOiBlKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZ2V0VG9kb3NBcnIsXG4gICAgZ2V0UHJvamVjdHNBcnIsXG4gICAgaW5pdGlhbGl6ZVRvZG9zQXJyLFxuICAgIGluaXRpYWxpemVQcm9qZWN0c0FycixcbiAgICBwdXNoVG9Ub2Rvc0FycixcbiAgICByZW1vdmVGcm9tVG9kb3NBcnIsXG4gICAgdXBkYXRlVG9kb3NBcnIsXG4gICAgcHVzaFRvUHJvamVjdHNBcnIsXG4gICAgcmVtb3ZlRnJvbVByb2plY3RzQXJyLFxuICAgIHVwZGF0ZVByb2plY3RzQXJyXG4gIH1cbn1cblxuY29uc3QgY3JlYXRlQXBwVUkgPSAoKSA9PiB7XG4gIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb25zdCBhcHAgPSBhcHBGYWN0b3J5KCk7XG5cbiAgaW5pdGlhbGl6ZUFwcChhcHApO1xuICBcbiAgb25iZWZvcmV1bmxvYWQgPSB1cGRhdGVMb2NhbFN0b3JhZ2UoYXBwKTtcblxuICBjb250YWluZXIuY2xhc3NMaXN0LmFkZChcImFwcC1jb250YWluZXJcIiwgXCJmbGV4LWNvbHVtblwiLCBcImNlbnRlclwiKVxuXG4gIC8vIExvZ2dlciBidG5cbiAgLy8gY29uc3QgbG9nQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgLy8gbG9nQnRuLmlubmVyVGV4dCA9IFwiTE9HIElORk9cIjtcbiAgLy8gbG9nQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVydXBcIiwgKCkgPT4ge1xuICAvLyAgIGNvbnNvbGUubG9nKHtcbiAgLy8gICAgIHRvZG9zQXJyT3JpOiBhcHAuZ2V0VG9kb3NBcnIoKSxcbiAgLy8gICAgIHByb2plY3RzQXJyT3JpOiBhcHAuZ2V0UHJvamVjdHNBcnIoKVxuICAvLyAgIH0pXG4gIC8vIH0pXG4gIC8vIExvZ2dlciBidG5cbiAgXG4gIGNvbnRhaW5lci5hcHBlbmQoY3JlYXRlQ29udGVudEJveFVJKGFwcCkpO1xuXG4gIHJldHVybiBjb250YWluZXI7XG59XG5cbmNvbnN0IHRyYW5zZm9ybVRvVG9kb3NBcnIgPSAodG9kb3NEYXRhKSA9PiB7XG4gIGNvbnN0IHRvZG9zQXJyID0gdG9kb3NEYXRhLm1hcChkYXRhID0+IHtcbiAgICBjb25zdCB7IGNoZWNrZWQsIHRpdGxlLCBub3RlcywgZHVlRGF0ZSwgcHJpb3JpdHksIGlkIH0gPSBkYXRhO1xuXG4gICAgcmV0dXJuIHRvZG9JdGVtRmFjdG9yeShjaGVja2VkLCB0aXRsZSwgbm90ZXMsIGR1ZURhdGUsIHByaW9yaXR5LCBpZCk7XG4gIH0pXG5cbiAgcmV0dXJuIHRvZG9zQXJyO1xufVxuXG5jb25zdCB0cmFuc2Zvcm1Ub1Byb2plY3RzQXJyID0gKHByb2plY3RzRGF0YSkgPT4ge1xuICBjb25zdCBwcm9qZWN0c0FyciA9IHByb2plY3RzRGF0YS5tYXAoZGF0YSA9PiB7XG4gICAgY29uc3QgeyB0aXRsZSwgaWQsIHRvZG9zRGF0YSB9ID0gZGF0YTtcbiAgICBjb25zdCB0b2Rvc0FyciA9IHRyYW5zZm9ybVRvVG9kb3NBcnIodG9kb3NEYXRhKTtcblxuICAgIHJldHVybiBwcm9qZWN0RmFjdG9yeSh0aXRsZSwgaWQsIHRvZG9zQXJyKTtcbiAgfSk7XG5cbiAgcmV0dXJuIHByb2plY3RzQXJyO1xufVxuXG5jb25zdCBpbml0aWFsaXplQXBwID0gKGFwcCkgPT4ge1xuICBsb2NhbFN0b3JhZ2UudG9kb3NEYXRhID9cbiAgYXBwLmluaXRpYWxpemVUb2Rvc0Fycih0cmFuc2Zvcm1Ub1RvZG9zQXJyKEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLnRvZG9zRGF0YSkpKSA6XG4gIGFwcC5pbml0aWFsaXplVG9kb3NBcnIoW10pO1xuXG4gIGxvY2FsU3RvcmFnZS5wcm9qZWN0c0RhdGEgP1xuICBhcHAuaW5pdGlhbGl6ZVByb2plY3RzQXJyKHRyYW5zZm9ybVRvUHJvamVjdHNBcnIoSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UucHJvamVjdHNEYXRhKSkpIDpcbiAgYXBwLmluaXRpYWxpemVQcm9qZWN0c0FycihbXSk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUFwcFVJIH07XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXguY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBjcmVhdGVBcHBVSSB9IGZyb20gJy4vY29udGFpbmVyL2FwcCc7XG5pbXBvcnQgJy4vaW5kZXguY3NzJztcblxuY29uc3Qgcm9vdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyb290Jyk7XG5cbnJvb3QuYXBwZW5kKGNyZWF0ZUFwcFVJKCkpOyIsImltcG9ydCBcIi4vY29udGVudEJveC5jc3NcIjtcbmltcG9ydCB7IGNyZWF0ZU5hdmJhclVJIH0gZnJvbSBcIi4uL25hdmJhci9uYXZiYXJcIjtcbmltcG9ydCB7IGNyZWF0ZUhvbGRlckJveFVJIH0gZnJvbSBcIi4uL2hvbGRlckJveC9ob2xkZXJCb3hcIjtcblxuY29uc3QgY3JlYXRlQ29udGVudEJveFVJID0gKGFwcCkgPT4ge1xuICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb25zdCB0aXRsZUljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XG5cbiAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJjb250ZW50LWJveC1jb250YWluZXJcIik7XG5cbiAgdGl0bGVJY29uLmNsYXNzTGlzdC5hZGQoXCJtYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkXCIpO1xuICB0aXRsZUljb24uYXBwZW5kKFwiY2hlY2tsaXN0XCIpO1xuXG4gIHRpdGxlLmNsYXNzTGlzdC5hZGQoXCJjb250ZW50LWJveC10aXRsZVwiLCBcImZsZXhcIik7XG5cbiAgdGl0bGUuYXBwZW5kKHRpdGxlSWNvbiwgXCJUby1Eb1wiKTtcblxuICBjb250YWluZXIuYXBwZW5kKHRpdGxlLCBjcmVhdGVOYXZiYXJVSShhcHApLCBjcmVhdGVIb2xkZXJCb3hVSShhcHAsIFwidG9kb3NcIiwgYXBwLmdldFRvZG9zQXJyKCksIG51bGwpKTtcblxuICByZXR1cm4gY29udGFpbmVyO1xufVxuXG5leHBvcnQgeyBjcmVhdGVDb250ZW50Qm94VUkgfTtcbiIsImltcG9ydCBcIi4vbmF2YmFyLmNzc1wiO1xuaW1wb3J0IHsgY3JlYXRlRm9ybVVJIH0gZnJvbSBcIi4uL3RvZG9Gb3JtL3RvZG9Gb3JtXCI7XG5pbXBvcnQgKiBhcyBkb21Db250cm9sbGVyIGZyb20gXCIuLi8uLi9kb21Db250cm9sbGVyL2RvbUNvbnRyb2xsZXJcIjtcbmltcG9ydCB7IGNyZWF0ZUhvbGRlckJveFVJIH0gZnJvbSBcIi4uL2hvbGRlckJveC9ob2xkZXJCb3hcIjtcblxuY29uc3QgY3JlYXRlTmF2YmFyVUkgPSAoYXBwKSA9PiB7XG4gIGxldCBuYXZiYXJNb2RlID0gXCJ0b2Rvc1wiO1xuICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb25zdCB0b2Rvc0J0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IHByb2plY3RzQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgY29uc3QgZGF5QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgY29uc3Qgd2Vla0J0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnN0IHBsdXNCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwibmF2YmFyLWNvbnRhaW5lclwiLCBcImZsZXhcIik7XG4gIGNvbnRhaW5lci5kYXRhc2V0Lm1vZGUgPSBuYXZiYXJNb2RlO1xuXG4gIHRvZG9zQnRuLmNsYXNzTGlzdC5hZGQoXCJuYXZiYXItYnRuXCIsIFwibmF2YmFyLWJ0bi1ncnAtMVwiLCBcIm5hdmJhci10b2Rvcy1idG5cIiwgXCJmbGV4XCIsIFwibmF2YmFyLWJ0bi1zZWxlY3RlZFwiKTtcblxuICB0b2Rvc0J0bi5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcnVwXCIsIChlKSA9PiB7XG4gICAgaGFuZGxlQnRuVUkoZSk7XG4gICAgdXBkYXRlTmF2YmFyTW9kZShcInRvZG9zXCIpO1xuXG4gICAgY29uc3QgdG9kb3NBcnIgPSBhcHAuZ2V0VG9kb3NBcnIoKTtcbiAgICBjb25zb2xlLmxvZyhcInRvZG9zQXJyOlwiLCB0b2Rvc0Fycik7XG4gICAgZG9tQ29udHJvbGxlci5nZXRDb250ZW50Qm94KCkuYXBwZW5kKGNyZWF0ZUhvbGRlckJveFVJKGFwcCwgXCJ0b2Rvc1wiLCB0b2Rvc0FyciwgbnVsbCkpO1xuICB9KTtcblxuICBwcm9qZWN0c0J0bi5jbGFzc0xpc3QuYWRkKFwibmF2YmFyLWJ0blwiLCBcIm5hdmJhci1idG4tZ3JwLTFcIiwgXCJuYXZiYXItcHJvamVjdHMtYnRuXCIsIFwiZmxleFwiKTtcbiAgcHJvamVjdHNCdG4uYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCAoZSkgPT4ge1xuICAgIGhhbmRsZUJ0blVJKGUpO1xuICAgIHVwZGF0ZU5hdmJhck1vZGUoXCJwcm9qZWN0c1wiKTtcblxuICAgIFxuICAgIGNvbnN0IHByb2plY3RzQXJyID0gYXBwLmdldFByb2plY3RzQXJyKCk7XG4gICAgY29uc29sZS5sb2coXCJwcm9qZWN0c0FycjpcIiwgcHJvamVjdHNBcnIpO1xuICAgIGRvbUNvbnRyb2xsZXIuZ2V0Q29udGVudEJveCgpLmFwcGVuZChjcmVhdGVIb2xkZXJCb3hVSShhcHAsIFwicHJvamVjdHNcIiwgcHJvamVjdHNBcnIpKTtcbiAgfSk7XG5cbiAgZGF5QnRuLmNsYXNzTGlzdC5hZGQoXCJuYXZiYXItYnRuXCIsIFwibmF2YmFyLWJ0bi1ncnAtMVwiLCBcIm5hdmJhci1kYXktYnRuXCIsIFwiZmxleFwiKTtcbiAgZGF5QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVydXBcIiwgKGUpID0+IHtcbiAgICBoYW5kbGVCdG5VSShlKTtcbiAgICB1cGRhdGVOYXZiYXJNb2RlKFwiZGF5XCIpO1xuICAgIFxuXG4gICAgY29uc3QgdG9kb3NBcnIgPSBhcHAuZ2V0VG9kb3NBcnIoKTtcbiAgICBjb25zb2xlLmxvZyhcInRvZG9zQXJyOlwiLCB0b2Rvc0Fycik7XG4gICAgZG9tQ29udHJvbGxlci5nZXRDb250ZW50Qm94KCkuYXBwZW5kKGNyZWF0ZUhvbGRlckJveFVJKGFwcCwgbmF2YmFyTW9kZSwgdG9kb3NBcnIsIG51bGwpKTtcbiAgfSk7XG5cbiAgd2Vla0J0bi5jbGFzc0xpc3QuYWRkKFwibmF2YmFyLWJ0blwiLCBcIm5hdmJhci1idG4tZ3JwLTFcIiwgXCJuYXZiYXItd2Vlay1idG5cIiwgXCJmbGV4XCIpO1xuICB3ZWVrQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVydXBcIiwgKGUpID0+IHtcbiAgICBoYW5kbGVCdG5VSShlKTtcbiAgICB1cGRhdGVOYXZiYXJNb2RlKFwid2Vla1wiKTtcblxuICAgIGNvbnN0IHRvZG9zQXJyID0gYXBwLmdldFRvZG9zQXJyKCk7XG4gICAgY29uc29sZS5sb2coXCJ0b2Rvc0FycjpcIiwgdG9kb3NBcnIpO1xuICAgIGRvbUNvbnRyb2xsZXIuZ2V0Q29udGVudEJveCgpLmFwcGVuZChjcmVhdGVIb2xkZXJCb3hVSShhcHAsIG5hdmJhck1vZGUsIHRvZG9zQXJyLCBudWxsKSk7XG4gIH0pO1xuXG4gIHBsdXNCdG4uY2xhc3NMaXN0LmFkZChcIm5hdmJhci1idG5cIiwgXCJuYXZiYXItYnRuLWdycC0yXCIsIFwibmF2YmFyLXBsdXMtYnRuXCIsIFwiZmxleFwiKTtcbiAgcGx1c0J0bi50aXRsZSA9IFwiQWRkIE5ld1wiO1xuICBwbHVzQnRuLmlubmVyVGV4dCA9IFwiK1wiO1xuICBwbHVzQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVydXBcIiwgKCkgPT4ge1xuICAgIGRvbUNvbnRyb2xsZXIuYXBwZW5kVG9Sb290KGNyZWF0ZUZvcm1VSShhcHAsIG5hdmJhck1vZGUsIFwiYWRkXCIsIG51bGwsIG51bGwsIG51bGwpKTtcbiAgICBkb21Db250cm9sbGVyLmdldEFwcENvbnRhaW5lcigpLmNsYXNzTGlzdC5hZGQoXCJkaXNhYmxlZFwiKTtcbiAgfSlcblxuICBmdW5jdGlvbiB1cGRhdGVOYXZiYXJNb2RlKG1vZGUpIHtcbiAgICBuYXZiYXJNb2RlID0gbW9kZTtcbiAgICBjb250YWluZXIuZGF0YXNldC5tb2RlID0gbmF2YmFyTW9kZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUJ0blVJKGUpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm5hdmJhci1idG4tZ3JwLTFcIikuZm9yRWFjaChidG4gPT4ge1xuICAgICAgYnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJuYXZiYXItYnRuLXNlbGVjdGVkXCIpO1xuICAgIH0pO1xuXG4gICAgZS50YXJnZXQuY2xhc3NMaXN0LmFkZChcIm5hdmJhci1idG4tc2VsZWN0ZWRcIik7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVCdG5zVGV4dCgpIHtcbiAgICBpZiAod2luZG93LmlubmVyV2lkdGggPCA2NTApIHtcbiAgICAgIHRvZG9zQnRuLmlubmVyVGV4dCA9IFwiVFwiO1xuICAgICAgcHJvamVjdHNCdG4uaW5uZXJUZXh0ID0gXCJQXCI7XG4gICAgICBkYXlCdG4uaW5uZXJUZXh0ID0gXCJEXCI7XG4gICAgICB3ZWVrQnRuLmlubmVyVGV4dCA9IFwiV1wiO1xuICAgIH0gZWxzZSB7XG4gICAgICB0b2Rvc0J0bi5pbm5lclRleHQgPSBcIlRvZG9zXCI7XG4gICAgICBwcm9qZWN0c0J0bi5pbm5lclRleHQgPSBcIlByb2plY3RzXCI7XG4gICAgICBkYXlCdG4uaW5uZXJUZXh0ID0gXCJEYXlcIjtcbiAgICAgIHdlZWtCdG4uaW5uZXJUZXh0ID0gXCJXZWVrXCI7XG4gICAgfVxuICAgIC8vIGNvbnNvbGUubG9nKHdpbmRvdy5pbm5lcldpZHRoKTtcbiAgfVxuXG4gIHVwZGF0ZUJ0bnNUZXh0KCk7XG5cbiAgd2luZG93Lm9ucmVzaXplID0gdXBkYXRlQnRuc1RleHQ7XG5cbiAgY29udGFpbmVyLmFwcGVuZCh0b2Rvc0J0biwgcHJvamVjdHNCdG4sIGRheUJ0biwgd2Vla0J0biwgcGx1c0J0bik7XG5cbiAgcmV0dXJuIGNvbnRhaW5lcjtcbn1cblxuZXhwb3J0IHsgY3JlYXRlTmF2YmFyVUkgfTsiXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJ1cmwiLCJvcHRpb25zIiwiU3RyaW5nIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0ZXN0Iiwic2xpY2UiLCJoYXNoIiwibmVlZFF1b3RlcyIsInJlcGxhY2UiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJtIiwibiIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwIiwiYiIsImJhc2VVUkkiLCJzZWxmIiwiaHJlZiIsIm5jIiwiZWwiLCJhdHRycyIsImdlbmVyYXRlUmFuZG9tSUQiLCJ0aXRsZSIsIm1pbiIsIm1heCIsIk1hdGgiLCJjZWlsIiwiZmxvb3IiLCJyYW5kb20iLCJnZXRUb2RheUluWVlZWU1NREQiLCJkYXRlIiwiRGF0ZSIsInllYXIiLCJnZXRGdWxsWWVhciIsIm1vbnRoIiwiZ2V0TW9udGgiLCJkYXkiLCJnZXREYXRlIiwicGFkU3RhcnQiLCJ0cmFuc2Zvcm1Ub1RvZG9zRGF0YSIsInRvZG9zQXJyIiwidG9kbyIsImdldElkIiwiY2hlY2tlZCIsImdldENoZWNrZWQiLCJnZXRUaXRsZSIsIm5vdGVzIiwiZ2V0Tm90ZXMiLCJkdWVEYXRlIiwiZ2V0RHVlRGF0ZSIsInByaW9yaXR5IiwiZ2V0UHJpb3JpdHkiLCJ1cGRhdGVMb2NhbFN0b3JhZ2UiLCJhcHAiLCJsb2NhbFN0b3JhZ2UiLCJ0b2Rvc0RhdGEiLCJnZXRUb2Rvc0FyciIsInByb2plY3RzRGF0YSIsInByb2plY3RzQXJyIiwicHJvamVjdCIsInRyYW5zZm9ybVRvUHJvamVjdHNEYXRhIiwiZ2V0UHJvamVjdHNBcnIiLCJnZXRBcHBDb250YWluZXIiLCJnZXRDb250ZW50Qm94IiwiYXBwZW5kVG9Sb290IiwiZWxlbSIsImFwcGVuZCIsImNyZWF0ZURlbENvbmZpcm1hdGlvblVJIiwidHlwZSIsIm9ialVJIiwiY29udGFpbmVyIiwiY29uZmlybWF0aW9uTXNnIiwiYnRuc0NvbnRhaW5lciIsIm5vQnRuIiwieWVzQnRuIiwicmVtb3ZlQ29udGFpbmVyIiwiY2xhc3NMaXN0IiwiYWRkIiwiaW5uZXJUZXh0IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUZyb21Ub2Rvc0FyciIsImNvbnNvbGUiLCJsb2ciLCJmb3JFYWNoIiwicmVtb3ZlRnJvbVByb2plY3RzQXJyIiwicmVxdWlyZWRBcmdzIiwicmVxdWlyZWQiLCJhcmdzIiwiVHlwZUVycm9yIiwiX3R5cGVvZiIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJpc0RhdGUiLCJ2YWx1ZSIsImFyZ3VtZW50cyIsInRvRGF0ZSIsImFyZ3VtZW50IiwiYXJnU3RyIiwiZ2V0VGltZSIsIndhcm4iLCJzdGFjayIsIk5hTiIsImlzVmFsaWQiLCJkaXJ0eURhdGUiLCJpc05hTiIsIk51bWJlciIsInRvSW50ZWdlciIsImRpcnR5TnVtYmVyIiwibnVtYmVyIiwiYWRkTWlsbGlzZWNvbmRzIiwiZGlydHlBbW91bnQiLCJ0aW1lc3RhbXAiLCJhbW91bnQiLCJzdWJNaWxsaXNlY29uZHMiLCJNSUxMSVNFQ09ORFNfSU5fREFZIiwic3RhcnRPZlVUQ0lTT1dlZWsiLCJ3ZWVrU3RhcnRzT24iLCJnZXRVVENEYXkiLCJkaWZmIiwic2V0VVRDRGF0ZSIsImdldFVUQ0RhdGUiLCJzZXRVVENIb3VycyIsImdldFVUQ0lTT1dlZWtZZWFyIiwiZ2V0VVRDRnVsbFllYXIiLCJmb3VydGhPZkphbnVhcnlPZk5leHRZZWFyIiwic2V0VVRDRnVsbFllYXIiLCJzdGFydE9mTmV4dFllYXIiLCJmb3VydGhPZkphbnVhcnlPZlRoaXNZZWFyIiwic3RhcnRPZlRoaXNZZWFyIiwic3RhcnRPZlVUQ0lTT1dlZWtZZWFyIiwiZm91cnRoT2ZKYW51YXJ5IiwiTUlMTElTRUNPTkRTX0lOX1dFRUsiLCJkZWZhdWx0T3B0aW9ucyIsImdldERlZmF1bHRPcHRpb25zIiwic3RhcnRPZlVUQ1dlZWsiLCJfcmVmIiwiX3JlZjIiLCJfcmVmMyIsIl9vcHRpb25zJHdlZWtTdGFydHNPbiIsIl9vcHRpb25zJGxvY2FsZSIsIl9vcHRpb25zJGxvY2FsZSRvcHRpbyIsIl9kZWZhdWx0T3B0aW9ucyRsb2NhbCIsIl9kZWZhdWx0T3B0aW9ucyRsb2NhbDIiLCJsb2NhbGUiLCJSYW5nZUVycm9yIiwiZ2V0VVRDV2Vla1llYXIiLCJfb3B0aW9ucyRmaXJzdFdlZWtDb24iLCJmaXJzdFdlZWtDb250YWluc0RhdGUiLCJmaXJzdFdlZWtPZk5leHRZZWFyIiwiZmlyc3RXZWVrT2ZUaGlzWWVhciIsInN0YXJ0T2ZVVENXZWVrWWVhciIsImZpcnN0V2VlayIsImFkZExlYWRpbmdaZXJvcyIsInRhcmdldExlbmd0aCIsInNpZ24iLCJvdXRwdXQiLCJhYnMiLCJ0b2tlbiIsInNpZ25lZFllYXIiLCJnZXRVVENNb250aCIsImdldFVUQ0hvdXJzIiwiZ2V0VVRDTWludXRlcyIsImdldFVUQ1NlY29uZHMiLCJudW1iZXJPZkRpZ2l0cyIsIm1pbGxpc2Vjb25kcyIsImdldFVUQ01pbGxpc2Vjb25kcyIsInBvdyIsIkciLCJsb2NhbGl6ZSIsImVyYSIsIndpZHRoIiwieSIsIm9yZGluYWxOdW1iZXIiLCJ1bml0IiwibGlnaHRGb3JtYXR0ZXJzIiwiWSIsInNpZ25lZFdlZWtZZWFyIiwid2Vla1llYXIiLCJSIiwidSIsIlEiLCJxdWFydGVyIiwiY29udGV4dCIsInEiLCJNIiwiTCIsInciLCJ3ZWVrIiwicm91bmQiLCJnZXRVVENXZWVrIiwiSSIsImlzb1dlZWsiLCJnZXRVVENJU09XZWVrIiwiRCIsImRheU9mWWVhciIsInNldFVUQ01vbnRoIiwic3RhcnRPZlllYXJUaW1lc3RhbXAiLCJkaWZmZXJlbmNlIiwiZ2V0VVRDRGF5T2ZZZWFyIiwiRSIsImRheU9mV2VlayIsImxvY2FsRGF5T2ZXZWVrIiwiYyIsImlzb0RheU9mV2VlayIsImRheVBlcmlvZEVudW1WYWx1ZSIsImRheVBlcmlvZCIsInRvTG93ZXJDYXNlIiwiaG91cnMiLCJCIiwiaCIsIkgiLCJLIiwicyIsIlMiLCJYIiwiX2xvY2FsaXplIiwidGltZXpvbmVPZmZzZXQiLCJfb3JpZ2luYWxEYXRlIiwiZ2V0VGltZXpvbmVPZmZzZXQiLCJmb3JtYXRUaW1lem9uZVdpdGhPcHRpb25hbE1pbnV0ZXMiLCJmb3JtYXRUaW1lem9uZSIsIngiLCJPIiwiZm9ybWF0VGltZXpvbmVTaG9ydCIsInoiLCJ0Iiwib3JpZ2luYWxEYXRlIiwiVCIsIm9mZnNldCIsImRpcnR5RGVsaW1pdGVyIiwiYWJzT2Zmc2V0IiwibWludXRlcyIsImRlbGltaXRlciIsImRhdGVMb25nRm9ybWF0dGVyIiwicGF0dGVybiIsImZvcm1hdExvbmciLCJ0aW1lTG9uZ0Zvcm1hdHRlciIsInRpbWUiLCJQIiwiZGF0ZVRpbWVGb3JtYXQiLCJtYXRjaFJlc3VsdCIsIm1hdGNoIiwiZGF0ZVBhdHRlcm4iLCJ0aW1lUGF0dGVybiIsImRhdGVUaW1lIiwiZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcyIsInV0Y0RhdGUiLCJVVEMiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJnZXRTZWNvbmRzIiwiZ2V0TWlsbGlzZWNvbmRzIiwicHJvdGVjdGVkRGF5T2ZZZWFyVG9rZW5zIiwicHJvdGVjdGVkV2Vla1llYXJUb2tlbnMiLCJpc1Byb3RlY3RlZERheU9mWWVhclRva2VuIiwiaW5kZXhPZiIsImlzUHJvdGVjdGVkV2Vla1llYXJUb2tlbiIsInRocm93UHJvdGVjdGVkRXJyb3IiLCJmb3JtYXQiLCJpbnB1dCIsImZvcm1hdERpc3RhbmNlTG9jYWxlIiwibGVzc1RoYW5YU2Vjb25kcyIsIm9uZSIsIm90aGVyIiwieFNlY29uZHMiLCJoYWxmQU1pbnV0ZSIsImxlc3NUaGFuWE1pbnV0ZXMiLCJ4TWludXRlcyIsImFib3V0WEhvdXJzIiwieEhvdXJzIiwieERheXMiLCJhYm91dFhXZWVrcyIsInhXZWVrcyIsImFib3V0WE1vbnRocyIsInhNb250aHMiLCJhYm91dFhZZWFycyIsInhZZWFycyIsIm92ZXJYWWVhcnMiLCJhbG1vc3RYWWVhcnMiLCJidWlsZEZvcm1hdExvbmdGbiIsImRlZmF1bHRXaWR0aCIsImZvcm1hdHMiLCJmdWxsIiwibG9uZyIsIm1lZGl1bSIsInNob3J0IiwiZm9ybWF0UmVsYXRpdmVMb2NhbGUiLCJsYXN0V2VlayIsInllc3RlcmRheSIsInRvZGF5IiwidG9tb3Jyb3ciLCJuZXh0V2VlayIsImJ1aWxkTG9jYWxpemVGbiIsImRpcnR5SW5kZXgiLCJ2YWx1ZXNBcnJheSIsImZvcm1hdHRpbmdWYWx1ZXMiLCJkZWZhdWx0Rm9ybWF0dGluZ1dpZHRoIiwiX2RlZmF1bHRXaWR0aCIsIl93aWR0aCIsInZhbHVlcyIsImFyZ3VtZW50Q2FsbGJhY2siLCJfb3B0aW9ucyIsInJlbTEwMCIsIm5hcnJvdyIsImFiYnJldmlhdGVkIiwid2lkZSIsImFtIiwicG0iLCJtaWRuaWdodCIsIm5vb24iLCJtb3JuaW5nIiwiYWZ0ZXJub29uIiwiZXZlbmluZyIsIm5pZ2h0IiwiYnVpbGRNYXRjaEZuIiwic3RyaW5nIiwibWF0Y2hQYXR0ZXJuIiwibWF0Y2hQYXR0ZXJucyIsImRlZmF1bHRNYXRjaFdpZHRoIiwibWF0Y2hlZFN0cmluZyIsInBhcnNlUGF0dGVybnMiLCJkZWZhdWx0UGFyc2VXaWR0aCIsIkFycmF5IiwiaXNBcnJheSIsImZpbmRJbmRleCIsImZpbmRLZXkiLCJ2YWx1ZUNhbGxiYWNrIiwicmVzdCIsIm9iamVjdCIsInByZWRpY2F0ZSIsImFycmF5IiwicGFyc2VQYXR0ZXJuIiwicGFyc2VJbnQiLCJwYXJzZVJlc3VsdCIsImFueSIsImNvZGUiLCJmb3JtYXREaXN0YW5jZSIsInRva2VuVmFsdWUiLCJhZGRTdWZmaXgiLCJjb21wYXJpc29uIiwiZm9ybWF0UmVsYXRpdmUiLCJfZGF0ZSIsIl9iYXNlRGF0ZSIsImZvcm1hdHRpbmdUb2tlbnNSZWdFeHAiLCJsb25nRm9ybWF0dGluZ1Rva2Vuc1JlZ0V4cCIsImVzY2FwZWRTdHJpbmdSZWdFeHAiLCJkb3VibGVRdW90ZVJlZ0V4cCIsInVuZXNjYXBlZExhdGluQ2hhcmFjdGVyUmVnRXhwIiwiY2xlYW5Fc2NhcGVkU3RyaW5nIiwibWF0Y2hlZCIsInRvZG9JdGVtRmFjdG9yeSIsImlkRnJvbURhdGEiLCJlZGl0Q2hlY2tlZCIsImVkaXRUaXRsZSIsIm5ld1RpdGxlIiwiZWRpdE5vdGVzIiwibmV3Tm90ZXMiLCJlZGl0RHVlRGF0ZSIsIm5ld0R1ZURhdGUiLCJlZGl0UHJpb3JpdHkiLCJuZXdQcmlvcml0eSIsImNyZWF0ZVRvZG9JdGVtVUkiLCJ0b2RvSXRlbSIsInByb2plY3RJZCIsImxlZnRDb250YWluZXIiLCJyaWdodENvbnRhaW5lciIsImNoZWNrYm94Iiwic3VwIiwiZWRpdEljb24iLCJtb3ZlSWNvbiIsInRyYXNoSWNvbiIsInByb2Nlc3NlZER1ZURhdGUiLCJmb3JtYXREdWVEYXRlIiwiZGF0YXNldCIsImJvcmRlckxlZnQiLCJzdG9wUHJvcGFnYXRpb24iLCJ0b3BDb250YWluZXIiLCJib3R0b21Db250YWluZXIiLCJjbG9zZUJ0biIsInRvVXBwZXJDYXNlIiwiY3JlYXRlVG9kb0RldGFpbHNVSSIsInRvZ2dsZSIsIm5hdmJhck1vZGUiLCJtb2RlIiwiY3JlYXRlRm9ybVVJIiwicHJvamVjdHNCb3giLCJjYW5jZWxCdG4iLCJva0J0biIsInNlbGVjdGVkUHJvamVjdHMiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsInNlbGVjdGVkUHJvamVjdHNJZCIsInB1c2hUb1RvZG9zQXJyIiwiZmlsdGVyZWRQcm9qZWN0cyIsImZpbHRlciIsImV2ZXJ5IiwicHJvamVjdE9wdGlvblVJcyIsImNyZWF0ZVByb2plY3RPcHRpb25VSSIsImNyZWF0ZVByb2plY3RTZWxlY3RvclVJIiwic3BsaXQiLCJwcm9jZXNzZWRNIiwiZGlydHlGb3JtYXRTdHIiLCJfcmVmNCIsIl9vcHRpb25zJGxvY2FsZTIiLCJfb3B0aW9ucyRsb2NhbGUyJG9wdGkiLCJfcmVmNSIsIl9yZWY2IiwiX3JlZjciLCJfb3B0aW9ucyRsb2NhbGUzIiwiX29wdGlvbnMkbG9jYWxlMyRvcHRpIiwiX2RlZmF1bHRPcHRpb25zJGxvY2FsMyIsIl9kZWZhdWx0T3B0aW9ucyRsb2NhbDQiLCJmb3JtYXRTdHIiLCJkZWZhdWx0TG9jYWxlIiwiZm9ybWF0dGVyT3B0aW9ucyIsInN1YnN0cmluZyIsImZpcnN0Q2hhcmFjdGVyIiwibG9uZ0Zvcm1hdHRlciIsImZvcm1hdHRlciIsInVzZUFkZGl0aW9uYWxXZWVrWWVhclRva2VucyIsInVzZUFkZGl0aW9uYWxEYXlPZlllYXJUb2tlbnMiLCJzdGFydE9mV2VlayIsImdldERheSIsInNldERhdGUiLCJzZXRIb3VycyIsImlzU2FtZVdlZWsiLCJkaXJ0eURhdGVMZWZ0IiwiZGlydHlEYXRlUmlnaHQiLCJkYXRlTGVmdFN0YXJ0T2ZXZWVrIiwiZGF0ZVJpZ2h0U3RhcnRPZldlZWsiLCJpc1RoaXNXZWVrIiwibm93IiwiY3JlYXRlSG9sZGVyQm94VUkiLCJhcnIiLCJsYXN0RWxlbWVudENoaWxkIiwic29ydGVkQXJyIiwic29ydE9ianNCeURhdGVBc2MiLCJjcmVhdGVQcm9qZWN0VUkiLCJmaWx0ZXJlZEFyciIsImdldE9ianNEdWVUb2RheSIsImdldE9ianNEdWVUaGlzV2VlayIsIm9ianNBcnIiLCJzb3J0IiwiZGF0ZUxlZnQiLCJkYXRlUmlnaHQiLCJjb21wYXJlQXNjIiwicHJvamVjdEZhY3RvcnkiLCJ0b2Rvc0FyckZyb21EYXRhIiwiYWRkSWNvbiIsImJveCIsInRvZG9CdG4iLCJwcm9qZWN0QnRuIiwiY3JlYXRlVG9kb0ZpZWxkc1VJIiwiY3JlYXRlUHJvamVjdEZpZWxkc1VJIiwiZmllbGRzQ29udGFpbmVyIiwibWlkZGxlQ29udGFpbmVyIiwidGl0bGVJbnB1dCIsIm5vdGVzSW5wdXQiLCJkdWVEYXRlQ29udGFpbmVyIiwiZHVlRGF0ZUxhYmVsIiwiZHVlRGF0ZUlucHV0IiwicHJpb3JpdHlDb250YWluZXIiLCJwcmlvcml0eVRpdGxlIiwicHJpb3JpdHlPcHRpb25zQ29udGFpbmVyIiwibG93UHJpb3JpdHlJbnB1dCIsImxvd1ByaW9yaXR5TGFiZWwiLCJtaWRQcmlvcml0eUlucHV0IiwibWlkUHJpb3JpdHlMYWJlbCIsImhpZ2hQcmlvcml0eUlucHV0IiwiaGlnaFByaW9yaXR5TGFiZWwiLCJwcmV2ZW50RGVmYXVsdCIsImFkZFRvZG8iLCJlZGl0VG9kbyIsImFkZFRvUHJvamVjdCIsInBsYWNlaG9sZGVyIiwibmFtZSIsImNyZWF0ZUJvdHRvbUNvbnRhaW5lclVJIiwiYWRkUHJvamVjdCIsImVkaXRQcm9qZWN0IiwiZ2V0SW5wdXRWYWx1ZXMiLCJwcmlvcml0eUlucHV0IiwidGl0bGVWYWwiLCJub3Rlc1ZhbCIsImR1ZURhdGVWYWwiLCJwcmlvcml0eVZhbCIsImNyZWF0ZVRvZG9JdGVtIiwiaXNEdWVUb2RheSIsImlzRHVlVGhpc1dlZWsiLCJjaGVja0R1ZURhdGUiLCJyZW5kZXJUb2RvcyIsInVwZGF0ZVRvZG9zQXJyIiwicHVzaFRvUHJvamVjdHNBcnIiLCJyZW5kZXJQcm9qZWN0cyIsInVwZGF0ZVByb2plY3RzQXJyIiwidHJhbnNmb3JtVG9Ub2Rvc0FyciIsImluaXRpYWxpemVUb2Rvc0FyciIsImluaXRpYWxpemVQcm9qZWN0c0FyciIsImFwcEZhY3RvcnkiLCJwYXJzZSIsImluaXRpYWxpemVBcHAiLCJvbmJlZm9yZXVubG9hZCIsInRpdGxlSWNvbiIsInRvZG9zQnRuIiwicHJvamVjdHNCdG4iLCJkYXlCdG4iLCJ3ZWVrQnRuIiwicGx1c0J0biIsInVwZGF0ZU5hdmJhck1vZGUiLCJoYW5kbGVCdG5VSSIsImJ0biIsInVwZGF0ZUJ0bnNUZXh0IiwiaW5uZXJXaWR0aCIsIm9ucmVzaXplIiwiY3JlYXRlTmF2YmFyVUkiLCJjcmVhdGVDb250ZW50Qm94VUkiLCJjcmVhdGVBcHBVSSJdLCJzb3VyY2VSb290IjoiIn0=