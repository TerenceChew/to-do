(()=>{"use strict";var n={402:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".content-box-container {\n  width: 100%;\n  height: 100vh;\n  display: grid;\n  grid-template: 65px 1fr 100px / 1fr;\n  background-color: white;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.content-box-container::-webkit-scrollbar {\n  display: none;\n}\n\n.material-symbols-outlined {\n  font-variation-settings:\n  'FILL' 0,\n  'wght' 400,\n  'GRAD' 200,\n  'opsz' 48;\n  font-size: 1.85rem;\n}\n\n.content-box-title {\n  justify-content: center;\n  align-items: center;\n  gap: 11px;\n  grid-area: 1 / 1 / 2 / -1;\n  color: white;\n  background-color: var(--accent-3);\n  font-size: 2rem;\n  font-family: 'PT Mono', monospace;\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25);\n}\n\n@media (min-width: 650px) {\n  .content-box-container {\n    max-width: 950px;\n    max-height: 550px;\n    grid-template: 65px 1fr / 190px 1fr;\n    box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  }\n\n  .content-box-title {\n    justify-content: start;\n    padding-left: 25px;\n    padding-top: 4px;\n  }\n}\n\n@media (min-width: 850px) {\n  .content-box-container {\n    grid-template: 65px 1fr / 225px 1fr;\n  }\n\n  .material-symbols-outlined {\n    font-size: 2.2rem;\n  }\n\n  .content-box-title {\n    font-size: 2.3rem;\n  }\n}\n\n@media (min-width: 1600px) {\n  .content-box-container {\n    max-width: 1150px;\n    max-height: 600px;\n    grid-template: 65px 1fr / 250px 1fr;\n  }\n\n  .material-symbols-outlined {\n    font-size: 2.3rem;\n  }\n\n  .content-box-title {\n    font-size: 2.4rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/components/contentBox/contentBox.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,aAAa;EACb,aAAa;EACb,mCAAmC;EACnC,uBAAuB;EACvB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE;;;;WAIS;EACT,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,yBAAyB;EACzB,YAAY;EACZ,iCAAiC;EACjC,eAAe;EACf,iCAAiC;EACjC,2CAA2C;AAC7C;;AAEA;EACE;IACE,gBAAgB;IAChB,iBAAiB;IACjB,mCAAmC;IACnC,6CAA6C;EAC/C;;EAEA;IACE,sBAAsB;IACtB,kBAAkB;IAClB,gBAAgB;EAClB;AACF;;AAEA;EACE;IACE,mCAAmC;EACrC;;EAEA;IACE,iBAAiB;EACnB;;EAEA;IACE,iBAAiB;EACnB;AACF;;AAEA;EACE;IACE,iBAAiB;IACjB,iBAAiB;IACjB,mCAAmC;EACrC;;EAEA;IACE,iBAAiB;EACnB;;EAEA;IACE,iBAAiB;EACnB;AACF",sourcesContent:[".content-box-container {\n  width: 100%;\n  height: 100vh;\n  display: grid;\n  grid-template: 65px 1fr 100px / 1fr;\n  background-color: white;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.content-box-container::-webkit-scrollbar {\n  display: none;\n}\n\n.material-symbols-outlined {\n  font-variation-settings:\n  'FILL' 0,\n  'wght' 400,\n  'GRAD' 200,\n  'opsz' 48;\n  font-size: 1.85rem;\n}\n\n.content-box-title {\n  justify-content: center;\n  align-items: center;\n  gap: 11px;\n  grid-area: 1 / 1 / 2 / -1;\n  color: white;\n  background-color: var(--accent-3);\n  font-size: 2rem;\n  font-family: 'PT Mono', monospace;\n  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25);\n}\n\n@media (min-width: 650px) {\n  .content-box-container {\n    max-width: 950px;\n    max-height: 550px;\n    grid-template: 65px 1fr / 190px 1fr;\n    box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  }\n\n  .content-box-title {\n    justify-content: start;\n    padding-left: 25px;\n    padding-top: 4px;\n  }\n}\n\n@media (min-width: 850px) {\n  .content-box-container {\n    grid-template: 65px 1fr / 225px 1fr;\n  }\n\n  .material-symbols-outlined {\n    font-size: 2.2rem;\n  }\n\n  .content-box-title {\n    font-size: 2.3rem;\n  }\n}\n\n@media (min-width: 1600px) {\n  .content-box-container {\n    max-width: 1150px;\n    max-height: 600px;\n    grid-template: 65px 1fr / 250px 1fr;\n  }\n\n  .material-symbols-outlined {\n    font-size: 2.3rem;\n  }\n\n  .content-box-title {\n    font-size: 2.4rem;\n  }\n}\n"],sourceRoot:""}]);const A=i},52:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".del-confirmation-container {\n  width: 255px;\n  height: 140px;\n  gap: 35px;\n  background-color: white;\n  padding: 10px 15px;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.del-confirmation-msg {\n  font-size: 1.25rem;\n}\n\n.del-confirmation-btns-container {\n  gap: 15px;\n}\n\n.del-confirmation-no-btn,\n.del-confirmation-yes-btn {\n  width: 100px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.del-confirmation-no-btn:hover,\n.del-confirmation-yes-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.del-confirmation-no-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.del-confirmation-yes-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.del-confirmation-no-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.del-confirmation-yes-btn:hover {\n  background-color: var(--accent-1);\n}\n\n\n\n","",{version:3,sources:["webpack://./src/components/delConfirmation/delConfirmation.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,aAAa;EACb,SAAS;EACT,uBAAuB;EACvB,kBAAkB;EAClB,+BAA+B;EAC/B,kBAAkB;EAClB,6CAA6C;EAC7C,eAAe;EACf,QAAQ;EACR,SAAS;EACT,gCAAgC;AAClC;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,SAAS;AACX;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;EACf,uBAAuB;EACvB,eAAe;AACjB;;AAEA;;EAEE,YAAY;EACZ,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;AACnC",sourcesContent:[".del-confirmation-container {\n  width: 255px;\n  height: 140px;\n  gap: 35px;\n  background-color: white;\n  padding: 10px 15px;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.del-confirmation-msg {\n  font-size: 1.25rem;\n}\n\n.del-confirmation-btns-container {\n  gap: 15px;\n}\n\n.del-confirmation-no-btn,\n.del-confirmation-yes-btn {\n  width: 100px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.del-confirmation-no-btn:hover,\n.del-confirmation-yes-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.del-confirmation-no-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.del-confirmation-yes-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.del-confirmation-no-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.del-confirmation-yes-btn:hover {\n  background-color: var(--accent-1);\n}\n\n\n\n"],sourceRoot:""}]);const A=i},417:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".holder-box-container {\n  grid-area: 2 / 1 / 3 / -1;\n  justify-content: start;\n  align-items: center;\n  padding: 15px 10px;\n  font-family: 'Lato', sans-serif;\n  font-size: 1.15rem;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.holder-box-container::-webkit-scrollbar {\n  display: none;\n}\n\n@media (min-width: 650px) {\n  .holder-box-container {\n    grid-area: 2 / 2 / -1 / -1;\n    padding: 15px;\n  }\n}","",{version:3,sources:["webpack://./src/components/holderBox/holderBox.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;EAClB,+BAA+B;EAC/B,kBAAkB;EAClB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE;IACE,0BAA0B;IAC1B,aAAa;EACf;AACF",sourcesContent:[".holder-box-container {\n  grid-area: 2 / 1 / 3 / -1;\n  justify-content: start;\n  align-items: center;\n  padding: 15px 10px;\n  font-family: 'Lato', sans-serif;\n  font-size: 1.15rem;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.holder-box-container::-webkit-scrollbar {\n  display: none;\n}\n\n@media (min-width: 650px) {\n  .holder-box-container {\n    grid-area: 2 / 2 / -1 / -1;\n    padding: 15px;\n  }\n}"],sourceRoot:""}]);const A=i},851:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".navbar-container {\n  width: min(430px, 90%);\n  height: 70px;\n  place-self: center;\n  grid-area: 3 / 1 / -1 / -1;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 15px;\n  background-color: var(--accent-4);\n  border-radius: 14px;\n}\n\n.navbar-btn {\n  height: 47px;\n  width: 47px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 15px;\n  font-size: 1.3rem;\n  color: var(--accent-4);\n  transition: background-color .2s, transform .4s;\n  cursor: pointer;\n  opacity: 0;\n}\n\n.navbar-btn:hover {\n  transform: translateY(-4px);\n}\n\n.navbar-btn-selected {\n  background-color: var(--accent-1);\n}\n\n.navbar-btn-selected.navbar-btn:hover {\n  transform: none;\n}\n\n.navbar-btn-icon {\n  width: 27px;\n  height: 27px;\n}\n\n.navbar-plus-btn {\n  margin-bottom: 4px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 2.8rem;\n  color: var(--accent-1);\n  opacity: 1;\n}\n\n.navbar-plus-btn:hover {\n  color: var(--accent-1);\n}\n\n@media (min-width: 650px) {\n  .navbar-container {\n    width: 100%;\n    height: 100%;\n    place-self: auto;\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0 0 20px 0;\n    background-color: var(--accent-5);\n    box-shadow: 1px 0 4px 0 rgba(0, 0, 0, 0.25);\n    border-radius: 0;\n  }\n\n  .navbar-btn {\n    width: 100%;\n    height: 65px;\n    justify-content: start;\n    align-items: center;\n    padding-left: 15px;\n    position: relative;\n    font-size: 1.1rem;\n    font-family: 'Montserrat', sans-serif;\n    border-radius: 0;\n    border-right: 6px solid transparent;\n    transition: .55s;\n    opacity: 1;\n  }\n\n  .navbar-btn:hover,\n  .navbar-btn-selected  {\n    transform: none;\n    background-color: var(--accent-6);\n  }\n\n  .navbar-btn-selected {\n    border-right: 6px solid var(--accent-1);\n  }\n\n  .navbar-btn-grp-1::before {\n    width: 25px;\n    height: 25px;\n    content: attr(data-count);\n    position: absolute;\n    right: 20px;\n    top: 50%;\n    transform: translateY(-50%);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-bottom: 1px;\n    border-radius: 50%;\n    font-size: .85rem;\n    font-weight: bold;\n    color: var(--accent-3);\n    background-color: white;\n  }\n\n  .navbar-plus-btn {\n    width: 80px;\n    justify-content: center;\n    margin-top: auto;\n    padding-left: 0px;\n    font-size: 2.95rem;\n    color: var(--accent-1);\n    border: none;\n  }\n\n  .navbar-plus-btn:hover {\n    transform: scale(1.3);\n    color: var(--accent-1);\n    background-color: transparent;\n  }\n}\n\n@media (min-width: 850px) {\n  .navbar-btn {\n    padding-left: 20px;\n    font-size: 1.15rem;\n  }\n\n  .navbar-btn-grp-1::before {\n    right: 24px;\n  }\n\n  .navbar-plus-btn {\n    font-size: 2.95rem;\n  }\n}\n\n/* Animations */\n.animate-navbar-move-in {\n  animation: navbar-move-in 1s normal 0s 1 forwards;\n}\n\n@keyframes navbar-move-in {\n  from {\n    transform: translateY(150%);\n  }\n  \n  to {\n    transform: translateY(0);\n  }\n}\n\n.animate-btn-appear {\n  animation: btn-appear 1s normal .5s 1 forwards;\n}\n\n@keyframes btn-appear {\n  to {\n    opacity: 1;\n  }\n}\n","",{version:3,sources:["webpack://./src/components/navbar/navbar.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,YAAY;EACZ,kBAAkB;EAClB,0BAA0B;EAC1B,8BAA8B;EAC9B,mBAAmB;EACnB,eAAe;EACf,iCAAiC;EACjC,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,uBAAuB;EACvB,mBAAmB;EACnB,mBAAmB;EACnB,iBAAiB;EACjB,sBAAsB;EACtB,+CAA+C;EAC/C,eAAe;EACf,UAAU;AACZ;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,qCAAqC;EACrC,iBAAiB;EACjB,sBAAsB;EACtB,UAAU;AACZ;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE;IACE,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,wBAAwB;IACxB,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,iCAAiC;IACjC,2CAA2C;IAC3C,gBAAgB;EAClB;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,mBAAmB;IACnB,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;IACjB,qCAAqC;IACrC,gBAAgB;IAChB,mCAAmC;IACnC,gBAAgB;IAChB,UAAU;EACZ;;EAEA;;IAEE,eAAe;IACf,iCAAiC;EACnC;;EAEA;IACE,uCAAuC;EACzC;;EAEA;IACE,WAAW;IACX,YAAY;IACZ,yBAAyB;IACzB,kBAAkB;IAClB,WAAW;IACX,QAAQ;IACR,2BAA2B;IAC3B,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;IACjB,sBAAsB;IACtB,uBAAuB;EACzB;;EAEA;IACE,WAAW;IACX,uBAAuB;IACvB,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,sBAAsB;IACtB,YAAY;EACd;;EAEA;IACE,qBAAqB;IACrB,sBAAsB;IACtB,6BAA6B;EAC/B;AACF;;AAEA;EACE;IACE,kBAAkB;IAClB,kBAAkB;EACpB;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,kBAAkB;EACpB;AACF;;AAEA,eAAe;AACf;EACE,iDAAiD;AACnD;;AAEA;EACE;IACE,2BAA2B;EAC7B;;EAEA;IACE,wBAAwB;EAC1B;AACF;;AAEA;EACE,8CAA8C;AAChD;;AAEA;EACE;IACE,UAAU;EACZ;AACF",sourcesContent:[".navbar-container {\n  width: min(430px, 90%);\n  height: 70px;\n  place-self: center;\n  grid-area: 3 / 1 / -1 / -1;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 15px;\n  background-color: var(--accent-4);\n  border-radius: 14px;\n}\n\n.navbar-btn {\n  height: 47px;\n  width: 47px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 15px;\n  font-size: 1.3rem;\n  color: var(--accent-4);\n  transition: background-color .2s, transform .4s;\n  cursor: pointer;\n  opacity: 0;\n}\n\n.navbar-btn:hover {\n  transform: translateY(-4px);\n}\n\n.navbar-btn-selected {\n  background-color: var(--accent-1);\n}\n\n.navbar-btn-selected.navbar-btn:hover {\n  transform: none;\n}\n\n.navbar-btn-icon {\n  width: 27px;\n  height: 27px;\n}\n\n.navbar-plus-btn {\n  margin-bottom: 4px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 2.8rem;\n  color: var(--accent-1);\n  opacity: 1;\n}\n\n.navbar-plus-btn:hover {\n  color: var(--accent-1);\n}\n\n@media (min-width: 650px) {\n  .navbar-container {\n    width: 100%;\n    height: 100%;\n    place-self: auto;\n    grid-area: 2 / 1 / 3 / 2;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 0 0 20px 0;\n    background-color: var(--accent-5);\n    box-shadow: 1px 0 4px 0 rgba(0, 0, 0, 0.25);\n    border-radius: 0;\n  }\n\n  .navbar-btn {\n    width: 100%;\n    height: 65px;\n    justify-content: start;\n    align-items: center;\n    padding-left: 15px;\n    position: relative;\n    font-size: 1.1rem;\n    font-family: 'Montserrat', sans-serif;\n    border-radius: 0;\n    border-right: 6px solid transparent;\n    transition: .55s;\n    opacity: 1;\n  }\n\n  .navbar-btn:hover,\n  .navbar-btn-selected  {\n    transform: none;\n    background-color: var(--accent-6);\n  }\n\n  .navbar-btn-selected {\n    border-right: 6px solid var(--accent-1);\n  }\n\n  .navbar-btn-grp-1::before {\n    width: 25px;\n    height: 25px;\n    content: attr(data-count);\n    position: absolute;\n    right: 20px;\n    top: 50%;\n    transform: translateY(-50%);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-bottom: 1px;\n    border-radius: 50%;\n    font-size: .85rem;\n    font-weight: bold;\n    color: var(--accent-3);\n    background-color: white;\n  }\n\n  .navbar-plus-btn {\n    width: 80px;\n    justify-content: center;\n    margin-top: auto;\n    padding-left: 0px;\n    font-size: 2.95rem;\n    color: var(--accent-1);\n    border: none;\n  }\n\n  .navbar-plus-btn:hover {\n    transform: scale(1.3);\n    color: var(--accent-1);\n    background-color: transparent;\n  }\n}\n\n@media (min-width: 850px) {\n  .navbar-btn {\n    padding-left: 20px;\n    font-size: 1.15rem;\n  }\n\n  .navbar-btn-grp-1::before {\n    right: 24px;\n  }\n\n  .navbar-plus-btn {\n    font-size: 2.95rem;\n  }\n}\n\n/* Animations */\n.animate-navbar-move-in {\n  animation: navbar-move-in 1s normal 0s 1 forwards;\n}\n\n@keyframes navbar-move-in {\n  from {\n    transform: translateY(150%);\n  }\n  \n  to {\n    transform: translateY(0);\n  }\n}\n\n.animate-btn-appear {\n  animation: btn-appear 1s normal .5s 1 forwards;\n}\n\n@keyframes btn-appear {\n  to {\n    opacity: 1;\n  }\n}\n"],sourceRoot:""}]);const A=i},735:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".project-container {\n  width: 100%;\n  gap: 18px;\n  background-color: var(--accent-2);\n  padding: 12px 10px;\n  margin-bottom: 7px;\n  transition: .25s;\n  font-family: 'Lato', sans-serif;\n}\n\n.project-container:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.project-container:last-child {\n  margin-bottom: 0;\n}\n\n.project-title {\n  width: 185px;\n  margin-right: auto;\n  font-size: 1rem;\n  overflow-wrap: anywhere;\n}\n\n.project-add-icon {\n  margin-left: 2px;\n}\n\n.project-add-icon,\n.project-edit-icon,\n.project-trash-icon {\n  width: var(--icon-width-1);\n  height: var(--icon-height-1);\n}\n\n.project-add-icon:hover,\n.project-edit-icon:hover,\n.project-trash-icon:hover {\n  transform: scale(1.1);\n}\n\n.project-container,\n.project-add-icon,\n.project-edit-icon,\n.project-trash-icon {\n  cursor: pointer;\n}\n\n@media (min-width: 380px) {\n  .project-title {\n    width: 215px;\n  }\n}\n\n@media (min-width: 450px) {\n  .project-title {\n    width: 250px;\n  }\n}\n\n@media (min-width: 500px) {\n  .project-title {\n    width: 285px;\n  }\n}\n\n@media (min-width: 650px) {\n  .project-title {\n    width: 275px;\n  }\n}\n\n@media (min-width: 750px) {\n  .project-title {\n    width: 325px;\n  }\n}\n\n@media (min-width: 850px) {\n  .project-title {\n    width: 370px;\n  }\n}\n\n","",{version:3,sources:["webpack://./src/components/project/project.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,SAAS;EACT,iCAAiC;EACjC,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,+BAA+B;AACjC;;AAEA;EACE,6CAA6C;EAC7C,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;;EAGE,0BAA0B;EAC1B,4BAA4B;AAC9B;;AAEA;;;EAGE,qBAAqB;AACvB;;AAEA;;;;EAIE,eAAe;AACjB;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF",sourcesContent:[".project-container {\n  width: 100%;\n  gap: 18px;\n  background-color: var(--accent-2);\n  padding: 12px 10px;\n  margin-bottom: 7px;\n  transition: .25s;\n  font-family: 'Lato', sans-serif;\n}\n\n.project-container:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.project-container:last-child {\n  margin-bottom: 0;\n}\n\n.project-title {\n  width: 185px;\n  margin-right: auto;\n  font-size: 1rem;\n  overflow-wrap: anywhere;\n}\n\n.project-add-icon {\n  margin-left: 2px;\n}\n\n.project-add-icon,\n.project-edit-icon,\n.project-trash-icon {\n  width: var(--icon-width-1);\n  height: var(--icon-height-1);\n}\n\n.project-add-icon:hover,\n.project-edit-icon:hover,\n.project-trash-icon:hover {\n  transform: scale(1.1);\n}\n\n.project-container,\n.project-add-icon,\n.project-edit-icon,\n.project-trash-icon {\n  cursor: pointer;\n}\n\n@media (min-width: 380px) {\n  .project-title {\n    width: 215px;\n  }\n}\n\n@media (min-width: 450px) {\n  .project-title {\n    width: 250px;\n  }\n}\n\n@media (min-width: 500px) {\n  .project-title {\n    width: 285px;\n  }\n}\n\n@media (min-width: 650px) {\n  .project-title {\n    width: 275px;\n  }\n}\n\n@media (min-width: 750px) {\n  .project-title {\n    width: 325px;\n  }\n}\n\n@media (min-width: 850px) {\n  .project-title {\n    width: 370px;\n  }\n}\n\n"],sourceRoot:""}]);const A=i},117:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),A=t(667),s=t.n(A),c=new URL(t(530),t.b),d=i()(o()),l=s()(c);d.push([n.id,".project-selector-container {\n  height: min(425px, 95%);\n  width: 335px;\n  display: grid;\n  grid-template-rows: 65px 1fr 95px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n.project-selector-container::-webkit-scrollbar {\n  display: none;\n}\n\n.project-selector-title {\n  background-color: var(--accent-3);\n  border-radius: 8px 8px 0 0;\n  color: white;\n  font-size: 1.2rem;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.project-selector-projects-box {\n  width: 100%;\n  align-items: center;\n  padding: 15px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.project-selector-projects-box::-webkit-scrollbar {\n  display: none;\n}\n\n.project-selector-btns-container {\n  gap: 15px;\n  margin: 35px 0 25px 0;\n}\n\n.project-selector-cancel-btn, \n.project-selector-ok-btn {\n  width: 105px;\n  padding: 10px 20px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.project-selector-cancel-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.project-selector-ok-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.project-selector-cancel-btn:hover, \n.project-selector-ok-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.project-selector-cancel-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.project-selector-ok-btn:hover {\n  background-color: var(--accent-1);\n}\n\n.project-option {\n  width: 100%;\n  height: auto;\n  background-color: var(--accent-2);\n  padding: 13px 10px;\n  margin-bottom: 8px;\n  transition: .25s;\n  font-family: 'Lato', sans-serif;\n  position: relative;\n  cursor: pointer;\n}\n\n.project-option:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.project-option:last-child {\n  margin-bottom: 0;\n}\n\n.project-option-title {\n  width: 205px; \n  margin-right: auto;\n  overflow-wrap: anywhere;\n}\n\n.project-option-checkbox {\n  height: 20px;\n  width: 20px;\n  position: absolute;\n  top: 50%;\n  right: 15px;\n  transform: translateY(-50%);\n  background-color: white;\n  border: 2px solid var(--accent-1);\n  border-radius: 5px;\n}\n\n.selected .project-option-checkbox {\n  background-color: var(--accent-1);\n}\n\n.selected .project-option-checkbox::before {\n  height: 12px;\n  width: 12px;\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-image: url("+l+");\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n@media (min-width: 950px) {\n  .project-selector-container {\n    height: min(500px, 95%);\n    width: 380px;\n  }\n\n  .project-selector-title {\n    font-size: 1.25rem;\n  }\n\n  .project-option-title {\n    width: 265px; \n  }\n}","",{version:3,sources:["webpack://./src/components/projectSelector/projectSelector.css"],names:[],mappings:"AAAA;EACE,uBAAuB;EACvB,YAAY;EACZ,aAAa;EACb,iCAAiC;EACjC,eAAe;EACf,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,uBAAuB;EACvB,+BAA+B;EAC/B,kBAAkB;EAClB,6CAA6C;EAC7C,gBAAgB;EAChB,wBAAwB,GAAG,mCAAmC;EAC9D,qBAAqB,GAAG,+BAA+B;AACzD;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iCAAiC;EACjC,0BAA0B;EAC1B,YAAY;EACZ,iBAAiB;EACjB,qCAAqC;AACvC;;AAEA;EACE,WAAW;EACX,mBAAmB;EACnB,aAAa;EACb,gBAAgB;EAChB,wBAAwB,GAAG,mCAAmC;EAC9D,qBAAqB,GAAG,+BAA+B;AACzD;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE,SAAS;EACT,qBAAqB;AACvB;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,mBAAmB;EACnB,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;EACf,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;EACZ,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iCAAiC;EACjC,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,+BAA+B;EAC/B,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,6CAA6C;EAC7C,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,uBAAuB;AACzB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,WAAW;EACX,2BAA2B;EAC3B,uBAAuB;EACvB,iCAAiC;EACjC,kBAAkB;AACpB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,yDAAoC;EACpC,sBAAsB;EACtB,4BAA4B;AAC9B;;AAEA;EACE;IACE,uBAAuB;IACvB,YAAY;EACd;;EAEA;IACE,kBAAkB;EACpB;;EAEA;IACE,YAAY;EACd;AACF",sourcesContent:[".project-selector-container {\n  height: min(425px, 95%);\n  width: 335px;\n  display: grid;\n  grid-template-rows: 65px 1fr 95px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n.project-selector-container::-webkit-scrollbar {\n  display: none;\n}\n\n.project-selector-title {\n  background-color: var(--accent-3);\n  border-radius: 8px 8px 0 0;\n  color: white;\n  font-size: 1.2rem;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.project-selector-projects-box {\n  width: 100%;\n  align-items: center;\n  padding: 15px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.project-selector-projects-box::-webkit-scrollbar {\n  display: none;\n}\n\n.project-selector-btns-container {\n  gap: 15px;\n  margin: 35px 0 25px 0;\n}\n\n.project-selector-cancel-btn, \n.project-selector-ok-btn {\n  width: 105px;\n  padding: 10px 20px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.project-selector-cancel-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.project-selector-ok-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.project-selector-cancel-btn:hover, \n.project-selector-ok-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.project-selector-cancel-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.project-selector-ok-btn:hover {\n  background-color: var(--accent-1);\n}\n\n.project-option {\n  width: 100%;\n  height: auto;\n  background-color: var(--accent-2);\n  padding: 13px 10px;\n  margin-bottom: 8px;\n  transition: .25s;\n  font-family: 'Lato', sans-serif;\n  position: relative;\n  cursor: pointer;\n}\n\n.project-option:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.project-option:last-child {\n  margin-bottom: 0;\n}\n\n.project-option-title {\n  width: 205px; \n  margin-right: auto;\n  overflow-wrap: anywhere;\n}\n\n.project-option-checkbox {\n  height: 20px;\n  width: 20px;\n  position: absolute;\n  top: 50%;\n  right: 15px;\n  transform: translateY(-50%);\n  background-color: white;\n  border: 2px solid var(--accent-1);\n  border-radius: 5px;\n}\n\n.selected .project-option-checkbox {\n  background-color: var(--accent-1);\n}\n\n.selected .project-option-checkbox::before {\n  height: 12px;\n  width: 12px;\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-image: url(\"./check.png\");\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n@media (min-width: 950px) {\n  .project-selector-container {\n    height: min(500px, 95%);\n    width: 380px;\n  }\n\n  .project-selector-title {\n    font-size: 1.25rem;\n  }\n\n  .project-option-title {\n    width: 265px; \n  }\n}"],sourceRoot:""}]);const p=d},497:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".details-container {\n  width: 315px;\n  height: min(505px, 95%);\n  display: grid;\n  grid-template-rows: 40px 1fr;\n  gap: 20px;\n  padding: 10px 15px;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  background-color: white;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n.details-container::-webkit-scrollbar {\n  display: none;\n}\n\n.details-top-container {\n  justify-content: space-between;\n  align-items: center;\n}\n\n.details-bottom-container {\n  display: grid;\n  gap: 20px;\n  grid-template-rows: 90px 230px 60px;\n  justify-items: center;\n  align-items: center;\n  padding: 0 10px;\n}\n\n.details-priority {\n  border-radius: 4px;\n  padding: 1px 10px 3px 10px;\n  color: white;\n  font-weight: bold;\n}\n\n.details-priority-l {\n  border: 1px solid var(--low-prio);\n  background-color: var(--low-prio);\n}\n\n.details-priority-m {\n  border: 1px solid var(--medium-prio);\n  background-color: var(--medium-prio);\n}\n\n.details-priority-h {\n  border: 1px solid var(--high-prio);\n  background-color: var(--high-prio);\n}\n\n.details-title,\n.details-notes {\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  overflow-wrap: anywhere;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.details-title::-webkit-scrollbar,\n.details-notes::-webkit-scrollbar {\n  display: none;\n}\n\n.details-title {\n  text-align: center;\n  font-size: 1.1rem;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.details-notes {\n  text-align: left;\n}\n\n.details-close-btn {\n  padding: 10px 20px;\n  border: 1px solid var(--accent-1);\n  border-radius: 5px;\n  color: var(--accent-1);\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n}\n\n.details-close-btn:hover {\n  color: white;\n  background-color: var(--accent-1);\n  transform: translateY(-5px);\n  font-weight: bold;\n}","",{version:3,sources:["webpack://./src/components/todoDetails/todoDetails.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,uBAAuB;EACvB,aAAa;EACb,4BAA4B;EAC5B,SAAS;EACT,kBAAkB;EAClB,+BAA+B;EAC/B,kBAAkB;EAClB,uBAAuB;EACvB,6CAA6C;EAC7C,eAAe;EACf,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,gBAAgB;EAChB,wBAAwB,GAAG,mCAAmC;EAC9D,qBAAqB,GAAG,+BAA+B;AACzD;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,mCAAmC;EACnC,qBAAqB;EACrB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,0BAA0B;EAC1B,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;EACjC,iCAAiC;AACnC;;AAEA;EACE,oCAAoC;EACpC,oCAAoC;AACtC;;AAEA;EACE,kCAAkC;EAClC,kCAAkC;AACpC;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,uBAAuB;EACvB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;;EAEE,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,qCAAqC;AACvC;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,iCAAiC;EACjC,kBAAkB;EAClB,sBAAsB;EACtB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,iCAAiC;EACjC,2BAA2B;EAC3B,iBAAiB;AACnB",sourcesContent:[".details-container {\n  width: 315px;\n  height: min(505px, 95%);\n  display: grid;\n  grid-template-rows: 40px 1fr;\n  gap: 20px;\n  padding: 10px 15px;\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  background-color: white;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  overflow: scroll;\n  -ms-overflow-style: none;  /* Hide scrollbar for IE and Edge */\n  scrollbar-width: none;  /* Hide scrollbar for Firefox */\n}\n\n.details-container::-webkit-scrollbar {\n  display: none;\n}\n\n.details-top-container {\n  justify-content: space-between;\n  align-items: center;\n}\n\n.details-bottom-container {\n  display: grid;\n  gap: 20px;\n  grid-template-rows: 90px 230px 60px;\n  justify-items: center;\n  align-items: center;\n  padding: 0 10px;\n}\n\n.details-priority {\n  border-radius: 4px;\n  padding: 1px 10px 3px 10px;\n  color: white;\n  font-weight: bold;\n}\n\n.details-priority-l {\n  border: 1px solid var(--low-prio);\n  background-color: var(--low-prio);\n}\n\n.details-priority-m {\n  border: 1px solid var(--medium-prio);\n  background-color: var(--medium-prio);\n}\n\n.details-priority-h {\n  border: 1px solid var(--high-prio);\n  background-color: var(--high-prio);\n}\n\n.details-title,\n.details-notes {\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  overflow-wrap: anywhere;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.details-title::-webkit-scrollbar,\n.details-notes::-webkit-scrollbar {\n  display: none;\n}\n\n.details-title {\n  text-align: center;\n  font-size: 1.1rem;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.details-notes {\n  text-align: left;\n}\n\n.details-close-btn {\n  padding: 10px 20px;\n  border: 1px solid var(--accent-1);\n  border-radius: 5px;\n  color: var(--accent-1);\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n}\n\n.details-close-btn:hover {\n  color: white;\n  background-color: var(--accent-1);\n  transform: translateY(-5px);\n  font-weight: bold;\n}"],sourceRoot:""}]);const A=i},304:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".box {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.form-container {\n  width: 325px;\n  height: min(585px, 95%);\n  display: grid;\n  grid-template-rows: 65px 1fr;\n  gap: 5px;\n  background-color: white;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.form-container::-webkit-scrollbar {\n  display: none;\n}\n\n.project-fields-height {\n  height: min(245px, 95%);\n}\n\n.form-top-container {\n  grid-row: 1 / 2;\n  background-color: var(--accent-3);\n  border-radius: 8px 8px 0 0;\n}\n\n.form-todo-btn,\n.form-project-btn {\n  width: clamp(50%, 100%, 100%);\n  height: 100%;\n  color: white;\n  background-color: transparent;\n  border: none;\n  border-bottom: 4px solid white;\n  outline: none;\n  font-size: 1.2rem;\n  transition: .5s;\n  cursor: pointer;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.form-fields-container {\n  grid-row: 2 / 3;\n}\n\n.form-middle-container {\n  align-items: center;\n  justify-content: start;\n  padding: 0px 15px;\n}\n\n.form-title-input,\n.form-notes-input {\n  width: 100%;\n  border: none;\n  border-bottom: 4px solid rgba(0, 0, 0, 0.05);\n  outline: none;\n  resize: none;\n  padding: 15px 10px 10px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.form-title-input::-webkit-scrollbar,\n.form-notes-input::-webkit-scrollbar {\n  display: none;\n}\n\n.form-title-input {\n  height: 75px;\n}\n\n.form-notes-input {\n  height: 165px;\n}\n\n.form-due-date-container,\n.form-priority-container {\n  gap: 13px;\n  margin-top: 24px;\n}\n\n.form-due-date-label {\n  font-size: 1.05rem;\n}\n\n.form-due-date-input {\n  border-radius: 5px;\n  border: 2px solid rgba(26, 167, 125, 0.5);\n  outline: none;\n  padding: 5px 10px;\n  cursor: pointer;\n  color: black;\n}\n\n.form-priority-title {\n  font-size: 1.15rem;\n}\n\n.form-priority-options-container {\n  gap: 4px;\n}\n\n.form-priority-label {\n  border-radius: 4px;\n  padding: 1px 7px 3px 7px;\n  text-align: center;\n  transition: .25s;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.l-prio-label {\n  border: 1px solid var(--low-prio);\n  color: var(--low-prio);\n}\n\n.m-prio-label {\n  border: 1px solid var(--medium-prio);\n  color: var(--medium-prio);\n}\n\n.h-prio-label {\n  border: 1px solid var(--high-prio);\n  color: var(--high-prio);\n  margin-right: 18px;\n}\n\n.form-priority-radio:checked + .l-prio-label {\n  border: 1px solid var(--low-prio);\n  background-color: var(--low-prio);\n}\n\n.form-priority-radio:checked + .m-prio-label {\n  border: 1px solid var(--medium-prio);\n  background-color: var(--medium-prio);\n}\n\n.form-priority-radio:checked + .h-prio-label {\n  border: 1px solid var(--high-prio);\n  background-color: var(--high-prio);\n}\n\n.form-priority-radio:checked + .form-priority-label {\n  transform: scale(1.1);\n  color: white;\n}\n\n.form-bottom-container {\n  gap: 15px;\n  margin: 35px 0 25px 0;\n}\n\n.form-ok-btn,\n.form-cancel-btn {\n  width: 105px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.form-ok-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.form-cancel-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.form-ok-btn:hover,\n.form-cancel-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.form-ok-btn:hover {\n  background-color: var(--accent-1);\n}\n\n.form-cancel-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.border-btm-b {\n  border-bottom: 4px solid rgba(0, 0, 0, 0.75);\n}\n\n.border-btm-w {\n  border-bottom: 4px solid white;\n}\n\n.no-pointer-events {\n  pointer-events: none;\n}","",{version:3,sources:["webpack://./src/components/todoForm/todoForm.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;AACV;;AAEA;EACE,YAAY;EACZ,uBAAuB;EACvB,aAAa;EACb,4BAA4B;EAC5B,QAAQ;EACR,uBAAuB;EACvB,6CAA6C;EAC7C,+BAA+B;EAC/B,kBAAkB;EAClB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;EACE,aAAa;AACf;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,iCAAiC;EACjC,0BAA0B;AAC5B;;AAEA;;EAEE,6BAA6B;EAC7B,YAAY;EACZ,YAAY;EACZ,6BAA6B;EAC7B,YAAY;EACZ,8BAA8B;EAC9B,aAAa;EACb,iBAAiB;EACjB,eAAe;EACf,eAAe;EACf,qCAAqC;AACvC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,4CAA4C;EAC5C,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,gBAAgB;EAChB,wBAAwB,GAAG,gBAAgB;EAC3C,qBAAqB,GAAG,YAAY;AACtC;;AAEA,gDAAgD;AAChD;;EAEE,aAAa;AACf;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,yCAAyC;EACzC,aAAa;EACb,iBAAiB;EACjB,eAAe;EACf,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,QAAQ;AACV;;AAEA;EACE,kBAAkB;EAClB,wBAAwB;EACxB,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,oCAAoC;EACpC,yBAAyB;AAC3B;;AAEA;EACE,kCAAkC;EAClC,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,iCAAiC;EACjC,iCAAiC;AACnC;;AAEA;EACE,oCAAoC;EACpC,oCAAoC;AACtC;;AAEA;EACE,kCAAkC;EAClC,kCAAkC;AACpC;;AAEA;EACE,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,SAAS;EACT,qBAAqB;AACvB;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;EACrC,iBAAiB;EACjB,gBAAgB;EAChB,eAAe;EACf,eAAe;EACf,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;EACZ,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,4CAA4C;AAC9C;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,oBAAoB;AACtB",sourcesContent:[".box {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.form-container {\n  width: 325px;\n  height: min(585px, 95%);\n  display: grid;\n  grid-template-rows: 65px 1fr;\n  gap: 5px;\n  background-color: white;\n  box-shadow: 3px 3px 4px 0 rgba(0, 0, 0, 0.25);\n  font-family: 'Lato', sans-serif;\n  border-radius: 8px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.form-container::-webkit-scrollbar {\n  display: none;\n}\n\n.project-fields-height {\n  height: min(245px, 95%);\n}\n\n.form-top-container {\n  grid-row: 1 / 2;\n  background-color: var(--accent-3);\n  border-radius: 8px 8px 0 0;\n}\n\n.form-todo-btn,\n.form-project-btn {\n  width: clamp(50%, 100%, 100%);\n  height: 100%;\n  color: white;\n  background-color: transparent;\n  border: none;\n  border-bottom: 4px solid white;\n  outline: none;\n  font-size: 1.2rem;\n  transition: .5s;\n  cursor: pointer;\n  font-family: 'Montserrat', sans-serif;\n}\n\n.form-fields-container {\n  grid-row: 2 / 3;\n}\n\n.form-middle-container {\n  align-items: center;\n  justify-content: start;\n  padding: 0px 15px;\n}\n\n.form-title-input,\n.form-notes-input {\n  width: 100%;\n  border: none;\n  border-bottom: 4px solid rgba(0, 0, 0, 0.05);\n  outline: none;\n  resize: none;\n  padding: 15px 10px 10px;\n  overflow: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n}\n\n/* Hide scrollbar for Chrome, Safari and Opera */\n.form-title-input::-webkit-scrollbar,\n.form-notes-input::-webkit-scrollbar {\n  display: none;\n}\n\n.form-title-input {\n  height: 75px;\n}\n\n.form-notes-input {\n  height: 165px;\n}\n\n.form-due-date-container,\n.form-priority-container {\n  gap: 13px;\n  margin-top: 24px;\n}\n\n.form-due-date-label {\n  font-size: 1.05rem;\n}\n\n.form-due-date-input {\n  border-radius: 5px;\n  border: 2px solid rgba(26, 167, 125, 0.5);\n  outline: none;\n  padding: 5px 10px;\n  cursor: pointer;\n  color: black;\n}\n\n.form-priority-title {\n  font-size: 1.15rem;\n}\n\n.form-priority-options-container {\n  gap: 4px;\n}\n\n.form-priority-label {\n  border-radius: 4px;\n  padding: 1px 7px 3px 7px;\n  text-align: center;\n  transition: .25s;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.l-prio-label {\n  border: 1px solid var(--low-prio);\n  color: var(--low-prio);\n}\n\n.m-prio-label {\n  border: 1px solid var(--medium-prio);\n  color: var(--medium-prio);\n}\n\n.h-prio-label {\n  border: 1px solid var(--high-prio);\n  color: var(--high-prio);\n  margin-right: 18px;\n}\n\n.form-priority-radio:checked + .l-prio-label {\n  border: 1px solid var(--low-prio);\n  background-color: var(--low-prio);\n}\n\n.form-priority-radio:checked + .m-prio-label {\n  border: 1px solid var(--medium-prio);\n  background-color: var(--medium-prio);\n}\n\n.form-priority-radio:checked + .h-prio-label {\n  border: 1px solid var(--high-prio);\n  background-color: var(--high-prio);\n}\n\n.form-priority-radio:checked + .form-priority-label {\n  transform: scale(1.1);\n  color: white;\n}\n\n.form-bottom-container {\n  gap: 15px;\n  margin: 35px 0 25px 0;\n}\n\n.form-ok-btn,\n.form-cancel-btn {\n  width: 105px;\n  padding: 10px 20px;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: .85rem;\n  font-weight: 400;\n  cursor: pointer;\n  transition: .5s;\n  background-color: white;\n  cursor: pointer;\n}\n\n.form-ok-btn {\n  border: 1px solid var(--accent-1);\n  color: var(--accent-1);\n}\n\n.form-cancel-btn {\n  border: 1px solid var(--accent-3);\n  color: var(--accent-3);\n}\n\n.form-ok-btn:hover,\n.form-cancel-btn:hover {\n  color: white;\n  transform: translateY(-5px);\n  font-weight: bold;\n}\n\n.form-ok-btn:hover {\n  background-color: var(--accent-1);\n}\n\n.form-cancel-btn:hover {\n  background-color: var(--accent-3);\n}\n\n.border-btm-b {\n  border-bottom: 4px solid rgba(0, 0, 0, 0.75);\n}\n\n.border-btm-w {\n  border-bottom: 4px solid white;\n}\n\n.no-pointer-events {\n  pointer-events: none;\n}"],sourceRoot:""}]);const A=i},272:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),A=t(667),s=t.n(A),c=new URL(t(241),t.b),d=i()(o()),l=s()(c);d.push([n.id,'.item-container {\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  background-color: var(--accent-2);\n  padding: 14px 10px;\n  margin-bottom: 8px;\n  transition: .25s;\n  font-family: \'Lato\', sans-serif;\n  position: relative;\n}\n\n.item-container:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.item-container:last-child {\n  margin-bottom: 0;\n}\n\n.item-container:has(.item-checkbox.checked)::before {\n  width: calc(100% - 34px - 34px);\n  height: 100%;\n  content: "";\n  position: absolute;\n  left: 34px;\n  right: 34px;\n  background-color: rgba(240, 240, 240, 0.8);\n  filter: blur(1px);\n}\n\n.item-left-container {\n  gap: 12px;\n}\n\n.item-right-container {\n  gap: 14px;\n}\n\n.item-checkbox {\n  width: 19px;\n  height: 19px;\n  position:relative;\n  border: 2px solid var(--accent-1);\n  border-radius: 5px;\n  background-color: white;\n  font-size: 1.2rem;\n}\n\n.checked {\n  background-color: var(--accent-1);\n}\n\n.checked.item-checkbox::before {\n  width: 11px;\n  height: 11px;\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-image: url('+l+");\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n.no-pointer-events {\n  pointer-events: none;\n  cursor: auto;\n}\n\n.item-container.no-pointer-events .item-checkbox,\n.item-container.no-pointer-events .item-trash-icon {\n  pointer-events: all;\n  cursor: pointer;\n}\n\n.item-title {\n  width: 100px;\n  font-size: 1rem;\n  overflow-wrap: anywhere;\n}\n\n.item-due-date {\n  font-size: .9rem;\n}\n\n.item-edit-icon {\n  margin-left: 2px;\n}\n\n.item-edit-icon,\n.item-move-icon,\n.item-trash-icon  {\n  width: var(--icon-width-1);\n  height: var(--icon-height-1);\n  transition: .35s;\n}\n\n.item-edit-icon:hover,\n.item-move-icon:hover,\n.item-trash-icon:hover {\n  transform: scale(1.1);\n}\n\n.item-container,\n.item-checkbox,\n.item-edit-icon,\n.item-move-icon,\n.item-trash-icon {\n  cursor: pointer;\n}\n\n@media (min-width: 380px) {\n  .item-title {\n    width: 125px;\n  }\n}\n\n@media (min-width: 400px) {\n  .item-title {\n    width: 145px;\n  }\n}\n\n@media (min-width: 450px) {\n  .item-title {\n    width: 185px;\n  }\n}\n\n@media (min-width: 500px) {\n  .item-title {\n    width: 240px;\n  }\n}\n\n@media (min-width: 650px) {\n  .item-title {\n    width: 175px;\n  }\n  \n  .item-right-container {\n    gap: 18px;\n  }\n}\n\n@media (min-width: 750px) {\n  .item-title {\n    width: 270px;\n  }\n}\n\n@media (min-width: 850px) {\n  .item-title {\n    width: 330px;\n  }\n}\n\n","",{version:3,sources:["webpack://./src/components/todoItem/todoItem.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,8BAA8B;EAC9B,mBAAmB;EACnB,SAAS;EACT,iCAAiC;EACjC,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,+BAA+B;EAC/B,kBAAkB;AACpB;;AAEA;EACE,6CAA6C;EAC7C,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,+BAA+B;EAC/B,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,0CAA0C;EAC1C,iBAAiB;AACnB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,iCAAiC;EACjC,kBAAkB;EAClB,uBAAuB;EACvB,iBAAiB;AACnB;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,yDAAoC;EACpC,sBAAsB;EACtB,4BAA4B;AAC9B;;AAEA;EACE,oBAAoB;EACpB,YAAY;AACd;;AAEA;;EAEE,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;;EAGE,0BAA0B;EAC1B,4BAA4B;EAC5B,gBAAgB;AAClB;;AAEA;;;EAGE,qBAAqB;AACvB;;AAEA;;;;;EAKE,eAAe;AACjB;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;;EAEA;IACE,SAAS;EACX;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF;;AAEA;EACE;IACE,YAAY;EACd;AACF",sourcesContent:['.item-container {\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  background-color: var(--accent-2);\n  padding: 14px 10px;\n  margin-bottom: 8px;\n  transition: .25s;\n  font-family: \'Lato\', sans-serif;\n  position: relative;\n}\n\n.item-container:hover {\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.25);\n  transform: translateY(-1px);\n}\n\n.item-container:last-child {\n  margin-bottom: 0;\n}\n\n.item-container:has(.item-checkbox.checked)::before {\n  width: calc(100% - 34px - 34px);\n  height: 100%;\n  content: "";\n  position: absolute;\n  left: 34px;\n  right: 34px;\n  background-color: rgba(240, 240, 240, 0.8);\n  filter: blur(1px);\n}\n\n.item-left-container {\n  gap: 12px;\n}\n\n.item-right-container {\n  gap: 14px;\n}\n\n.item-checkbox {\n  width: 19px;\n  height: 19px;\n  position:relative;\n  border: 2px solid var(--accent-1);\n  border-radius: 5px;\n  background-color: white;\n  font-size: 1.2rem;\n}\n\n.checked {\n  background-color: var(--accent-1);\n}\n\n.checked.item-checkbox::before {\n  width: 11px;\n  height: 11px;\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-image: url("./check.png");\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n.no-pointer-events {\n  pointer-events: none;\n  cursor: auto;\n}\n\n.item-container.no-pointer-events .item-checkbox,\n.item-container.no-pointer-events .item-trash-icon {\n  pointer-events: all;\n  cursor: pointer;\n}\n\n.item-title {\n  width: 100px;\n  font-size: 1rem;\n  overflow-wrap: anywhere;\n}\n\n.item-due-date {\n  font-size: .9rem;\n}\n\n.item-edit-icon {\n  margin-left: 2px;\n}\n\n.item-edit-icon,\n.item-move-icon,\n.item-trash-icon  {\n  width: var(--icon-width-1);\n  height: var(--icon-height-1);\n  transition: .35s;\n}\n\n.item-edit-icon:hover,\n.item-move-icon:hover,\n.item-trash-icon:hover {\n  transform: scale(1.1);\n}\n\n.item-container,\n.item-checkbox,\n.item-edit-icon,\n.item-move-icon,\n.item-trash-icon {\n  cursor: pointer;\n}\n\n@media (min-width: 380px) {\n  .item-title {\n    width: 125px;\n  }\n}\n\n@media (min-width: 400px) {\n  .item-title {\n    width: 145px;\n  }\n}\n\n@media (min-width: 450px) {\n  .item-title {\n    width: 185px;\n  }\n}\n\n@media (min-width: 500px) {\n  .item-title {\n    width: 240px;\n  }\n}\n\n@media (min-width: 650px) {\n  .item-title {\n    width: 175px;\n  }\n  \n  .item-right-container {\n    gap: 18px;\n  }\n}\n\n@media (min-width: 750px) {\n  .item-title {\n    width: 270px;\n  }\n}\n\n@media (min-width: 850px) {\n  .item-title {\n    width: 330px;\n  }\n}\n\n'],sourceRoot:""}]);const p=d},618:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),A=t(667),s=t.n(A),c=new URL(t(891),t.b),d=i()(o());d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Alatsi&family=JetBrains+Mono:wght@200&family=Lato:wght@100;300&family=Lobster&family=Montserrat+Alternates:wght@300;400&family=Montserrat:wght@200;300;400&family=PT+Mono&family=Press+Start+2P&display=swap);"]);var l=s()(c);d.push([n.id,":root {\n  --accent-1: rgb(26, 167, 125);\n  --accent-2: rgb(240, 240, 240);\n  --accent-3: #cc7e97;\n  --accent-4: rgb(35, 35, 35);\n  --accent-5: rgba(220, 220, 220, 0.5);\n  --accent-6: rgba(205, 205, 205, 0.65);\n  --accent-7: rgb(255, 62, 101);\n  --low-prio: rgb(40, 207, 40);\n  --medium-prio: rgb(255, 187, 60);\n  --high-prio: rgb(255, 70, 70);\n  --icon-width-1: 20px;\n  --icon-height-1: 20px;\n}\n\n.app-container {\n  height: 100vh;\n  background-image: url("+l+");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n","",{version:3,sources:["webpack://./src/container/app.css"],names:[],mappings:"AAEA;EACE,6BAA6B;EAC7B,8BAA8B;EAC9B,mBAAmB;EACnB,2BAA2B;EAC3B,oCAAoC;EACpC,qCAAqC;EACrC,6BAA6B;EAC7B,4BAA4B;EAC5B,gCAAgC;EAChC,6BAA6B;EAC7B,oBAAoB;EACpB,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,yDAA2C;EAC3C,sBAAsB;EACtB,4BAA4B;EAC5B,2BAA2B;AAC7B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Alatsi&family=JetBrains+Mono:wght@200&family=Lato:wght@100;300&family=Lobster&family=Montserrat+Alternates:wght@300;400&family=Montserrat:wght@200;300;400&family=PT+Mono&family=Press+Start+2P&display=swap');\n\n:root {\n  --accent-1: rgb(26, 167, 125);\n  --accent-2: rgb(240, 240, 240);\n  --accent-3: #cc7e97;\n  --accent-4: rgb(35, 35, 35);\n  --accent-5: rgba(220, 220, 220, 0.5);\n  --accent-6: rgba(205, 205, 205, 0.65);\n  --accent-7: rgb(255, 62, 101);\n  --low-prio: rgb(40, 207, 40);\n  --medium-prio: rgb(255, 187, 60);\n  --high-prio: rgb(255, 70, 70);\n  --icon-width-1: 20px;\n  --icon-height-1: 20px;\n}\n\n.app-container {\n  height: 100vh;\n  background-image: url(\"./bg-wallpaper.jpg\");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n"],sourceRoot:""}]);const p=d},424:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/* Utilities */\n.flex {\n  display: flex;\n}\n\n.flex-column {\n  display: flex;\n  flex-direction: column;\n}\n\n.center {\n  justify-content: center;\n  align-items: center;\n}\n\n.hidden {\n  opacity: 0;\n}\n\n.disabled {\n  filter: blur(1px) grayscale(50%) brightness(50%);\n  pointer-events: none;\n}\n\n.animate-box-appear {\n  animation: box-appear .7s 0s 1 forwards;\n}\n\n@keyframes box-appear {\n  0% {\n    opacity: 0;\n  }\n  \n  100% {\n    opacity: 1;\n  }\n}\n\n.animate-delete {\n  animation: delete 1.2s 0s 1 forwards;\n}\n\n@keyframes delete {\n  to {\n    transform: translateX(150%);\n  }\n}\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;;EAGE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA,cAAc;AACd;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,gDAAgD;EAChD,oBAAoB;AACtB;;AAEA;EACE,uCAAuC;AACzC;;AAEA;EACE;IACE,UAAU;EACZ;;EAEA;IACE,UAAU;EACZ;AACF;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE;IACE,2BAA2B;EAC7B;AACF",sourcesContent:["*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/* Utilities */\n.flex {\n  display: flex;\n}\n\n.flex-column {\n  display: flex;\n  flex-direction: column;\n}\n\n.center {\n  justify-content: center;\n  align-items: center;\n}\n\n.hidden {\n  opacity: 0;\n}\n\n.disabled {\n  filter: blur(1px) grayscale(50%) brightness(50%);\n  pointer-events: none;\n}\n\n.animate-box-appear {\n  animation: box-appear .7s 0s 1 forwards;\n}\n\n@keyframes box-appear {\n  0% {\n    opacity: 0;\n  }\n  \n  100% {\n    opacity: 1;\n  }\n}\n\n.animate-delete {\n  animation: delete 1.2s 0s 1 forwards;\n}\n\n@keyframes delete {\n  to {\n    transform: translateX(150%);\n  }\n}\n"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=r.base?s[0]+r.base:s[0],d=a[c]||0,l="".concat(c," ").concat(d);a[c]=d+1;var p=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var s=r(n,o),c=0;c<a.length;c++){var d=t(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},530:(n,e,t)=>{n.exports=t.p+"a568f6f1b577d3fd06b6.png"},241:(n,e,t)=>{n.exports=t.p+"a568f6f1b577d3fd06b6.png"},891:(n,e,t)=>{n.exports=t.p+"cbb11493c646967b47db.jpg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),A=t(565),s=t.n(A),c=t(216),d=t.n(c),l=t(589),p=t.n(l),u=t(618),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var f=t(402),C={};C.styleTagTransform=p(),C.setAttributes=s(),C.insert=i().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=d(),e()(f.Z,C),f.Z&&f.Z.locals&&f.Z.locals;var g=t(851),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=d(),e()(g.Z,h),g.Z&&g.Z.locals&&g.Z.locals;var E=t(304),b={};function B(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function v(n){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},v(n)}function x(n){B(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"===v(n)&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function w(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}b.styleTagTransform=p(),b.setAttributes=s(),b.insert=i().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=d(),e()(E.Z,b),E.Z&&E.Z.locals&&E.Z.locals;var y={};function k(){return y}function j(n,e){var t,r,o,a,i,A,s,c;B(1,arguments);var d=k(),l=w(null!==(t=null!==(r=null!==(o=null!==(a=null==e?void 0:e.weekStartsOn)&&void 0!==a?a:null==e||null===(i=e.locale)||void 0===i||null===(A=i.options)||void 0===A?void 0:A.weekStartsOn)&&void 0!==o?o:d.weekStartsOn)&&void 0!==r?r:null===(s=d.locale)||void 0===s||null===(c=s.options)||void 0===c?void 0:c.weekStartsOn)&&void 0!==t?t:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var p=x(n),u=p.getDay(),m=(u<l?7:0)+u-l;return p.setDate(p.getDate()-m),p.setHours(0,0,0,0),p}function T(n,e,t){B(2,arguments);var r=j(n,t),o=j(e,t);return r.getTime()===o.getTime()}function L(n,e){return B(1,arguments),T(n,Date.now(),e)}const Y=n=>{const e=M();return n.filter((n=>n.getDueDate()===e))},S=n=>n.filter((n=>{const e=`${n.getDueDate()}T00:00:00`;return L(new Date(e),{weekStartsOn:1})})),D=(n,e)=>{for(const t in e)n[t]=e[t]},I=n=>{return`${n}-${e=1,t=1e6,e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e+1)+e)}`;var e,t},M=()=>{const n=new Date,e=String(n.getFullYear()),t=String(n.getMonth()+1),r=String(n.getDate());return`${e}-${t.padStart(2,"0")}-${r.padStart(2,"0")}`},P=n=>n.map((n=>({id:n.getId(),checked:n.getChecked(),title:n.getTitle(),notes:n.getNotes(),dueDate:n.getDueDate(),priority:n.getPriority()}))),z=n=>{localStorage.todosData=JSON.stringify(P(n.getTodosArr())),localStorage.projectsData=JSON.stringify((n=>{const e=n.map((n=>({id:n.getId(),todosData:P(n.getTodosArr()),title:n.getTitle()})));return e})(n.getProjectsArr()))},q=()=>document.querySelector(".app-container"),W=()=>document.querySelector(".content-box-container"),Z=n=>{document.querySelector("#root").append(n)};var U=t(272),F={};function O(n){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},O(n)}function N(n){return B(1,arguments),n instanceof Date||"object"===O(n)&&"[object Date]"===Object.prototype.toString.call(n)}function G(n){if(B(1,arguments),!N(n)&&"number"!=typeof n)return!1;var e=x(n);return!isNaN(Number(e))}function H(n,e){B(2,arguments);var t=x(n).getTime(),r=w(e);return new Date(t+r)}function R(n,e){B(2,arguments);var t=w(e);return H(n,-t)}F.styleTagTransform=p(),F.setAttributes=s(),F.insert=i().bind(null,"head"),F.domAPI=o(),F.insertStyleElement=d(),e()(U.Z,F),U.Z&&U.Z.locals&&U.Z.locals;var X=864e5;function Q(n){B(1,arguments);var e=1,t=x(n),r=t.getUTCDay(),o=(r<e?7:0)+r-e;return t.setUTCDate(t.getUTCDate()-o),t.setUTCHours(0,0,0,0),t}function V(n){B(1,arguments);var e=x(n),t=e.getUTCFullYear(),r=new Date(0);r.setUTCFullYear(t+1,0,4),r.setUTCHours(0,0,0,0);var o=Q(r),a=new Date(0);a.setUTCFullYear(t,0,4),a.setUTCHours(0,0,0,0);var i=Q(a);return e.getTime()>=o.getTime()?t+1:e.getTime()>=i.getTime()?t:t-1}function J(n){B(1,arguments);var e=V(n),t=new Date(0);t.setUTCFullYear(e,0,4),t.setUTCHours(0,0,0,0);var r=Q(t);return r}var $=6048e5;function _(n,e){var t,r,o,a,i,A,s,c;B(1,arguments);var d=k(),l=w(null!==(t=null!==(r=null!==(o=null!==(a=null==e?void 0:e.weekStartsOn)&&void 0!==a?a:null==e||null===(i=e.locale)||void 0===i||null===(A=i.options)||void 0===A?void 0:A.weekStartsOn)&&void 0!==o?o:d.weekStartsOn)&&void 0!==r?r:null===(s=d.locale)||void 0===s||null===(c=s.options)||void 0===c?void 0:c.weekStartsOn)&&void 0!==t?t:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var p=x(n),u=p.getUTCDay(),m=(u<l?7:0)+u-l;return p.setUTCDate(p.getUTCDate()-m),p.setUTCHours(0,0,0,0),p}function K(n,e){var t,r,o,a,i,A,s,c;B(1,arguments);var d=x(n),l=d.getUTCFullYear(),p=k(),u=w(null!==(t=null!==(r=null!==(o=null!==(a=null==e?void 0:e.firstWeekContainsDate)&&void 0!==a?a:null==e||null===(i=e.locale)||void 0===i||null===(A=i.options)||void 0===A?void 0:A.firstWeekContainsDate)&&void 0!==o?o:p.firstWeekContainsDate)&&void 0!==r?r:null===(s=p.locale)||void 0===s||null===(c=s.options)||void 0===c?void 0:c.firstWeekContainsDate)&&void 0!==t?t:1);if(!(u>=1&&u<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var m=new Date(0);m.setUTCFullYear(l+1,0,u),m.setUTCHours(0,0,0,0);var f=_(m,e),C=new Date(0);C.setUTCFullYear(l,0,u),C.setUTCHours(0,0,0,0);var g=_(C,e);return d.getTime()>=f.getTime()?l+1:d.getTime()>=g.getTime()?l:l-1}function nn(n,e){var t,r,o,a,i,A,s,c;B(1,arguments);var d=k(),l=w(null!==(t=null!==(r=null!==(o=null!==(a=null==e?void 0:e.firstWeekContainsDate)&&void 0!==a?a:null==e||null===(i=e.locale)||void 0===i||null===(A=i.options)||void 0===A?void 0:A.firstWeekContainsDate)&&void 0!==o?o:d.firstWeekContainsDate)&&void 0!==r?r:null===(s=d.locale)||void 0===s||null===(c=s.options)||void 0===c?void 0:c.firstWeekContainsDate)&&void 0!==t?t:1),p=K(n,e),u=new Date(0);u.setUTCFullYear(p,0,l),u.setUTCHours(0,0,0,0);var m=_(u,e);return m}var en=6048e5;function tn(n,e){for(var t=n<0?"-":"",r=Math.abs(n).toString();r.length<e;)r="0"+r;return t+r}const rn=function(n,e){var t=n.getUTCFullYear(),r=t>0?t:1-t;return tn("yy"===e?r%100:r,e.length)},on=function(n,e){var t=n.getUTCMonth();return"M"===e?String(t+1):tn(t+1,2)},an=function(n,e){return tn(n.getUTCDate(),e.length)},An=function(n,e){return tn(n.getUTCHours()%12||12,e.length)},sn=function(n,e){return tn(n.getUTCHours(),e.length)},cn=function(n,e){return tn(n.getUTCMinutes(),e.length)},dn=function(n,e){return tn(n.getUTCSeconds(),e.length)},ln=function(n,e){var t=e.length,r=n.getUTCMilliseconds();return tn(Math.floor(r*Math.pow(10,t-3)),e.length)};var pn={G:function(n,e,t){var r=n.getUTCFullYear()>0?1:0;switch(e){case"G":case"GG":case"GGG":return t.era(r,{width:"abbreviated"});case"GGGGG":return t.era(r,{width:"narrow"});default:return t.era(r,{width:"wide"})}},y:function(n,e,t){if("yo"===e){var r=n.getUTCFullYear(),o=r>0?r:1-r;return t.ordinalNumber(o,{unit:"year"})}return rn(n,e)},Y:function(n,e,t,r){var o=K(n,r),a=o>0?o:1-o;return"YY"===e?tn(a%100,2):"Yo"===e?t.ordinalNumber(a,{unit:"year"}):tn(a,e.length)},R:function(n,e){return tn(V(n),e.length)},u:function(n,e){return tn(n.getUTCFullYear(),e.length)},Q:function(n,e,t){var r=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"Q":return String(r);case"QQ":return tn(r,2);case"Qo":return t.ordinalNumber(r,{unit:"quarter"});case"QQQ":return t.quarter(r,{width:"abbreviated",context:"formatting"});case"QQQQQ":return t.quarter(r,{width:"narrow",context:"formatting"});default:return t.quarter(r,{width:"wide",context:"formatting"})}},q:function(n,e,t){var r=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"q":return String(r);case"qq":return tn(r,2);case"qo":return t.ordinalNumber(r,{unit:"quarter"});case"qqq":return t.quarter(r,{width:"abbreviated",context:"standalone"});case"qqqqq":return t.quarter(r,{width:"narrow",context:"standalone"});default:return t.quarter(r,{width:"wide",context:"standalone"})}},M:function(n,e,t){var r=n.getUTCMonth();switch(e){case"M":case"MM":return on(n,e);case"Mo":return t.ordinalNumber(r+1,{unit:"month"});case"MMM":return t.month(r,{width:"abbreviated",context:"formatting"});case"MMMMM":return t.month(r,{width:"narrow",context:"formatting"});default:return t.month(r,{width:"wide",context:"formatting"})}},L:function(n,e,t){var r=n.getUTCMonth();switch(e){case"L":return String(r+1);case"LL":return tn(r+1,2);case"Lo":return t.ordinalNumber(r+1,{unit:"month"});case"LLL":return t.month(r,{width:"abbreviated",context:"standalone"});case"LLLLL":return t.month(r,{width:"narrow",context:"standalone"});default:return t.month(r,{width:"wide",context:"standalone"})}},w:function(n,e,t,r){var o=function(n,e){B(1,arguments);var t=x(n),r=_(t,e).getTime()-nn(t,e).getTime();return Math.round(r/en)+1}(n,r);return"wo"===e?t.ordinalNumber(o,{unit:"week"}):tn(o,e.length)},I:function(n,e,t){var r=function(n){B(1,arguments);var e=x(n),t=Q(e).getTime()-J(e).getTime();return Math.round(t/$)+1}(n);return"Io"===e?t.ordinalNumber(r,{unit:"week"}):tn(r,e.length)},d:function(n,e,t){return"do"===e?t.ordinalNumber(n.getUTCDate(),{unit:"date"}):an(n,e)},D:function(n,e,t){var r=function(n){B(1,arguments);var e=x(n),t=e.getTime();e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0);var r=e.getTime(),o=t-r;return Math.floor(o/X)+1}(n);return"Do"===e?t.ordinalNumber(r,{unit:"dayOfYear"}):tn(r,e.length)},E:function(n,e,t){var r=n.getUTCDay();switch(e){case"E":case"EE":case"EEE":return t.day(r,{width:"abbreviated",context:"formatting"});case"EEEEE":return t.day(r,{width:"narrow",context:"formatting"});case"EEEEEE":return t.day(r,{width:"short",context:"formatting"});default:return t.day(r,{width:"wide",context:"formatting"})}},e:function(n,e,t,r){var o=n.getUTCDay(),a=(o-r.weekStartsOn+8)%7||7;switch(e){case"e":return String(a);case"ee":return tn(a,2);case"eo":return t.ordinalNumber(a,{unit:"day"});case"eee":return t.day(o,{width:"abbreviated",context:"formatting"});case"eeeee":return t.day(o,{width:"narrow",context:"formatting"});case"eeeeee":return t.day(o,{width:"short",context:"formatting"});default:return t.day(o,{width:"wide",context:"formatting"})}},c:function(n,e,t,r){var o=n.getUTCDay(),a=(o-r.weekStartsOn+8)%7||7;switch(e){case"c":return String(a);case"cc":return tn(a,e.length);case"co":return t.ordinalNumber(a,{unit:"day"});case"ccc":return t.day(o,{width:"abbreviated",context:"standalone"});case"ccccc":return t.day(o,{width:"narrow",context:"standalone"});case"cccccc":return t.day(o,{width:"short",context:"standalone"});default:return t.day(o,{width:"wide",context:"standalone"})}},i:function(n,e,t){var r=n.getUTCDay(),o=0===r?7:r;switch(e){case"i":return String(o);case"ii":return tn(o,e.length);case"io":return t.ordinalNumber(o,{unit:"day"});case"iii":return t.day(r,{width:"abbreviated",context:"formatting"});case"iiiii":return t.day(r,{width:"narrow",context:"formatting"});case"iiiiii":return t.day(r,{width:"short",context:"formatting"});default:return t.day(r,{width:"wide",context:"formatting"})}},a:function(n,e,t){var r=n.getUTCHours()/12>=1?"pm":"am";switch(e){case"a":case"aa":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"aaa":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return t.dayPeriod(r,{width:"narrow",context:"formatting"});default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},b:function(n,e,t){var r,o=n.getUTCHours();switch(r=12===o?"noon":0===o?"midnight":o/12>=1?"pm":"am",e){case"b":case"bb":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"bbb":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return t.dayPeriod(r,{width:"narrow",context:"formatting"});default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},B:function(n,e,t){var r,o=n.getUTCHours();switch(r=o>=17?"evening":o>=12?"afternoon":o>=4?"morning":"night",e){case"B":case"BB":case"BBB":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"BBBBB":return t.dayPeriod(r,{width:"narrow",context:"formatting"});default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},h:function(n,e,t){if("ho"===e){var r=n.getUTCHours()%12;return 0===r&&(r=12),t.ordinalNumber(r,{unit:"hour"})}return An(n,e)},H:function(n,e,t){return"Ho"===e?t.ordinalNumber(n.getUTCHours(),{unit:"hour"}):sn(n,e)},K:function(n,e,t){var r=n.getUTCHours()%12;return"Ko"===e?t.ordinalNumber(r,{unit:"hour"}):tn(r,e.length)},k:function(n,e,t){var r=n.getUTCHours();return 0===r&&(r=24),"ko"===e?t.ordinalNumber(r,{unit:"hour"}):tn(r,e.length)},m:function(n,e,t){return"mo"===e?t.ordinalNumber(n.getUTCMinutes(),{unit:"minute"}):cn(n,e)},s:function(n,e,t){return"so"===e?t.ordinalNumber(n.getUTCSeconds(),{unit:"second"}):dn(n,e)},S:function(n,e){return ln(n,e)},X:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();if(0===o)return"Z";switch(e){case"X":return mn(o);case"XXXX":case"XX":return fn(o);default:return fn(o,":")}},x:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();switch(e){case"x":return mn(o);case"xxxx":case"xx":return fn(o);default:return fn(o,":")}},O:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();switch(e){case"O":case"OO":case"OOO":return"GMT"+un(o,":");default:return"GMT"+fn(o,":")}},z:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();switch(e){case"z":case"zz":case"zzz":return"GMT"+un(o,":");default:return"GMT"+fn(o,":")}},t:function(n,e,t,r){var o=r._originalDate||n;return tn(Math.floor(o.getTime()/1e3),e.length)},T:function(n,e,t,r){return tn((r._originalDate||n).getTime(),e.length)}};function un(n,e){var t=n>0?"-":"+",r=Math.abs(n),o=Math.floor(r/60),a=r%60;if(0===a)return t+String(o);var i=e||"";return t+String(o)+i+tn(a,2)}function mn(n,e){return n%60==0?(n>0?"-":"+")+tn(Math.abs(n)/60,2):fn(n,e)}function fn(n,e){var t=e||"",r=n>0?"-":"+",o=Math.abs(n);return r+tn(Math.floor(o/60),2)+t+tn(o%60,2)}const Cn=pn;var gn=function(n,e){switch(n){case"P":return e.date({width:"short"});case"PP":return e.date({width:"medium"});case"PPP":return e.date({width:"long"});default:return e.date({width:"full"})}},hn=function(n,e){switch(n){case"p":return e.time({width:"short"});case"pp":return e.time({width:"medium"});case"ppp":return e.time({width:"long"});default:return e.time({width:"full"})}};const En={p:hn,P:function(n,e){var t,r=n.match(/(P+)(p+)?/)||[],o=r[1],a=r[2];if(!a)return gn(n,e);switch(o){case"P":t=e.dateTime({width:"short"});break;case"PP":t=e.dateTime({width:"medium"});break;case"PPP":t=e.dateTime({width:"long"});break;default:t=e.dateTime({width:"full"})}return t.replace("{{date}}",gn(o,e)).replace("{{time}}",hn(a,e))}};function bn(n){var e=new Date(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()));return e.setUTCFullYear(n.getFullYear()),n.getTime()-e.getTime()}var Bn=["D","DD"],vn=["YY","YYYY"];function xn(n){return-1!==Bn.indexOf(n)}function wn(n){return-1!==vn.indexOf(n)}function yn(n,e,t){if("YYYY"===n)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("YY"===n)throw new RangeError("Use `yy` instead of `YY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("D"===n)throw new RangeError("Use `d` instead of `D` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("DD"===n)throw new RangeError("Use `dd` instead of `DD` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"))}var kn={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function jn(n){return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.width?String(e.width):n.defaultWidth,r=n.formats[t]||n.formats[n.defaultWidth];return r}}const Tn={date:jn({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:jn({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:jn({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var Ln={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function Yn(n){return function(e,t){var r;if("formatting"===(null!=t&&t.context?String(t.context):"standalone")&&n.formattingValues){var o=n.defaultFormattingWidth||n.defaultWidth,a=null!=t&&t.width?String(t.width):o;r=n.formattingValues[a]||n.formattingValues[o]}else{var i=n.defaultWidth,A=null!=t&&t.width?String(t.width):n.defaultWidth;r=n.values[A]||n.values[i]}return r[n.argumentCallback?n.argumentCallback(e):e]}}const Sn={ordinalNumber:function(n,e){var t=Number(n),r=t%100;if(r>20||r<10)switch(r%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"},era:Yn({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:Yn({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(n){return n-1}}),month:Yn({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:Yn({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:Yn({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function Dn(n){return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.width,o=r&&n.matchPatterns[r]||n.matchPatterns[n.defaultMatchWidth],a=e.match(o);if(!a)return null;var i,A=a[0],s=r&&n.parsePatterns[r]||n.parsePatterns[n.defaultParseWidth],c=Array.isArray(s)?Mn(s,(function(n){return n.test(A)})):In(s,(function(n){return n.test(A)}));i=n.valueCallback?n.valueCallback(c):c,i=t.valueCallback?t.valueCallback(i):i;var d=e.slice(A.length);return{value:i,rest:d}}}function In(n,e){for(var t in n)if(n.hasOwnProperty(t)&&e(n[t]))return t}function Mn(n,e){for(var t=0;t<n.length;t++)if(e(n[t]))return t}var Pn,zn={ordinalNumber:(Pn={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(n){return parseInt(n,10)}},function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=n.match(Pn.matchPattern);if(!t)return null;var r=t[0],o=n.match(Pn.parsePattern);if(!o)return null;var a=Pn.valueCallback?Pn.valueCallback(o[0]):o[0];a=e.valueCallback?e.valueCallback(a):a;var i=n.slice(r.length);return{value:a,rest:i}}),era:Dn({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:Dn({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(n){return n+1}}),month:Dn({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:Dn({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:Dn({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const qn={code:"en-US",formatDistance:function(n,e,t){var r,o=kn[n];return r="string"==typeof o?o:1===e?o.one:o.other.replace("{{count}}",e.toString()),null!=t&&t.addSuffix?t.comparison&&t.comparison>0?"in "+r:r+" ago":r},formatLong:Tn,formatRelative:function(n,e,t,r){return Ln[n]},localize:Sn,match:zn,options:{weekStartsOn:0,firstWeekContainsDate:1}};var Wn=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,Zn=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,Un=/^'([^]*?)'?$/,Fn=/''/g,On=/[a-zA-Z]/;function Nn(n){var e=n.match(Un);return e?e[1].replace(Fn,"'"):n}var Gn=t(497),Hn={};Hn.styleTagTransform=p(),Hn.setAttributes=s(),Hn.insert=i().bind(null,"head"),Hn.domAPI=o(),Hn.insertStyleElement=d(),e()(Gn.Z,Hn),Gn.Z&&Gn.Z.locals&&Gn.Z.locals;var Rn=t(52),Xn={};Xn.styleTagTransform=p(),Xn.setAttributes=s(),Xn.insert=i().bind(null,"head"),Xn.domAPI=o(),Xn.insertStyleElement=d(),e()(Rn.Z,Xn),Rn.Z&&Rn.Z.locals&&Rn.Z.locals;const Qn=n=>{n.remove(),q().classList.remove("disabled")},Vn=(n,e,t,r)=>{const o=document.createElement("div"),a=document.createElement("p"),i=document.createElement("div"),A=document.createElement("button"),s=document.createElement("button");return o.classList.add("del-confirmation-container","flex-column","center","animate-box-appear"),a.classList.add("del-confirmation-msg"),a.innerText="Confirm Delete?",i.classList.add("del-confirmation-btns-container","flex","center"),A.classList.add("del-confirmation-no-btn"),A.innerText="NO",A.addEventListener("pointerup",(()=>{Qn(o)})),s.classList.add("del-confirmation-yes-btn"),s.innerText="YES",s.addEventListener("pointerup",(()=>{"todo"===e?(n.removeFromTodosArr(t.getId()),n.getProjectsArr().forEach((n=>{n.removeFromTodosArr(t.getId())}))):"project"===e&&(n.removeFromProjectsArr(t.getId()),t.getTodosArr().forEach((e=>{n.removeFromTodosArr(e.getId())}))),z(n),(n=>{ze(n),qe(n),We(n),Ze(n)})(n),r.classList.add("animate-delete"),setTimeout((()=>{r.remove()}),1250),Qn(o)})),i.append(A,s),o.append(a,i),o};var Jn=t(117),$n={};$n.styleTagTransform=p(),$n.setAttributes=s(),$n.insert=i().bind(null,"head"),$n.domAPI=o(),$n.insertStyleElement=d(),e()(Jn.Z,$n),Jn.Z&&Jn.Z.locals&&Jn.Z.locals;const _n=(n,e)=>{const t=document.createElement("div"),r=document.createElement("p"),o=document.createElement("div"),a=document.createElement("div"),i=document.createElement("button"),A=document.createElement("button");t.classList.add("project-selector-container","animate-box-appear"),r.classList.add("project-selector-title","flex","center"),r.innerText="Add To Project",o.classList.add("project-selector-projects-box","flex-column"),a.classList.add("project-selector-btns-container","flex","center"),i.classList.add("project-selector-cancel-btn"),i.innerText="CANCEL",i.addEventListener("pointerup",(()=>{t.remove(),q().classList.remove("disabled")})),A.classList.add("project-selector-ok-btn"),A.innerText="OK",A.addEventListener("pointerup",(()=>{const r=Array.from(document.querySelectorAll(".project-option.selected"));if(!r.length)return q().classList.remove("disabled"),void t.remove();const o=r.map((n=>n.dataset.id));o.forEach((t=>{n.getProjectsArr().forEach((n=>{t===n.getId()&&n.pushToTodosArr(e)}))})),z(n),q().classList.remove("disabled"),t.remove()}));const s=n.getProjectsArr().filter((n=>n.getTodosArr().every((n=>n.getId()!==e.getId())))),c=s.map((n=>(n=>{const e=document.createElement("div"),t=document.createElement("p"),r=document.createElement("div");return e.classList.add("project-option","flex","center"),e.dataset.id=n.getId(),e.addEventListener("pointerup",(()=>{e.classList.toggle("selected")})),t.classList.add("project-option-title"),t.innerText=n.getTitle(),r.classList.add("project-option-checkbox"),e.append(t,r),e})(n)));return c.length?o.append(...c):o.append("No Projects"),a.append(i,A),t.append(r,o,a),t},Kn=t.p+"1f907a58b0cc1eaf0caf.svg",ne=t.p+"a220482e9ba79a8aa587.svg",ee=t.p+"ba8ee4721ed25900c034.svg",te=(n,e,t,r,o,a)=>{const i=a||I(e);return{getChecked:()=>n,getTitle:()=>e,getNotes:()=>t,getDueDate:()=>r,getPriority:()=>o,getId:()=>i,editChecked:()=>{n=!n},editTitle:n=>{e=n},editNotes:n=>{t=n},editDueDate:n=>{r=n},editPriority:n=>{o=n}}},re=(n,e,t)=>{const r=document.createElement("div"),o=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div"),A=document.createElement("p"),s=document.createElement("sup"),c=document.createElement("p"),d=document.createElement("img"),l=document.createElement("img"),p=document.createElement("img"),u=oe(n.getDueDate());return r.classList.add("item-container","flex","animate-box-appear"),r.dataset.id=n.getId(),r.dataset.projectId=t,r.style.borderLeft=`5px solid var(--${n.getPriority()}-prio)`,r.addEventListener("pointerup",(e=>{e.stopPropagation(),Z((({getPriority:n,getDueDate:e,getTitle:t,getNotes:r})=>{const o=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div"),A=document.createElement("div"),s=document.createElement("p"),c=document.createElement("p"),d=document.createElement("p"),l=document.createElement("button");return o.classList.add("details-container","animate-box-appear"),a.classList.add("details-top-container","flex"),i.classList.add("details-bottom-container"),A.classList.add("details-priority","flex","center"),"low"===n()?A.classList.add("details-priority-l"):"medium"===n()?A.classList.add("details-priority-m"):A.classList.add("details-priority-h"),A.innerText=n()[0].toUpperCase()+n().slice(1),s.classList.add("details-due-date","flex","center"),s.innerText=`Due: ${e()}`,c.classList.add("details-title","flex"),c.innerText=t(),d.classList.add("details-notes","flex"),d.innerText=r()||"No Notes",l.classList.add("details-close-btn"),l.innerText="CLOSE",l.addEventListener("pointerup",(()=>{o.remove(),q().classList.remove("disabled")})),a.append(A,s),i.append(c,d,l),o.append(a,i),o})(n)),q().classList.add("disabled")})),o.classList.add("item-left-container","flex","center"),a.classList.add("item-right-container","flex","center"),i.classList.add("item-checkbox","flex","center"),n.getChecked()&&(i.classList.add("checked"),r.classList.add("no-pointer-events")),i.addEventListener("pointerup",(t=>{t.stopPropagation(),i.classList.toggle("checked"),r.classList.toggle("no-pointer-events"),n.editChecked(),z(e)})),A.classList.add("item-title"),A.innerText=n.getTitle(),s.innerText=u.slice(-6,-4),c.classList.add("item-due-date"),c.append(u.slice(0,-6),s,u.slice(-4)),d.classList.add("item-edit-icon"),d.title="Edit Todo",d.src=Kn,d.addEventListener("pointerup",(t=>{t.stopPropagation();const o=document.querySelector(".navbar-container[data-mode]").dataset.mode,a="null"===r.dataset.projectId?null:r.dataset.projectId;Z(Le(e,o,"edit-todo",n,null,a)),q().classList.add("disabled")})),l.classList.add("item-move-icon"),l.title="Move to Project",l.src=ne,l.addEventListener("pointerup",(t=>{t.stopPropagation(),Z(_n(e,n)),q().classList.add("disabled")})),p.classList.add("item-trash-icon"),p.title="Delete Todo",p.src=ee,p.addEventListener("pointerup",(t=>{t.stopPropagation(),Z(Vn(e,"todo",n,r)),q().classList.add("disabled")})),o.append(i,A),a.append(c,d,l,p),r.append(o,a),r},oe=n=>{const[e,t,r]=n.split("-"),o=Number(t)-1;return function(n,e,t){var r,o,a,i,A,s,c,d,l,p,u,m,f,C,g,h,E,b;B(2,arguments);var v=String(e),y=k(),j=null!==(r=null!==(o=null==t?void 0:t.locale)&&void 0!==o?o:y.locale)&&void 0!==r?r:qn,T=w(null!==(a=null!==(i=null!==(A=null!==(s=null==t?void 0:t.firstWeekContainsDate)&&void 0!==s?s:null==t||null===(c=t.locale)||void 0===c||null===(d=c.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==A?A:y.firstWeekContainsDate)&&void 0!==i?i:null===(l=y.locale)||void 0===l||null===(p=l.options)||void 0===p?void 0:p.firstWeekContainsDate)&&void 0!==a?a:1);if(!(T>=1&&T<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var L=w(null!==(u=null!==(m=null!==(f=null!==(C=null==t?void 0:t.weekStartsOn)&&void 0!==C?C:null==t||null===(g=t.locale)||void 0===g||null===(h=g.options)||void 0===h?void 0:h.weekStartsOn)&&void 0!==f?f:y.weekStartsOn)&&void 0!==m?m:null===(E=y.locale)||void 0===E||null===(b=E.options)||void 0===b?void 0:b.weekStartsOn)&&void 0!==u?u:0);if(!(L>=0&&L<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!j.localize)throw new RangeError("locale must contain localize property");if(!j.formatLong)throw new RangeError("locale must contain formatLong property");var Y=x(n);if(!G(Y))throw new RangeError("Invalid time value");var S=bn(Y),D=R(Y,S),I={firstWeekContainsDate:T,weekStartsOn:L,locale:j,_originalDate:Y};return v.match(Zn).map((function(n){var e=n[0];return"p"===e||"P"===e?(0,En[e])(n,j.formatLong):n})).join("").match(Wn).map((function(r){if("''"===r)return"'";var o=r[0];if("'"===o)return Nn(r);var a=Cn[o];if(a)return null!=t&&t.useAdditionalWeekYearTokens||!wn(r)||yn(r,e,String(n)),null!=t&&t.useAdditionalDayOfYearTokens||!xn(r)||yn(r,e,String(n)),a(D,r,j.localize,I);if(o.match(On))throw new RangeError("Format string contains an unescaped latin alphabet character `"+o+"`");return r})).join("")}(new Date(e,o,r),"do MMM")};var ae=t(735),ie={};ie.styleTagTransform=p(),ie.setAttributes=s(),ie.insert=i().bind(null,"head"),ie.domAPI=o(),ie.insertStyleElement=d(),e()(ae.Z,ie),ae.Z&&ae.Z.locals&&ae.Z.locals;const Ae=t.p+"5c04c572798e520c3444.svg",se=t.p+"1f907a58b0cc1eaf0caf.svg",ce=t.p+"ba8ee4721ed25900c034.svg";var de=t(417),le={};le.styleTagTransform=p(),le.setAttributes=s(),le.insert=i().bind(null,"head"),le.domAPI=o(),le.insertStyleElement=d(),e()(de.Z,le),de.Z&&de.Z.locals&&de.Z.locals;const pe=n=>n.sort(((n,e)=>function(n,e){B(2,arguments);var t=x(n),r=x(e),o=t.getTime()-r.getTime();return o<0?-1:o>0?1:o}(new Date(n.getDueDate()),new Date(e.getDueDate())))),ue=(n,e,t,r)=>{const o=document.createElement("div");if(o.classList.add("holder-box-container","flex-column"),W()&&W().lastElementChild.remove(),!t.length&&"projects"===e)return o.append("No Projects"),o;if(!t.length)return o.append("No Todos"),o;if("todos"===e){const e=pe(t);return o.append(...e.map((e=>re(e,n,r)))),o}if("projects"===e)return o.append(...t.map((e=>fe(e,n)))),o;if("day"===e){const e=Y(t);return o.append(...e.map((e=>re(e,n,r)))),o}if("week"===e){const e=S(t),a=pe(e);return o.append(...a.map((e=>re(e,n,r)))),o}return o},me=(n,e,t)=>{const r=e||I(n);let o=t||[];return{getTitle:()=>n,getTodosArr:()=>o,getId:()=>r,editTitle:e=>{n=e},pushToTodosArr:n=>{o.push(n)},removeFromTodosArr:n=>{o=o.filter((e=>e.getId()!==n))}}},fe=(n,e)=>{const t=document.createElement("div"),r=document.createElement("p"),o=document.createElement("img"),a=document.createElement("img"),i=document.createElement("img");return t.classList.add("project-container","flex","center","animate-box-appear"),t.dataset.id=n.getId(),t.addEventListener("pointerup",(r=>{r.stopPropagation();const o=n.getTodosArr(),a=t.dataset.id;W().append(ue(e,"todos",o,a))})),r.classList.add("project-title"),r.innerText=n.getTitle(),o.classList.add("project-add-icon"),o.src=Ae,o.addEventListener("pointerup",(t=>{t.stopPropagation(),Z(Le(e,null,"add-to-project",null,n)),q().classList.add("disabled")})),a.classList.add("project-edit-icon"),a.src=se,a.addEventListener("pointerup",(t=>{t.stopPropagation();const r=document.querySelector(".navbar-container[data-mode]").dataset.mode;Z(Le(e,r,"edit-project",null,n)),q().classList.add("disabled")})),i.classList.add("project-trash-icon"),i.src=ce,i.addEventListener("pointerup",(r=>{r.stopPropagation(),Z(Vn(e,"project",n,t)),q().classList.add("disabled")})),t.append(r,o,a,i),t},Ce=(n,e,t,r,o,a,i)=>{const A=document.createElement("div"),s=document.createElement("form"),c=document.createElement("textarea"),d=document.createElement("textarea"),l=document.createElement("div"),p=document.createElement("label"),u=document.createElement("input"),m=document.createElement("div"),f=document.createElement("p"),C=document.createElement("div"),g=document.createElement("input"),h=document.createElement("label"),E=document.createElement("input"),b=document.createElement("label"),B=document.createElement("input"),v=document.createElement("label");return A.classList.add("form-fields-container","flex-column"),s.classList.add("form-middle-container","flex-column"),s.id="form",s.addEventListener("submit",(A=>{A.preventDefault(),"add"===t?ve(n,e):"edit-todo"===t?xe(n,e,o,i):"add-to-project"===t&&ke(n,a),q().classList.remove("disabled"),r.remove()})),c.classList.add("form-title-input"),c.placeholder="Enter Title",c.value=o?o.getTitle():"",c.setAttribute("maxlength","50"),c.required=!0,d.classList.add("form-notes-input"),d.placeholder="Enter Notes",d.value=o?o.getNotes():"",d.setAttribute("maxlength","300"),l.classList.add("form-due-date-container","flex-column","center"),p.classList.add("form-due-date-label"),p.innerText="Due Date",u.classList.add("form-due-date-input"),u.type="date",u.value=o?o.getDueDate():"22-11-11",u.required=!0,m.classList.add("form-priority-container","flex-column","center"),f.classList.add("form-priority-title"),f.innerText="Priority",C.classList.add("form-priority-options-container","flex"),D(g,{type:"radio",id:"l-prio",value:"low",name:"priority",required:!0,checked:!(!o||"low"!==o.getPriority())}),g.classList.add("form-priority-radio","hidden"),h.setAttribute("for","l-prio"),h.innerText="Low",h.classList.add("form-priority-label","l-prio-label"),D(E,{type:"radio",id:"m-prio",value:"medium",name:"priority",required:!0,checked:!(!o||"medium"!==o.getPriority())}),E.classList.add("form-priority-radio","hidden"),b.setAttribute("for","m-prio"),b.innerText="Medium",b.classList.add("form-priority-label","m-prio-label"),D(B,{type:"radio",id:"h-prio",value:"high",name:"priority",required:!0,checked:!(!o||"high"!==o.getPriority())}),B.classList.add("form-priority-radio","hidden"),v.setAttribute("for","h-prio"),v.innerText="High",v.classList.add("form-priority-label","h-prio-label"),A.append(s,he(r)),s.append(c,d,l,m),l.append(p,u),m.append(f,C),C.append(g,h,E,b,B,v),A},ge=(n,e,t,r,o)=>{const a=document.createElement("div"),i=document.createElement("form"),A=document.createElement("textarea");return a.classList.add("form-fields-container","flex-column"),i.classList.add("form-middle-container","flex-column"),i.id="form",i.addEventListener("submit",(a=>{a.preventDefault(),"add"===t?we(n,e):"edit-project"===t&&ye(n,e,o),q().classList.remove("disabled"),r.remove()})),A.classList.add("form-title-input"),A.placeholder="Enter Title",A.innerText=o?o.getTitle():"",A.setAttribute("maxlength","50"),A.required=!0,a.append(i,he(r)),i.append(A),a},he=n=>{const e=document.createElement("div"),t=document.createElement("button"),r=document.createElement("button");return e.classList.add("form-bottom-container","flex","center"),t.classList.add("form-cancel-btn"),t.innerText="CANCEL",t.addEventListener("pointerup",(()=>{n.remove(),q().classList.remove("disabled")})),r.classList.add("form-ok-btn"),r.innerText="OK",r.setAttribute("form","form"),e.append(t,r),e},Ee=()=>{const n=document.querySelector(".form-title-input"),e=document.querySelector(".form-notes-input"),t=document.querySelector(".form-due-date-input"),r=document.querySelector("input[name='priority']:checked");return{titleVal:n.value,notesVal:e?e.value:null,dueDateVal:t?t.value:null,priorityVal:r?r.value:null}},be=()=>{const{titleVal:n,notesVal:e,dueDateVal:t,priorityVal:r}=Ee();return te(!1,n,e,t,r,null)},Be=n=>{const e=M(),t=`${n.getDueDate()}T00:00:00`;return{isDueToday:n.getDueDate()===e,isDueThisWeek:L(new Date(t),{weekStartsOn:1})}},ve=(n,e)=>{const t=be(),{isDueToday:r,isDueThisWeek:o}=Be(t);n.pushToTodosArr(t),z(n),ze(n),We(n),Ze(n);const a=n.getTodosArr();je(n,e,a,r,o,null)},xe=(n,e,t,r)=>{const{titleVal:o,notesVal:a,dueDateVal:i,priorityVal:A}=Ee();t.editTitle(o),t.editNotes(a),t.editDueDate(i),t.editPriority(A),n.updateTodosArr(t),z(n),We(n),Ze(n);const{isDueToday:s,isDueThisWeek:c}=Be(t);if(r){const t=n.getProjectsArr().filter((n=>n.getId()===r))[0].getTodosArr();je(n,e,t,null,null,r)}else{const t=n.getTodosArr();je(n,e,t,s,c,null)}},we=(n,e)=>{const t=(()=>{const{titleVal:n}=Ee();return me(n,null,null)})();n.pushToProjectsArr(t),z(n),qe(n);const r=n.getProjectsArr();Te(n,e,r)},ye=(n,e,t)=>{const{titleVal:r}=Ee();t.editTitle(r),n.updateProjectsArr(t),z(n);const o=n.getProjectsArr();Te(n,e,o)},ke=(n,e)=>{const t=be();e.pushToTodosArr(t),n.pushToTodosArr(t),n.updateProjectsArr(e),z(n),ze(n),We(n),Ze(n)},je=(n,e,t,r,o,a)=>{"todos"===e?W().append(ue(n,"todos",t,a)):"day"===e&&r?W().append(ue(n,"day",t,a)):"week"===e&&o&&W().append(ue(n,"week",t,a))},Te=(n,e,t)=>{"projects"===e&&W().append(ue(n,"projects",t))},Le=(n,e,t,r,o,a)=>{const i=document.createElement("div"),A=document.createElement("div"),s=(()=>{const n=document.createElement("div");return n.classList.add("form-top-container","flex","center"),n})(),c=document.createElement("button"),d=document.createElement("button");return i.classList.add("box","flex","center","animate-box-appear"),A.classList.add("form-container"),c.classList.add("form-todo-btn"),c.innerText="edit-todo"===t?"Edit Todo":"New Todo",d.classList.add("form-project-btn"),d.innerText="edit-project"===t?"Edit Project":"New Project","edit-todo"===t?(c.classList.add("border-btm-w","no-pointer-events"),s.append(c),A.append(s,Ce(n,e,t,i,r,null,a)),i.append(A)):"edit-project"===t?(A.classList.add("project-fields-height"),d.classList.add("border-btm-w","no-pointer-events"),s.append(d),A.append(s,ge(n,e,t,i,o)),i.append(A)):"add-to-project"===t?(c.classList.add("border-btm-w","no-pointer-events"),s.append(c),A.append(s,Ce(n,e,t,i,null,o,null)),i.append(A)):(c.classList.add("border-btm-b"),s.append(c,d),A.append(s,Ce(n,e,t,i,null,null,null)),i.append(A),c.addEventListener("pointerup",(()=>{A.classList.remove("project-fields-height"),c.classList.add("border-btm-b"),d.classList.remove("border-btm-b"),A.lastElementChild.remove(),A.append(Ce(n,e,t,i,null,null,null)),i.append(A)})),d.addEventListener("pointerup",(()=>{A.classList.add("project-fields-height"),c.classList.remove("border-btm-b"),d.classList.add("border-btm-b"),A.lastElementChild.remove(),A.append(ge(n,e,t,i,null)),i.append(A)}))),i},Ye=t.p+"fca7267107ab84a927a4.png",Se=t.p+"e93f2a923fc7de099a60.png",De=t.p+"02b75d2441ca70aed6d3.png",Ie=t.p+"7511833571b88e0a38a2.png",Me=(n,e)=>{window.innerWidth<650?(((n,e,t,r)=>{n.innerText="",e.innerText="",t.innerText="",r.innerText="";const o=[Ye,Se,De,Ie];[n,e,t,r].forEach(((n,e)=>{const t=document.createElement("img");t.classList.add("navbar-btn-icon"),t.src=o[e],n.append(t)}))})(...n),n.forEach((n=>n.classList.add("animate-btn-appear"))),e.classList.add("animate-navbar-move-in")):(((n,e,t,r)=>{n.innerText="Todos",e.innerText="Projects",t.innerText="Day",r.innerText="Week"})(...n),n.forEach((n=>n.classList.remove("animate-btn-appear"))),e.classList.remove("animate-navbar-move-in"))},Pe=n=>{document.querySelectorAll(".navbar-btn-grp-1").forEach((n=>{n.classList.remove("navbar-btn-selected")})),document.querySelectorAll(".navbar-btn-icon").forEach((n=>{n.classList.remove("navbar-btn-selected")})),n.target.classList.contains("navbar-btn-icon")&&n.target.parentElement.classList.add("navbar-btn-selected"),n.target.classList.add("navbar-btn-selected")},ze=n=>{document.querySelector(".navbar-todos-btn").dataset.count=n.getTodosArr().length},qe=n=>{document.querySelector(".navbar-projects-btn").dataset.count=n.getProjectsArr().length},We=n=>{document.querySelector(".navbar-day-btn").dataset.count=Y(n.getTodosArr()).length},Ze=n=>{document.querySelector(".navbar-week-btn").dataset.count=S(n.getTodosArr()).length},Ue=n=>n.map((n=>{const{checked:e,title:t,notes:r,dueDate:o,priority:a,id:i}=n;return te(e,t,r,o,a,i)}));var Fe=t(424),Oe={};Oe.styleTagTransform=p(),Oe.setAttributes=s(),Oe.insert=i().bind(null,"head"),Oe.domAPI=o(),Oe.insertStyleElement=d(),e()(Fe.Z,Oe),Fe.Z&&Fe.Z.locals&&Fe.Z.locals,document.querySelector("#root").append((()=>{const n=document.createElement("div"),e=(()=>{let n=[],e=[];return{getTodosArr:()=>n,getProjectsArr:()=>e,initializeTodosArr:e=>{n=e},initializeProjectsArr:n=>{e=n},pushToTodosArr:e=>{n.push(e)},removeFromTodosArr:e=>{n=n.filter((n=>n.getId()!==e))},updateTodosArr:e=>{n=n.map((n=>n.getId()===e.getId()?e:n))},pushToProjectsArr:n=>{e.push(n)},removeFromProjectsArr:n=>{e=e.filter((e=>e.getId()!==n))},updateProjectsArr:n=>{e=e.map((e=>e.getId()===n.getId()?n:e))}}})();return(n=>{const[e,t]=(()=>{const n=te(!0,"Leg day","Squats x 100","2022-11-25","low",null);return[[te(!1,"CS fundamentals","Finish lesson 28","2022-11-28","high",null),te(!1,"Codewars practice","Complete 10 challenges today","2022-11-28","medium",null),te(!1,"Project update","Update sign-in form features","2022-11-28","high",null),n],[me("Fitness",null,[n])]]})();localStorage.todosData?n.initializeTodosArr(Ue(JSON.parse(localStorage.todosData))):n.initializeTodosArr(e),localStorage.projectsData?n.initializeProjectsArr(JSON.parse(localStorage.projectsData).map((n=>{const{title:e,id:t,todosData:r}=n,o=Ue(r);return me(e,t,o)}))):n.initializeProjectsArr(t)})(e),onbeforeunload=z(e),n.classList.add("app-container","flex-column","center"),n.append((n=>{const e=document.createElement("div"),t=document.createElement("span"),r=document.createElement("h1");return e.classList.add("content-box-container"),t.classList.add("material-symbols-outlined"),t.append("checklist"),r.classList.add("content-box-title","flex"),r.append(t,"To-Do"),e.append(r,(n=>{let e="todos";const t=document.createElement("div"),r=document.createElement("div"),o=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div"),A=document.createElement("div");function s(n){e=n,t.dataset.mode=e}t.classList.add("navbar-container","flex"),t.dataset.mode=e,r.classList.add("navbar-btn","navbar-btn-grp-1","navbar-todos-btn","flex","navbar-btn-selected"),r.dataset.count=n.getTodosArr().length,r.addEventListener("pointerup",(e=>{Pe(e),s("todos");const t=n.getTodosArr();W().append(ue(n,"todos",t,null))})),o.classList.add("navbar-btn","navbar-btn-grp-1","navbar-projects-btn","flex"),o.dataset.count=n.getProjectsArr().length,o.addEventListener("pointerup",(e=>{Pe(e),s("projects");const t=n.getProjectsArr();W().append(ue(n,"projects",t))})),a.classList.add("navbar-btn","navbar-btn-grp-1","navbar-day-btn","flex"),a.dataset.count=Y(n.getTodosArr()).length,a.addEventListener("pointerup",(t=>{Pe(t),s("day");const r=n.getTodosArr();W().append(ue(n,e,r,null))})),i.classList.add("navbar-btn","navbar-btn-grp-1","navbar-week-btn","flex"),i.dataset.count=S(n.getTodosArr()).length,i.addEventListener("pointerup",(t=>{Pe(t),s("week");const r=n.getTodosArr();W().append(ue(n,e,r,null))})),A.classList.add("navbar-btn","navbar-btn-grp-2","navbar-plus-btn","flex"),A.title="Add New",A.innerText="+",A.addEventListener("pointerup",(()=>{Z(Le(n,e,"add",null,null,null)),q().classList.add("disabled")}));const c=[r,o,a,i];return Me(c,t),window.onresize=()=>Me(c,t),t.append(r,o,a,i,A),t})(n),ue(n,"todos",n.getTodosArr(),null)),e})(e)),n})())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,